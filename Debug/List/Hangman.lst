
AVRASM ver. 2.1.30  C:\Users\N\Desktop\MicroProject\Repo\Debug\List\Hangman.asm Fri Feb 05 08:07:10 2021

C:\Users\N\Desktop\MicroProject\Repo\Debug\List\Hangman.asm(1088): warning: Register r5 already defined by the .DEF directive
C:\Users\N\Desktop\MicroProject\Repo\Debug\List\Hangman.asm(1089): warning: Register r4 already defined by the .DEF directive
C:\Users\N\Desktop\MicroProject\Repo\Debug\List\Hangman.asm(1090): warning: Register r7 already defined by the .DEF directive
C:\Users\N\Desktop\MicroProject\Repo\Debug\List\Hangman.asm(1091): warning: Register r6 already defined by the .DEF directive
C:\Users\N\Desktop\MicroProject\Repo\Debug\List\Hangman.asm(1092): warning: Register r8 already defined by the .DEF directive
C:\Users\N\Desktop\MicroProject\Repo\Debug\List\Hangman.asm(1093): warning: Register r9 already defined by the .DEF directive
C:\Users\N\Desktop\MicroProject\Repo\Debug\List\Hangman.asm(1094): warning: Register r10 already defined by the .DEF directive
C:\Users\N\Desktop\MicroProject\Repo\Debug\List\Hangman.asm(1095): warning: Register r11 already defined by the .DEF directive
C:\Users\N\Desktop\MicroProject\Repo\Debug\List\Hangman.asm(1096): warning: Register r12 already defined by the .DEF directive
C:\Users\N\Desktop\MicroProject\Repo\Debug\List\Hangman.asm(1097): warning: Register r13 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _colloc=R5
                 	.DEF _rowloc=R4
                 	.DEF _out=R7
                 	.DEF _SelectedCategory=R6
                 	.DEF _i=R8
                 	.DEF _i_msb=R9
                 	.DEF _h=R10
                 	.DEF _h_msb=R11
                 	.DEF _WordIndex=R12
                 	.DEF _WordIndex_msb=R13
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0464 	JMP  __RESET
000002 940c 05ab 	JMP  _ext_int0_isr
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 053f 	JMP  _timer1_ovf_isr
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G100:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000033 0000      	.DB  0x0,0x0
                 
                 _0x6:
000034 3231
000035 4133
000036 3536
000037 4234      	.DB  0x31,0x32,0x33,0x41,0x36,0x35,0x34,0x42
000038 3837
000039 4339
00003a 302a
00003b 4423      	.DB  0x37,0x38,0x39,0x43,0x2A,0x30,0x23,0x44
                 _0x17:
00003c 0260
00003d 0266
00003e 026c
00003f 0276      	.DB  LOW(_0x16),HIGH(_0x16),LOW(_0x16+6),HIGH(_0x16+6),LOW(_0x16+12),HIGH(_0x16+12),LOW(_0x16+22),HIGH(_0x16+22)
                 _0x19:
000040 0279
000041 0282
000042 028d
000043 0298      	.DB  LOW(_0x18),HIGH(_0x18),LOW(_0x18+9),HIGH(_0x18+9),LOW(_0x18+20),HIGH(_0x18+20),LOW(_0x18+31),HIGH(_0x18+31)
000044 029f
000045 02a6
000046 02ad
000047 02b4      	.DB  LOW(_0x18+38),HIGH(_0x18+38),LOW(_0x18+45),HIGH(_0x18+45),LOW(_0x18+52),HIGH(_0x18+52),LOW(_0x18+59),HIGH(_0x18+59)
000048 02bc
000049 02c6
00004a 02cd
00004b 02d2      	.DB  LOW(_0x18+67),HIGH(_0x18+67),LOW(_0x18+77),HIGH(_0x18+77),LOW(_0x18+84),HIGH(_0x18+84),LOW(_0x18+89),HIGH(_0x18+89)
00004c 02d7
00004d 02e0
00004e 02e9
00004f 02f1      	.DB  LOW(_0x18+94),HIGH(_0x18+94),LOW(_0x18+103),HIGH(_0x18+103),LOW(_0x18+112),HIGH(_0x18+112),LOW(_0x18+120),HIGH(_0x18+120)
000050 02fb
000051 0305
000052 030d
000053 0316      	.DB  LOW(_0x18+130),HIGH(_0x18+130),LOW(_0x18+140),HIGH(_0x18+140),LOW(_0x18+148),HIGH(_0x18+148),LOW(_0x18+157),HIGH(_0x18+157)
                 _0x1B:
000054 031e
000055 0324
000056 032b
000057 0335      	.DB  LOW(_0x1A),HIGH(_0x1A),LOW(_0x1A+6),HIGH(_0x1A+6),LOW(_0x1A+13),HIGH(_0x1A+13),LOW(_0x1A+23),HIGH(_0x1A+23)
000058 033c
000059 0341
00005a 034d
00005b 0355      	.DB  LOW(_0x1A+30),HIGH(_0x1A+30),LOW(_0x1A+35),HIGH(_0x1A+35),LOW(_0x1A+47),HIGH(_0x1A+47),LOW(_0x1A+55),HIGH(_0x1A+55)
00005c 035d
00005d 0364
00005e 0369
00005f 0375      	.DB  LOW(_0x1A+63),HIGH(_0x1A+63),LOW(_0x1A+70),HIGH(_0x1A+70),LOW(_0x1A+75),HIGH(_0x1A+75),LOW(_0x1A+87),HIGH(_0x1A+87)
000060 037b
000061 0383
000062 038a
000063 0392      	.DB  LOW(_0x1A+93),HIGH(_0x1A+93),LOW(_0x1A+101),HIGH(_0x1A+101),LOW(_0x1A+108),HIGH(_0x1A+108),LOW(_0x1A+116),HIGH(_0x1A+116)
000064 039a
000065 039f
000066 03b0
000067 03bd      	.DB  LOW(_0x1A+124),HIGH(_0x1A+124),LOW(_0x1A+129),HIGH(_0x1A+129),LOW(_0x1A+146),HIGH(_0x1A+146),LOW(_0x1A+159),HIGH(_0x1A+159)
                 _0x1D:
000068 03c8
000069 03cd
00006a 03d5
00006b 03dc      	.DB  LOW(_0x1C),HIGH(_0x1C),LOW(_0x1C+5),HIGH(_0x1C+5),LOW(_0x1C+13),HIGH(_0x1C+13),LOW(_0x1C+20),HIGH(_0x1C+20)
00006c 03e4
00006d 03ee
00006e 03f5
00006f 03fb      	.DB  LOW(_0x1C+28),HIGH(_0x1C+28),LOW(_0x1C+38),HIGH(_0x1C+38),LOW(_0x1C+45),HIGH(_0x1C+45),LOW(_0x1C+51),HIGH(_0x1C+51)
000070 0401
000071 0405
000072 0410
000073 0418      	.DB  LOW(_0x1C+57),HIGH(_0x1C+57),LOW(_0x1C+61),HIGH(_0x1C+61),LOW(_0x1C+72),HIGH(_0x1C+72),LOW(_0x1C+80),HIGH(_0x1C+80)
000074 041e
000075 0429
000076 0433
000077 043b      	.DB  LOW(_0x1C+86),HIGH(_0x1C+86),LOW(_0x1C+97),HIGH(_0x1C+97),LOW(_0x1C+107),HIGH(_0x1C+107),LOW(_0x1C+115),HIGH(_0x1C+115)
000078 0443
000079 044e
00007a 0455
00007b 045c      	.DB  LOW(_0x1C+123),HIGH(_0x1C+123),LOW(_0x1C+134),HIGH(_0x1C+134),LOW(_0x1C+141),HIGH(_0x1C+141),LOW(_0x1C+148),HIGH(_0x1C+148)
                 _0x1F:
00007c 0463
00007d 0468
00007e 046e
00007f 0477      	.DB  LOW(_0x1E),HIGH(_0x1E),LOW(_0x1E+5),HIGH(_0x1E+5),LOW(_0x1E+11),HIGH(_0x1E+11),LOW(_0x1E+20),HIGH(_0x1E+20)
000080 047c
000081 0484
000082 0494
000083 049b      	.DB  LOW(_0x1E+25),HIGH(_0x1E+25),LOW(_0x1E+33),HIGH(_0x1E+33),LOW(_0x1E+49),HIGH(_0x1E+49),LOW(_0x1E+56),HIGH(_0x1E+56)
000084 04a4
000085 04ab
000086 04b2
000087 04bb      	.DB  LOW(_0x1E+65),HIGH(_0x1E+65),LOW(_0x1E+72),HIGH(_0x1E+72),LOW(_0x1E+79),HIGH(_0x1E+79),LOW(_0x1E+88),HIGH(_0x1E+88)
000088 04c2
000089 04d2
00008a 04de
00008b 04e5      	.DB  LOW(_0x1E+95),HIGH(_0x1E+95),LOW(_0x1E+111),HIGH(_0x1E+111),LOW(_0x1E+123),HIGH(_0x1E+123),LOW(_0x1E+130),HIGH(_0x1E+130)
00008c 04eb
00008d 04f5
00008e 04fc
00008f 0506      	.DB  LOW(_0x1E+136),HIGH(_0x1E+136),LOW(_0x1E+146),HIGH(_0x1E+146),LOW(_0x1E+153),HIGH(_0x1E+153),LOW(_0x1E+163),HIGH(_0x1E+163)
                 _0x21:
000090 0512
000091 0514
000092 0516
000093 0518      	.DB  LOW(_0x20),HIGH(_0x20),LOW(_0x20+2),HIGH(_0x20+2),LOW(_0x20+4),HIGH(_0x20+4),LOW(_0x20+6),HIGH(_0x20+6)
000094 051a
000095 051c      	.DB  LOW(_0x20+8),HIGH(_0x20+8),LOW(_0x20+10),HIGH(_0x20+10)
                 _0x23:
000096 051e
000097 0520
000098 0522
000099 0524      	.DB  LOW(_0x22),HIGH(_0x22),LOW(_0x22+2),HIGH(_0x22+2),LOW(_0x22+4),HIGH(_0x22+4),LOW(_0x22+6),HIGH(_0x22+6)
00009a 0526
00009b 0528      	.DB  LOW(_0x22+8),HIGH(_0x22+8),LOW(_0x22+10),HIGH(_0x22+10)
                 _0x25:
00009c 052a
00009d 052c
00009e 052e
00009f 0530      	.DB  LOW(_0x24),HIGH(_0x24),LOW(_0x24+2),HIGH(_0x24+2),LOW(_0x24+4),HIGH(_0x24+4),LOW(_0x24+6),HIGH(_0x24+6)
0000a0 0532
0000a1 0534
0000a2 0536      	.DB  LOW(_0x24+8),HIGH(_0x24+8),LOW(_0x24+10),HIGH(_0x24+10),LOW(_0x24+12),HIGH(_0x24+12)
                 _0x27:
0000a3 0538
0000a4 053a
0000a5 053c
0000a6 053e      	.DB  LOW(_0x26),HIGH(_0x26),LOW(_0x26+2),HIGH(_0x26+2),LOW(_0x26+4),HIGH(_0x26+4),LOW(_0x26+6),HIGH(_0x26+6)
0000a7 0540
0000a8 0542
0000a9 0544      	.DB  LOW(_0x26+8),HIGH(_0x26+8),LOW(_0x26+10),HIGH(_0x26+10),LOW(_0x26+12),HIGH(_0x26+12)
                 _0x29:
0000aa 0546
0000ab 0548
0000ac 054a
0000ad 054c      	.DB  LOW(_0x28),HIGH(_0x28),LOW(_0x28+2),HIGH(_0x28+2),LOW(_0x28+4),HIGH(_0x28+4),LOW(_0x28+6),HIGH(_0x28+6)
0000ae 054e
0000af 0550
0000b0 0552      	.DB  LOW(_0x28+8),HIGH(_0x28+8),LOW(_0x28+10),HIGH(_0x28+10),LOW(_0x28+12),HIGH(_0x28+12)
                 _0x2B:
0000b1 0554
0000b2 0556
0000b3 0558
0000b4 055a      	.DB  LOW(_0x2A),HIGH(_0x2A),LOW(_0x2A+2),HIGH(_0x2A+2),LOW(_0x2A+4),HIGH(_0x2A+4),LOW(_0x2A+6),HIGH(_0x2A+6)
0000b5 055c
0000b6 055e
0000b7 0560
0000b8 0562      	.DB  LOW(_0x2A+8),HIGH(_0x2A+8),LOW(_0x2A+10),HIGH(_0x2A+10),LOW(_0x2A+12),HIGH(_0x2A+12),LOW(_0x2A+14),HIGH(_0x2A+14)
0000b9 0564
0000ba 0566
0000bb 0568
0000bc 056a      	.DB  LOW(_0x2A+16),HIGH(_0x2A+16),LOW(_0x2A+18),HIGH(_0x2A+18),LOW(_0x2A+20),HIGH(_0x2A+20),LOW(_0x2A+22),HIGH(_0x2A+22)
0000bd 056c
0000be 056e
0000bf 0570
0000c0 0572      	.DB  LOW(_0x2A+24),HIGH(_0x2A+24),LOW(_0x2A+26),HIGH(_0x2A+26),LOW(_0x2A+28),HIGH(_0x2A+28),LOW(_0x2A+30),HIGH(_0x2A+30)
0000c1 0574
0000c2 0576
0000c3 0578
0000c4 057a      	.DB  LOW(_0x2A+32),HIGH(_0x2A+32),LOW(_0x2A+34),HIGH(_0x2A+34),LOW(_0x2A+36),HIGH(_0x2A+36),LOW(_0x2A+38),HIGH(_0x2A+38)
0000c5 057c
0000c6 057e
0000c7 0580
0000c8 0582      	.DB  LOW(_0x2A+40),HIGH(_0x2A+40),LOW(_0x2A+42),HIGH(_0x2A+42),LOW(_0x2A+44),HIGH(_0x2A+44),LOW(_0x2A+46),HIGH(_0x2A+46)
0000c9 0584
0000ca 0586      	.DB  LOW(_0x2A+48),HIGH(_0x2A+48),LOW(_0x2A+50),HIGH(_0x2A+50)
                 _0x2C:
C:\Users\N\Desktop\MicroProject\Repo\Debug\List\Hangman.asm(1191): warning: .cseg .db misalignment - padding zero byte
0000cb 0003      	.DB  0x3
                 _0x0:
0000cc 7053
0000cd 726f
0000ce 0074
0000cf 6f4d      	.DB  0x53,0x70,0x6F,0x72,0x74,0x0,0x4D,0x6F
0000d0 6976
0000d1 0065
0000d2 6f43
0000d3 6e75      	.DB  0x76,0x69,0x65,0x0,0x43,0x6F,0x75,0x6E
0000d4 7274
0000d5 6569
0000d6 0073
0000d7 5343      	.DB  0x74,0x72,0x69,0x65,0x73,0x0,0x43,0x53
0000d8 6600
0000d9 6f6f
0000da 6274
0000db 6c61      	.DB  0x0,0x66,0x6F,0x6F,0x74,0x62,0x61,0x6C
0000dc 006c
0000dd 6162
0000de 6b73
0000df 7465      	.DB  0x6C,0x0,0x62,0x61,0x73,0x6B,0x65,0x74
0000e0 6162
0000e1 6c6c
0000e2 7600
0000e3 6c6f      	.DB  0x62,0x61,0x6C,0x6C,0x0,0x76,0x6F,0x6C
0000e4 656c
0000e5 6279
0000e6 6c61
0000e7 006c      	.DB  0x6C,0x65,0x79,0x62,0x61,0x6C,0x6C,0x0
0000e8 616b
0000e9 6172
0000ea 6574
0000eb 6b00      	.DB  0x6B,0x61,0x72,0x61,0x74,0x65,0x0,0x6B
0000ec 6e75
0000ed 6667
0000ee 0075
0000ef 6f62      	.DB  0x75,0x6E,0x67,0x66,0x75,0x0,0x62,0x6F
0000f0 6978
0000f1 676e
0000f2 7400
0000f3 6e65      	.DB  0x78,0x69,0x6E,0x67,0x0,0x74,0x65,0x6E
0000f4 696e
0000f5 0073
0000f6 7572
0000f7 6e6e      	.DB  0x6E,0x69,0x73,0x0,0x72,0x75,0x6E,0x6E
0000f8 6e69
0000f9 0067
0000fa 7277
0000fb 7365      	.DB  0x69,0x6E,0x67,0x0,0x77,0x72,0x65,0x73
0000fc 6c74
0000fd 6e69
0000fe 0067
0000ff 6f68      	.DB  0x74,0x6C,0x69,0x6E,0x67,0x0,0x68,0x6F
000100 6b63
000101 7965
000102 6a00
000103 6475      	.DB  0x63,0x6B,0x65,0x79,0x0,0x6A,0x75,0x64
000104 006f
000105 6f67
000106 666c
000107 6200      	.DB  0x6F,0x0,0x67,0x6F,0x6C,0x66,0x0,0x62
000108 7361
000109 6265
00010a 6c61
00010b 006c      	.DB  0x61,0x73,0x65,0x62,0x61,0x6C,0x6C,0x0
00010c 6962
00010d 6c6c
00010e 6169
00010f 6472      	.DB  0x62,0x69,0x6C,0x6C,0x69,0x61,0x72,0x64
000110 6300
000111 7275
000112 696c
000113 676e      	.DB  0x0,0x63,0x75,0x72,0x6C,0x69,0x6E,0x67
000114 7700
000115 7461
000116 7265
000117 6f70      	.DB  0x0,0x77,0x61,0x74,0x65,0x72,0x70,0x6F
000118 6f6c
000119 7400
00011a 6561
00011b 776b      	.DB  0x6C,0x6F,0x0,0x74,0x61,0x65,0x6B,0x77
00011c 6e61
00011d 6f64
00011e 6600
00011f 6e65      	.DB  0x61,0x6E,0x64,0x6F,0x0,0x66,0x65,0x6E
000120 6963
000121 676e
000122 7300
000123 6977      	.DB  0x63,0x69,0x6E,0x67,0x0,0x73,0x77,0x69
000124 6d6d
000125 6e69
000126 0067
000127 756a      	.DB  0x6D,0x6D,0x69,0x6E,0x67,0x0,0x6A,0x75
000128 696a
000129 7374
00012a 0075
00012b 6f6a      	.DB  0x6A,0x69,0x74,0x73,0x75,0x0,0x6A,0x6F
00012c 656b
00012d 0072
00012e 6162
00012f 6d74      	.DB  0x6B,0x65,0x72,0x0,0x62,0x61,0x74,0x6D
000130 6e61
000131 6700
000132 646f
000133 6166      	.DB  0x61,0x6E,0x0,0x67,0x6F,0x64,0x66,0x61
000134 6874
000135 7265
000136 6c00
000137 7a69      	.DB  0x74,0x68,0x65,0x72,0x0,0x6C,0x69,0x7A
000138 7261
000139 0064
00013a 6f73
00013b 6c75      	.DB  0x61,0x72,0x64,0x0,0x73,0x6F,0x75,0x6C
00013c 6900
00013d 636e
00013e 6572
00013f 6964      	.DB  0x0,0x69,0x6E,0x63,0x72,0x65,0x64,0x69
000140 6c62
000141 7365
000142 6d00
000143 6d65      	.DB  0x62,0x6C,0x65,0x73,0x0,0x6D,0x65,0x6D
000144 6e65
000145 6f74
000146 6100
000147 7272      	.DB  0x65,0x6E,0x74,0x6F,0x0,0x61,0x72,0x72
000148 7669
000149 6c61
00014a 6200
00014b 7275      	.DB  0x69,0x76,0x61,0x6C,0x0,0x62,0x75,0x72
00014c 6569
00014d 0064
00014e 7563
00014f 6562      	.DB  0x69,0x65,0x64,0x0,0x63,0x75,0x62,0x65
000150 6200
000151 616c
000152 6564
000153 7572      	.DB  0x0,0x62,0x6C,0x61,0x64,0x65,0x72,0x75
000154 6e6e
000155 7265
000156 6100
000157 696c      	.DB  0x6E,0x6E,0x65,0x72,0x0,0x61,0x6C,0x69
000158 6e65
000159 7300
00015a 6968
00015b 696e      	.DB  0x65,0x6E,0x0,0x73,0x68,0x69,0x6E,0x69
00015c 676e
00015d 7000
00015e 7379
00015f 6863      	.DB  0x6E,0x67,0x0,0x70,0x79,0x73,0x63,0x68
000160 006f
000161 6974
000162 6174
000163 696e      	.DB  0x6F,0x0,0x74,0x69,0x74,0x61,0x6E,0x69
000164 0063
000165 6576
000166 7472
000167 6769      	.DB  0x63,0x0,0x76,0x65,0x72,0x74,0x69,0x67
000168 006f
000169 7865
00016a 6d61
00016b 6e00      	.DB  0x6F,0x0,0x65,0x78,0x61,0x6D,0x0,0x6E
00016c 636f
00016d 7574
00016e 6e72
00016f 6c61      	.DB  0x6F,0x63,0x74,0x75,0x72,0x6E,0x61,0x6C
000170 6e61
000171 6d69
000172 6c61
000173 0073      	.DB  0x61,0x6E,0x69,0x6D,0x61,0x6C,0x73,0x0
000174 7773
000175 7369
000176 6173
000177 6d72      	.DB  0x73,0x77,0x69,0x73,0x73,0x61,0x72,0x6D
000178 6d79
000179 6e61
00017a 7300
00017b 7065      	.DB  0x79,0x6D,0x61,0x6E,0x0,0x73,0x65,0x70
00017c 7265
00017d 7461
00017e 6f69
00017f 006e      	.DB  0x65,0x72,0x61,0x74,0x69,0x6F,0x6E,0x0
000180 7269
000181 6e61
000182 6700
000183 7265      	.DB  0x69,0x72,0x61,0x6E,0x0,0x67,0x65,0x72
000184 616d
000185 796e
000186 6200
000187 6172      	.DB  0x6D,0x61,0x6E,0x79,0x0,0x62,0x72,0x61
000188 697a
000189 006c
00018a 6e65
00018b 6c67      	.DB  0x7A,0x69,0x6C,0x0,0x65,0x6E,0x67,0x6C
00018c 6e61
00018d 0064
00018e 7261
00018f 6567      	.DB  0x61,0x6E,0x64,0x0,0x61,0x72,0x67,0x65
000190 746e
000191 6e69
000192 0061
000193 7773      	.DB  0x6E,0x74,0x69,0x6E,0x61,0x0,0x73,0x77
000194 6465
000195 6e65
000196 7300
000197 6d61      	.DB  0x65,0x64,0x65,0x6E,0x0,0x73,0x61,0x6D
000198 616f
000199 6300
00019a 6968
00019b 616e      	.DB  0x6F,0x61,0x0,0x63,0x68,0x69,0x6E,0x61
00019c 7500
00019d 6561
00019e 7500
00019f 627a      	.DB  0x0,0x75,0x61,0x65,0x0,0x75,0x7A,0x62
0001a0 6b61
0001a1 7369
0001a2 6174
0001a3 006e      	.DB  0x61,0x6B,0x69,0x73,0x74,0x61,0x6E,0x0
0001a4 6564
0001a5 6d6e
0001a6 7261
0001a7 006b      	.DB  0x64,0x65,0x6E,0x6D,0x61,0x72,0x6B,0x0
0001a8 6867
0001a9 6e61
0001aa 0061
0001ab 6162      	.DB  0x67,0x68,0x61,0x6E,0x61,0x0,0x62,0x61
0001ac 676e
0001ad 616c
0001ae 6564
0001af 6873      	.DB  0x6E,0x67,0x6C,0x61,0x64,0x65,0x73,0x68
0001b0 7600
0001b1 6e65
0001b2 7a65
0001b3 6575      	.DB  0x0,0x76,0x65,0x6E,0x65,0x7A,0x75,0x65
0001b4 616c
0001b5 7a00
0001b6 6d69
0001b7 6162      	.DB  0x6C,0x61,0x0,0x7A,0x69,0x6D,0x62,0x61
0001b8 6577
0001b9 6e00
0001ba 6769
0001bb 7265      	.DB  0x77,0x65,0x0,0x6E,0x69,0x67,0x65,0x72
0001bc 6169
0001bd 6c00
0001be 7875
0001bf 6d65      	.DB  0x69,0x61,0x0,0x6C,0x75,0x78,0x65,0x6D
0001c0 6f62
0001c1 7275
0001c2 0067
0001c3 7267      	.DB  0x62,0x6F,0x75,0x72,0x67,0x0,0x67,0x72
0001c4 6565
0001c5 6563
0001c6 6600
0001c7 6172      	.DB  0x65,0x65,0x63,0x65,0x0,0x66,0x72,0x61
0001c8 636e
0001c9 0065
0001ca 7963
0001cb 7270      	.DB  0x6E,0x63,0x65,0x0,0x63,0x79,0x70,0x72
0001cc 7375
0001cd 6300
0001ce 646f
0001cf 0065      	.DB  0x75,0x73,0x0,0x63,0x6F,0x64,0x65,0x0
0001d0 6564
0001d1 7562
0001d2 0067
0001d3 6f63      	.DB  0x64,0x65,0x62,0x75,0x67,0x0,0x63,0x6F
0001d4 706d
0001d5 6c69
0001d6 7265
0001d7 6a00      	.DB  0x6D,0x70,0x69,0x6C,0x65,0x72,0x0,0x6A
0001d8 7661
0001d9 0061
0001da 6f62
0001db 6c6f      	.DB  0x61,0x76,0x61,0x0,0x62,0x6F,0x6F,0x6C
0001dc 6165
0001dd 006e
0001de 706f
0001df 7265      	.DB  0x65,0x61,0x6E,0x0,0x6F,0x70,0x65,0x72
0001e0 7461
0001e1 6e69
0001e2 7367
0001e3 7379      	.DB  0x61,0x74,0x69,0x6E,0x67,0x73,0x79,0x73
0001e4 6574
0001e5 006d
0001e6 6967
0001e7 6874      	.DB  0x74,0x65,0x6D,0x0,0x67,0x69,0x74,0x68
0001e8 6275
0001e9 6600
0001ea 6e75
0001eb 7463      	.DB  0x75,0x62,0x0,0x66,0x75,0x6E,0x63,0x74
0001ec 6f69
0001ed 006e
0001ee 7973
0001ef 746e      	.DB  0x69,0x6F,0x6E,0x0,0x73,0x79,0x6E,0x74
0001f0 7861
0001f1 6300
0001f2 7069
0001f3 6568      	.DB  0x61,0x78,0x0,0x63,0x69,0x70,0x68,0x65
0001f4 0072
0001f5 7261
0001f6 7567
0001f7 656d      	.DB  0x72,0x0,0x61,0x72,0x67,0x75,0x6D,0x65
0001f8 746e
0001f9 7000
0001fa 7479
0001fb 6f68      	.DB  0x6E,0x74,0x0,0x70,0x79,0x74,0x68,0x6F
0001fc 006e
0001fd 616d
0001fe 6863
0001ff 6e69      	.DB  0x6E,0x0,0x6D,0x61,0x63,0x68,0x69,0x6E
000200 6c65
000201 6165
000202 6e72
000203 6e69      	.DB  0x65,0x6C,0x65,0x61,0x72,0x6E,0x69,0x6E
000204 0067
000205 6e69
000206 6574
000207 7072      	.DB  0x67,0x0,0x69,0x6E,0x74,0x65,0x72,0x70
000208 6572
000209 6574
00020a 0072
00020b 6f67      	.DB  0x72,0x65,0x74,0x65,0x72,0x0,0x67,0x6F
00020c 676f
00020d 656c
00020e 7100
00020f 6575      	.DB  0x6F,0x67,0x6C,0x65,0x0,0x71,0x75,0x65
000210 7972
000211 6100
000212 676c
000213 726f      	.DB  0x72,0x79,0x0,0x61,0x6C,0x67,0x6F,0x72
000214 7469
000215 6d68
000216 6b00
000217 7265      	.DB  0x69,0x74,0x68,0x6D,0x0,0x6B,0x65,0x72
000218 656e
000219 006c
00021a 7270
00021b 636f      	.DB  0x6E,0x65,0x6C,0x0,0x70,0x72,0x6F,0x63
00021c 7365
00021d 6f73
00021e 0072
00021f 6f63      	.DB  0x65,0x73,0x73,0x6F,0x72,0x0,0x63,0x6F
000220 636e
000221 7275
000222 6572
000223 636e      	.DB  0x6E,0x63,0x75,0x72,0x72,0x65,0x6E,0x63
000224 0079
000225 0069
000226 006a
000227 0070      	.DB  0x79,0x0,0x69,0x0,0x6A,0x0,0x70,0x0
000228 0071
000229 0076
00022a 0077
00022b 007a      	.DB  0x71,0x0,0x76,0x0,0x77,0x0,0x7A,0x0
00022c 0020
00022d 002a
00022e 6353
00022f 726f      	.DB  0x20,0x0,0x2A,0x0,0x53,0x63,0x6F,0x72
000230 3a65
000231 2520
000232 0064
000233 6553      	.DB  0x65,0x3A,0x20,0x25,0x64,0x0,0x53,0x65
000234 6f63
000235 646e
000236 4c20
000237 6463      	.DB  0x63,0x6F,0x6E,0x64,0x20,0x4C,0x63,0x64
000238 2000
000239 6425
00023a 002e
00023b 205f      	.DB  0x0,0x20,0x25,0x64,0x2E,0x0,0x5F,0x20
00023c 4300
00023d 726f
00023e 6572
00023f 7463      	.DB  0x0,0x43,0x6F,0x72,0x72,0x65,0x63,0x74
000240 0021
000241 6f59
000242 2075
000243 6f57      	.DB  0x21,0x0,0x59,0x6F,0x75,0x20,0x57,0x6F
000244 2c6e
000245 6820
000246 6f6f
000247 6172      	.DB  0x6E,0x2C,0x20,0x68,0x6F,0x6F,0x72,0x61
000248 2079
000249 293a
00024a 0020
00024b 4147      	.DB  0x79,0x20,0x3A,0x29,0x20,0x0,0x47,0x41
00024c 454d
00024d 4f20
00024e 4556
00024f 2152      	.DB  0x4D,0x45,0x20,0x4F,0x56,0x45,0x52,0x21
000250 2021
000251 2020
000252 2020
000253 2020      	.DB  0x21,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000254 2020
000255 2020
000256 2020
000257 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000258 2020
000259 2020
00025a 7274
00025b 2079      	.DB  0x20,0x20,0x20,0x20,0x74,0x72,0x79,0x20
00025c 6761
00025d 6961
00025e 006e      	.DB  0x61,0x67,0x61,0x69,0x6E,0x0
                 _0x2020060:
C:\Users\N\Desktop\MicroProject\Repo\Debug\List\Hangman.asm(1295): warning: .cseg .db misalignment - padding zero byte
00025f 0001      	.DB  0x1
                 _0x2020000:
000260 4e2d
000261 4e41
000262 4900
000263 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\N\Desktop\MicroProject\Repo\Debug\List\Hangman.asm(1298): warning: .cseg .db misalignment - padding zero byte
000264 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000265 0002      	.DW  0x02
000266 000c      	.DW  0x0C
000267 0066      	.DW  __REG_VARS*2
                 
000268 0010      	.DW  0x10
000269 05ea      	.DW  _keypad
00026a 0068      	.DW  _0x6*2
                 
00026b 0006      	.DW  0x06
00026c 0260      	.DW  _0x16
00026d 0198      	.DW  _0x0*2
                 
00026e 0006      	.DW  0x06
00026f 0266      	.DW  _0x16+6
000270 019e      	.DW  _0x0*2+6
                 
000271 000a      	.DW  0x0A
000272 026c      	.DW  _0x16+12
000273 01a4      	.DW  _0x0*2+12
                 
000274 0003      	.DW  0x03
000275 0276      	.DW  _0x16+22
000276 01ae      	.DW  _0x0*2+22
                 
000277 0008      	.DW  0x08
000278 0660      	.DW  _Category
000279 0078      	.DW  _0x17*2
                 
00027a 0009      	.DW  0x09
00027b 0279      	.DW  _0x18
00027c 01b1      	.DW  _0x0*2+25
                 
00027d 000b      	.DW  0x0B
00027e 0282      	.DW  _0x18+9
00027f 01ba      	.DW  _0x0*2+34
                 
000280 000b      	.DW  0x0B
000281 028d      	.DW  _0x18+20
000282 01c5      	.DW  _0x0*2+45
                 
000283 0007      	.DW  0x07
000284 0298      	.DW  _0x18+31
000285 01d0      	.DW  _0x0*2+56
                 
000286 0007      	.DW  0x07
000287 029f      	.DW  _0x18+38
000288 01d7      	.DW  _0x0*2+63
                 
000289 0007      	.DW  0x07
00028a 02a6      	.DW  _0x18+45
00028b 01de      	.DW  _0x0*2+70
                 
00028c 0007      	.DW  0x07
00028d 02ad      	.DW  _0x18+52
00028e 01e5      	.DW  _0x0*2+77
                 
00028f 0008      	.DW  0x08
000290 02b4      	.DW  _0x18+59
000291 01ec      	.DW  _0x0*2+84
                 
000292 000a      	.DW  0x0A
000293 02bc      	.DW  _0x18+67
000294 01f4      	.DW  _0x0*2+92
                 
000295 0007      	.DW  0x07
000296 02c6      	.DW  _0x18+77
000297 01fe      	.DW  _0x0*2+102
                 
000298 0005      	.DW  0x05
000299 02cd      	.DW  _0x18+84
00029a 0205      	.DW  _0x0*2+109
                 
00029b 0005      	.DW  0x05
00029c 02d2      	.DW  _0x18+89
00029d 020a      	.DW  _0x0*2+114
                 
00029e 0009      	.DW  0x09
00029f 02d7      	.DW  _0x18+94
0002a0 020f      	.DW  _0x0*2+119
                 
0002a1 0009      	.DW  0x09
0002a2 02e0      	.DW  _0x18+103
0002a3 0218      	.DW  _0x0*2+128
                 
0002a4 0008      	.DW  0x08
0002a5 02e9      	.DW  _0x18+112
0002a6 0221      	.DW  _0x0*2+137
                 
0002a7 000a      	.DW  0x0A
0002a8 02f1      	.DW  _0x18+120
0002a9 0229      	.DW  _0x0*2+145
                 
0002aa 000a      	.DW  0x0A
0002ab 02fb      	.DW  _0x18+130
0002ac 0233      	.DW  _0x0*2+155
                 
0002ad 0008      	.DW  0x08
0002ae 0305      	.DW  _0x18+140
0002af 023d      	.DW  _0x0*2+165
                 
0002b0 0009      	.DW  0x09
0002b1 030d      	.DW  _0x18+148
0002b2 0245      	.DW  _0x0*2+173
                 
0002b3 0008      	.DW  0x08
0002b4 0316      	.DW  _0x18+157
0002b5 024e      	.DW  _0x0*2+182
                 
0002b6 0028      	.DW  0x28
0002b7 0668      	.DW  _Sport
0002b8 0080      	.DW  _0x19*2
                 
0002b9 0006      	.DW  0x06
0002ba 031e      	.DW  _0x1A
0002bb 0256      	.DW  _0x0*2+190
                 
0002bc 0007      	.DW  0x07
0002bd 0324      	.DW  _0x1A+6
0002be 025c      	.DW  _0x0*2+196
                 
0002bf 000a      	.DW  0x0A
0002c0 032b      	.DW  _0x1A+13
0002c1 0263      	.DW  _0x0*2+203
                 
0002c2 0007      	.DW  0x07
0002c3 0335      	.DW  _0x1A+23
0002c4 026d      	.DW  _0x0*2+213
                 
0002c5 0005      	.DW  0x05
0002c6 033c      	.DW  _0x1A+30
0002c7 0274      	.DW  _0x0*2+220
                 
0002c8 000c      	.DW  0x0C
0002c9 0341      	.DW  _0x1A+35
0002ca 0279      	.DW  _0x0*2+225
                 
0002cb 0008      	.DW  0x08
0002cc 034d      	.DW  _0x1A+47
0002cd 0285      	.DW  _0x0*2+237
                 
0002ce 0008      	.DW  0x08
0002cf 0355      	.DW  _0x1A+55
0002d0 028d      	.DW  _0x0*2+245
                 
0002d1 0007      	.DW  0x07
0002d2 035d      	.DW  _0x1A+63
0002d3 0295      	.DW  _0x0*2+253
                 
0002d4 0005      	.DW  0x05
0002d5 0364      	.DW  _0x1A+70
0002d6 029c      	.DW  _0x0*2+260
                 
0002d7 000c      	.DW  0x0C
0002d8 0369      	.DW  _0x1A+75
0002d9 02a1      	.DW  _0x0*2+265
                 
0002da 0006      	.DW  0x06
0002db 0375      	.DW  _0x1A+87
0002dc 02ad      	.DW  _0x0*2+277
                 
0002dd 0008      	.DW  0x08
0002de 037b      	.DW  _0x1A+93
0002df 02b3      	.DW  _0x0*2+283
                 
0002e0 0007      	.DW  0x07
0002e1 0383      	.DW  _0x1A+101
0002e2 02bb      	.DW  _0x0*2+291
                 
0002e3 0008      	.DW  0x08
0002e4 038a      	.DW  _0x1A+108
0002e5 02c2      	.DW  _0x0*2+298
                 
0002e6 0008      	.DW  0x08
0002e7 0392      	.DW  _0x1A+116
0002e8 02ca      	.DW  _0x0*2+306
                 
0002e9 0005      	.DW  0x05
0002ea 039a      	.DW  _0x1A+124
0002eb 02d2      	.DW  _0x0*2+314
                 
0002ec 0011      	.DW  0x11
0002ed 039f      	.DW  _0x1A+129
0002ee 02d7      	.DW  _0x0*2+319
                 
0002ef 000d      	.DW  0x0D
0002f0 03b0      	.DW  _0x1A+146
0002f1 02e8      	.DW  _0x0*2+336
                 
0002f2 000b      	.DW  0x0B
0002f3 03bd      	.DW  _0x1A+159
0002f4 02f5      	.DW  _0x0*2+349
                 
0002f5 0028      	.DW  0x28
0002f6 0690      	.DW  _Movie
0002f7 00a8      	.DW  _0x1B*2
                 
0002f8 0005      	.DW  0x05
0002f9 03c8      	.DW  _0x1C
0002fa 0300      	.DW  _0x0*2+360
                 
0002fb 0008      	.DW  0x08
0002fc 03cd      	.DW  _0x1C+5
0002fd 0305      	.DW  _0x0*2+365
                 
0002fe 0007      	.DW  0x07
0002ff 03d5      	.DW  _0x1C+13
000300 030d      	.DW  _0x0*2+373
                 
000301 0008      	.DW  0x08
000302 03dc      	.DW  _0x1C+20
000303 0314      	.DW  _0x0*2+380
                 
000304 000a      	.DW  0x0A
000305 03e4      	.DW  _0x1C+28
000306 031c      	.DW  _0x0*2+388
                 
000307 0007      	.DW  0x07
000308 03ee      	.DW  _0x1C+38
000309 0326      	.DW  _0x0*2+398
                 
00030a 0006      	.DW  0x06
00030b 03f5      	.DW  _0x1C+45
00030c 032d      	.DW  _0x0*2+405
                 
00030d 0006      	.DW  0x06
00030e 03fb      	.DW  _0x1C+51
00030f 0333      	.DW  _0x0*2+411
                 
000310 0004      	.DW  0x04
000311 0401      	.DW  _0x1C+57
000312 0339      	.DW  _0x0*2+417
                 
000313 000b      	.DW  0x0B
000314 0405      	.DW  _0x1C+61
000315 033d      	.DW  _0x0*2+421
                 
000316 0008      	.DW  0x08
000317 0410      	.DW  _0x1C+72
000318 0348      	.DW  _0x0*2+432
                 
000319 0006      	.DW  0x06
00031a 0418      	.DW  _0x1C+80
00031b 0350      	.DW  _0x0*2+440
                 
00031c 000b      	.DW  0x0B
00031d 041e      	.DW  _0x1C+86
00031e 0356      	.DW  _0x0*2+446
                 
00031f 000a      	.DW  0x0A
000320 0429      	.DW  _0x1C+97
000321 0361      	.DW  _0x0*2+457
                 
000322 0008      	.DW  0x08
000323 0433      	.DW  _0x1C+107
000324 036b      	.DW  _0x0*2+467
                 
000325 0008      	.DW  0x08
000326 043b      	.DW  _0x1C+115
000327 0373      	.DW  _0x0*2+475
                 
000328 000b      	.DW  0x0B
000329 0443      	.DW  _0x1C+123
00032a 037b      	.DW  _0x0*2+483
                 
00032b 0007      	.DW  0x07
00032c 044e      	.DW  _0x1C+134
00032d 0386      	.DW  _0x0*2+494
                 
00032e 0007      	.DW  0x07
00032f 0455      	.DW  _0x1C+141
000330 038d      	.DW  _0x0*2+501
                 
000331 0007      	.DW  0x07
000332 045c      	.DW  _0x1C+148
000333 0394      	.DW  _0x0*2+508
                 
000334 0028      	.DW  0x28
000335 06b8      	.DW  _Countries
000336 00d0      	.DW  _0x1D*2
                 
000337 0005      	.DW  0x05
000338 0463      	.DW  _0x1E
000339 039b      	.DW  _0x0*2+515
                 
00033a 0006      	.DW  0x06
00033b 0468      	.DW  _0x1E+5
00033c 03a0      	.DW  _0x0*2+520
                 
00033d 0009      	.DW  0x09
00033e 046e      	.DW  _0x1E+11
00033f 03a6      	.DW  _0x0*2+526
                 
000340 0005      	.DW  0x05
000341 0477      	.DW  _0x1E+20
000342 03af      	.DW  _0x0*2+535
                 
000343 0008      	.DW  0x08
000344 047c      	.DW  _0x1E+25
000345 03b4      	.DW  _0x0*2+540
                 
000346 0010      	.DW  0x10
000347 0484      	.DW  _0x1E+33
000348 03bc      	.DW  _0x0*2+548
                 
000349 0007      	.DW  0x07
00034a 0494      	.DW  _0x1E+49
00034b 03cc      	.DW  _0x0*2+564
                 
00034c 0009      	.DW  0x09
00034d 049b      	.DW  _0x1E+56
00034e 03d3      	.DW  _0x0*2+571
                 
00034f 0007      	.DW  0x07
000350 04a4      	.DW  _0x1E+65
000351 03dc      	.DW  _0x0*2+580
                 
000352 0007      	.DW  0x07
000353 04ab      	.DW  _0x1E+72
000354 03e3      	.DW  _0x0*2+587
                 
000355 0009      	.DW  0x09
000356 04b2      	.DW  _0x1E+79
000357 03ea      	.DW  _0x0*2+594
                 
000358 0007      	.DW  0x07
000359 04bb      	.DW  _0x1E+88
00035a 03f3      	.DW  _0x0*2+603
                 
00035b 0010      	.DW  0x10
00035c 04c2      	.DW  _0x1E+95
00035d 03fa      	.DW  _0x0*2+610
                 
00035e 000c      	.DW  0x0C
00035f 04d2      	.DW  _0x1E+111
000360 040a      	.DW  _0x0*2+626
                 
000361 0007      	.DW  0x07
000362 04de      	.DW  _0x1E+123
000363 0416      	.DW  _0x0*2+638
                 
000364 0006      	.DW  0x06
000365 04e5      	.DW  _0x1E+130
000366 041d      	.DW  _0x0*2+645
                 
000367 000a      	.DW  0x0A
000368 04eb      	.DW  _0x1E+136
000369 0423      	.DW  _0x0*2+651
                 
00036a 0007      	.DW  0x07
00036b 04f5      	.DW  _0x1E+146
00036c 042d      	.DW  _0x0*2+661
                 
00036d 000a      	.DW  0x0A
00036e 04fc      	.DW  _0x1E+153
00036f 0434      	.DW  _0x0*2+668
                 
000370 000c      	.DW  0x0C
000371 0506      	.DW  _0x1E+163
000372 043e      	.DW  _0x0*2+678
                 
000373 0028      	.DW  0x28
000374 06e0      	.DW  _ComputerScience
000375 00f8      	.DW  _0x1F*2
                 
000376 0002      	.DW  0x02
000377 0512      	.DW  _0x20
000378 0324      	.DW  _0x0*2+396
                 
000379 0002      	.DW  0x02
00037a 0514      	.DW  _0x20+2
00037b 03d1      	.DW  _0x0*2+569
                 
00037c 0002      	.DW  0x02
00037d 0516      	.DW  _0x20+4
00037e 02c8      	.DW  _0x0*2+304
                 
00037f 0002      	.DW  0x02
000380 0518      	.DW  _0x20+6
000381 021f      	.DW  _0x0*2+135
                 
000382 0002      	.DW  0x02
000383 051a      	.DW  _0x20+8
000384 01a2      	.DW  _0x0*2+10
                 
000385 0002      	.DW  0x02
000386 051c      	.DW  _0x20+10
000387 020d      	.DW  _0x0*2+117
                 
000388 000c      	.DW  0x0C
000389 0708      	.DW  _AWords
00038a 0120      	.DW  _0x21*2
                 
00038b 0002      	.DW  0x02
00038c 051e      	.DW  _0x22
00038d 01e3      	.DW  _0x0*2+75
                 
00038e 0002      	.DW  0x02
00038f 0520      	.DW  _0x22+2
000390 035f      	.DW  _0x0*2+455
                 
000391 0002      	.DW  0x02
000392 0522      	.DW  _0x22+4
000393 044a      	.DW  _0x0*2+690
                 
000394 0002      	.DW  0x02
000395 0524      	.DW  _0x22+6
000396 044c      	.DW  _0x0*2+692
                 
000397 0002      	.DW  0x02
000398 0526      	.DW  _0x22+8
000399 034e      	.DW  _0x0*2+438
                 
00039a 0002      	.DW  0x02
00039b 0528      	.DW  _0x22+10
00039c 01b8      	.DW  _0x0*2+32
                 
00039d 000c      	.DW  0x0C
00039e 0714      	.DW  _BWords
00039f 012c      	.DW  _0x23*2
                 
0003a0 0002      	.DW  0x02
0003a1 052a      	.DW  _0x24
0003a2 02d5      	.DW  _0x0*2+317
                 
0003a3 0002      	.DW  0x02
0003a4 052c      	.DW  _0x24+2
0003a5 0261      	.DW  _0x0*2+201
                 
0003a6 0002      	.DW  0x02
0003a7 052e      	.DW  _0x24+4
0003a8 0208      	.DW  _0x0*2+112
                 
0003a9 0002      	.DW  0x02
0003aa 0530      	.DW  _0x24+6
0003ab 044e      	.DW  _0x0*2+694
                 
0003ac 0002      	.DW  0x02
0003ad 0532      	.DW  _0x24+8
0003ae 0450      	.DW  _0x0*2+696
                 
0003af 0002      	.DW  0x02
0003b0 0534      	.DW  _0x24+10
0003b1 025a      	.DW  _0x0*2+194
                 
0003b2 0002      	.DW  0x02
0003b3 0536      	.DW  _0x24+12
0003b4 01ac      	.DW  _0x0*2+20
                 
0003b5 000e      	.DW  0x0E
0003b6 0720      	.DW  _CWords
0003b7 0138      	.DW  _0x25*2
                 
0003b8 0002      	.DW  0x02
0003b9 0538      	.DW  _0x26
0003ba 019c      	.DW  _0x0*2+4
                 
0003bb 0002      	.DW  0x02
0003bc 053a      	.DW  _0x26+2
0003bd 01dc      	.DW  _0x0*2+68
                 
0003be 0002      	.DW  0x02
0003bf 053c      	.DW  _0x26+4
0003c0 0452      	.DW  _0x0*2+698
                 
0003c1 0002      	.DW  0x02
0003c2 053e      	.DW  _0x26+6
0003c3 0454      	.DW  _0x0*2+700
                 
0003c4 0002      	.DW  0x02
0003c5 0540      	.DW  _0x26+8
0003c6 03e1      	.DW  _0x0*2+585
                 
0003c7 0002      	.DW  0x02
0003c8 0542      	.DW  _0x26+10
0003c9 0203      	.DW  _0x0*2+107
                 
0003ca 0002      	.DW  0x02
0003cb 0544      	.DW  _0x26+12
0003cc 0456      	.DW  _0x0*2+702
                 
0003cd 000e      	.DW  0x0E
0003ce 072e      	.DW  _FWords
0003cf 0146      	.DW  _0x27*2
                 
0003d0 0002      	.DW  0x02
0003d1 0546      	.DW  _0x28
0003d2 019c      	.DW  _0x0*2+4
                 
0003d3 0002      	.DW  0x02
0003d4 0548      	.DW  _0x28+2
0003d5 01dc      	.DW  _0x0*2+68
                 
0003d6 0002      	.DW  0x02
0003d7 054a      	.DW  _0x28+4
0003d8 0452      	.DW  _0x0*2+698
                 
0003d9 0002      	.DW  0x02
0003da 054c      	.DW  _0x28+6
0003db 0454      	.DW  _0x0*2+700
                 
0003dc 0002      	.DW  0x02
0003dd 054e      	.DW  _0x28+8
0003de 03e1      	.DW  _0x0*2+585
                 
0003df 0002      	.DW  0x02
0003e0 0550      	.DW  _0x28+10
0003e1 0203      	.DW  _0x0*2+107
                 
0003e2 0002      	.DW  0x02
0003e3 0552      	.DW  _0x28+12
0003e4 0456      	.DW  _0x0*2+702
                 
0003e5 000e      	.DW  0x0E
0003e6 073c      	.DW  _DWords
0003e7 0154      	.DW  _0x29*2
                 
0003e8 0002      	.DW  0x02
0003e9 0554      	.DW  _0x2A
0003ea 0324      	.DW  _0x0*2+396
                 
0003eb 0002      	.DW  0x02
0003ec 0556      	.DW  _0x2A+2
0003ed 03d1      	.DW  _0x0*2+569
                 
0003ee 0002      	.DW  0x02
0003ef 0558      	.DW  _0x2A+4
0003f0 02c8      	.DW  _0x0*2+304
                 
0003f1 0002      	.DW  0x02
0003f2 055a      	.DW  _0x2A+6
0003f3 021f      	.DW  _0x0*2+135
                 
0003f4 0002      	.DW  0x02
0003f5 055c      	.DW  _0x2A+8
0003f6 01a2      	.DW  _0x0*2+10
                 
0003f7 0002      	.DW  0x02
0003f8 055e      	.DW  _0x2A+10
0003f9 020d      	.DW  _0x0*2+117
                 
0003fa 0002      	.DW  0x02
0003fb 0560      	.DW  _0x2A+12
0003fc 01e3      	.DW  _0x0*2+75
                 
0003fd 0002      	.DW  0x02
0003fe 0562      	.DW  _0x2A+14
0003ff 035f      	.DW  _0x0*2+455
                 
000400 0002      	.DW  0x02
000401 0564      	.DW  _0x2A+16
000402 044a      	.DW  _0x0*2+690
                 
000403 0002      	.DW  0x02
000404 0566      	.DW  _0x2A+18
000405 044c      	.DW  _0x0*2+692
                 
000406 0002      	.DW  0x02
000407 0568      	.DW  _0x2A+20
000408 034e      	.DW  _0x0*2+438
                 
000409 0002      	.DW  0x02
00040a 056a      	.DW  _0x2A+22
00040b 01b8      	.DW  _0x0*2+32
                 
00040c 0002      	.DW  0x02
00040d 056c      	.DW  _0x2A+24
00040e 02d5      	.DW  _0x0*2+317
                 
00040f 0002      	.DW  0x02
000410 056e      	.DW  _0x2A+26
000411 0261      	.DW  _0x0*2+201
                 
000412 0002      	.DW  0x02
000413 0570      	.DW  _0x2A+28
000414 0208      	.DW  _0x0*2+112
                 
000415 0002      	.DW  0x02
000416 0572      	.DW  _0x2A+30
000417 044e      	.DW  _0x0*2+694
                 
000418 0002      	.DW  0x02
000419 0574      	.DW  _0x2A+32
00041a 0450      	.DW  _0x0*2+696
                 
00041b 0002      	.DW  0x02
00041c 0576      	.DW  _0x2A+34
00041d 025a      	.DW  _0x0*2+194
                 
00041e 0002      	.DW  0x02
00041f 0578      	.DW  _0x2A+36
000420 01ac      	.DW  _0x0*2+20
                 
000421 0002      	.DW  0x02
000422 057a      	.DW  _0x2A+38
000423 019c      	.DW  _0x0*2+4
                 
000424 0002      	.DW  0x02
000425 057c      	.DW  _0x2A+40
000426 01dc      	.DW  _0x0*2+68
                 
000427 0002      	.DW  0x02
000428 057e      	.DW  _0x2A+42
000429 0452      	.DW  _0x0*2+698
                 
00042a 0002      	.DW  0x02
00042b 0580      	.DW  _0x2A+44
00042c 0454      	.DW  _0x0*2+700
                 
00042d 0002      	.DW  0x02
00042e 0582      	.DW  _0x2A+46
00042f 03e1      	.DW  _0x0*2+585
                 
000430 0002      	.DW  0x02
000431 0584      	.DW  _0x2A+48
000432 0203      	.DW  _0x0*2+107
                 
000433 0002      	.DW  0x02
000434 0586      	.DW  _0x2A+50
000435 0456      	.DW  _0x0*2+702
                 
000436 0034      	.DW  0x34
000437 074a      	.DW  _Words
000438 0162      	.DW  _0x2B*2
                 
000439 0001      	.DW  0x01
00043a 07c3      	.DW  _health
00043b 0196      	.DW  _0x2C*2
                 
00043c 0002      	.DW  0x02
00043d 0588      	.DW  _0x30
00043e 0458      	.DW  _0x0*2+704
                 
00043f 0002      	.DW  0x02
000440 058a      	.DW  _0x30+2
000441 045a      	.DW  _0x0*2+706
                 
000442 0002      	.DW  0x02
000443 058c      	.DW  _0x30+4
000444 0458      	.DW  _0x0*2+704
                 
000445 0002      	.DW  0x02
000446 058e      	.DW  _0x30+6
000447 0458      	.DW  _0x0*2+704
                 
000448 0002      	.DW  0x02
000449 0590      	.DW  _0x30+8
00044a 0458      	.DW  _0x0*2+704
                 
00044b 000b      	.DW  0x0B
00044c 0592      	.DW  _0x34
00044d 0466      	.DW  _0x0*2+718
                 
00044e 0003      	.DW  0x03
00044f 059d      	.DW  _0x63
000450 0476      	.DW  _0x0*2+734
                 
000451 0002      	.DW  0x02
000452 05a0      	.DW  _0x6C
000453 0458      	.DW  _0x0*2+704
                 
000454 0003      	.DW  0x03
000455 05a2      	.DW  _0x6C+2
000456 0476      	.DW  _0x0*2+734
                 
000457 0009      	.DW  0x09
000458 05a5      	.DW  _0x6C+5
000459 0479      	.DW  _0x0*2+737
                 
00045a 0014      	.DW  0x14
00045b 05ae      	.DW  _0x80
00045c 0482      	.DW  _0x0*2+746
                 
00045d 0028      	.DW  0x28
00045e 05c2      	.DW  _0x80+20
00045f 0496      	.DW  _0x0*2+766
                 
000460 0001      	.DW  0x01
000461 07c5      	.DW  __seed_G101
000462 04be      	.DW  _0x2020060*2
                 
                 _0xFFFFFFFF:
000463 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000464 94f8      	CLI
000465 27ee      	CLR  R30
000466 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000467 e0f1      	LDI  R31,1
000468 bffb      	OUT  GICR,R31
000469 bfeb      	OUT  GICR,R30
00046a bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00046b e08d      	LDI  R24,(14-2)+1
00046c e0a2      	LDI  R26,2
00046d 27bb      	CLR  R27
                 __CLEAR_REG:
00046e 93ed      	ST   X+,R30
00046f 958a      	DEC  R24
000470 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000471 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000472 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000473 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000474 93ed      	ST   X+,R30
000475 9701      	SBIW R24,1
000476 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000477 ecea      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000478 e0f4      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000479 9185      	LPM  R24,Z+
00047a 9195      	LPM  R25,Z+
00047b 9700      	SBIW R24,0
00047c f061      	BREQ __GLOBAL_INI_END
00047d 91a5      	LPM  R26,Z+
00047e 91b5      	LPM  R27,Z+
00047f 9005      	LPM  R0,Z+
000480 9015      	LPM  R1,Z+
000481 01bf      	MOVW R22,R30
000482 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000483 9005      	LPM  R0,Z+
000484 920d      	ST   X+,R0
000485 9701      	SBIW R24,1
000486 f7e1      	BRNE __GLOBAL_INI_LOOP
000487 01fb      	MOVW R30,R22
000488 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000489 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00048a bfed      	OUT  SPL,R30
00048b e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00048c bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00048d e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00048e e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00048f 940c 0581 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;/*******************************************************
                 ;Chip type               : ATmega32
                 ;Program type            : Application
                 ;AVR Core Clock frequency: 1.000000 MHz
                 ;Memory model            : Small
                 ;External RAM size       : 0
                 ;Data Stack size         : 512
                 ;*******************************************************/
                 ;
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <io.h>
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include <delay.h>
                 ;#include "LCD.h"
                 
                 	.CSEG
                 _lcdCommand:
                 ; .FSTART _lcdCommand
000491 93aa      	ST   -Y,R26
                 ;	cmnd -> Y+0
000492 81e8      	LD   R30,Y
000493 bbe8      	OUT  0x18,R30
000494 9895      	CBI  0x12,5
000495 940e 0bc8 	CALL SUBOPT_0x0
000497 c258      	RJMP _0x20A0007
                 ; .FEND
                 _lcdData:
                 ; .FSTART _lcdData
000498 93aa      	ST   -Y,R26
                 ;	data -> Y+0
000499 81e8      	LD   R30,Y
00049a bbe8      	OUT  0x18,R30
00049b 9a95      	SBI  0x12,5
00049c 940e 0bc8 	CALL SUBOPT_0x0
00049e c251      	RJMP _0x20A0007
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
00049f efef      	LDI  R30,LOW(255)
0004a0 bbe7      	OUT  0x17,R30
0004a1 b3e1      	IN   R30,0x11
0004a2 6fe0      	ORI  R30,LOW(0xF0)
0004a3 bbe1      	OUT  0x11,R30
0004a4 9897      	CBI  0x12,7
0004a5 940e 0bd3 	CALL SUBOPT_0x1
0004a7 e3a8      	LDI  R26,LOW(56)
0004a8 dfe8      	RCALL _lcdCommand
0004a9 e0ae      	LDI  R26,LOW(14)
0004aa dfe6      	RCALL _lcdCommand
0004ab e0a1      	LDI  R26,LOW(1)
0004ac dfe4      	RCALL _lcdCommand
0004ad 940e 0bd3 	CALL SUBOPT_0x1
0004af e0a6      	LDI  R26,LOW(6)
0004b0 dfe0      	RCALL _lcdCommand
0004b1 9508      	RET
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0004b2 940e 0bd8 	CALL SUBOPT_0x2
                 ;	x -> Y+5
                 ;	y -> Y+4
                 ;	firstCharAdr -> Y+0
0004b4 dfdc      	RCALL _lcdCommand
0004b5 c071      	RJMP _0x20A0009
                 ; .FEND
                 _lcd_print:
                 ; .FSTART _lcd_print
0004b6 93ba      	ST   -Y,R27
0004b7 93aa      	ST   -Y,R26
0004b8 931a      	ST   -Y,R17
                 ;	*str -> Y+1
                 ;	i -> R17
0004b9 e010      	LDI  R17,0
                 _0x3:
0004ba 940e 0bed 	CALL SUBOPT_0x3
0004bc 91ec      	LD   R30,X
0004bd 30e0      	CPI  R30,0
0004be f031      	BREQ _0x5
0004bf 940e 0bed 	CALL SUBOPT_0x3
0004c1 91ac      	LD   R26,X
0004c2 dfd5      	RCALL _lcdData
0004c3 5f1f      	SUBI R17,-1
0004c4 cff5      	RJMP _0x3
                 _0x5:
0004c5 c076      	RJMP _0x20A0008
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 _get_key:
                 ; .FSTART _get_key
0004c6 eeef      	LDI  R30,LOW(239)
0004c7 bbe5      	OUT  0x15,R30
0004c8 0000      	NOP
0004c9 940e 0bf3 	CALL SUBOPT_0x4
0004cb f011      	BREQ _0x7
0004cc 2444      	CLR  R4
0004cd c018      	RJMP _0x8
                 _0x7:
0004ce edef      	LDI  R30,LOW(223)
0004cf bbe5      	OUT  0x15,R30
0004d0 0000      	NOP
0004d1 940e 0bf3 	CALL SUBOPT_0x4
0004d3 f011      	BREQ _0x9
0004d4 e0e1      	LDI  R30,LOW(1)
0004d5 c00f      	RJMP _0x82
                 _0x9:
0004d6 ebef      	LDI  R30,LOW(191)
0004d7 bbe5      	OUT  0x15,R30
0004d8 0000      	NOP
0004d9 940e 0bf3 	CALL SUBOPT_0x4
0004db f011      	BREQ _0xB
0004dc e0e2      	LDI  R30,LOW(2)
0004dd c007      	RJMP _0x82
                 _0xB:
0004de e7ef      	LDI  R30,LOW(127)
0004df bbe5      	OUT  0x15,R30
0004e0 0000      	NOP
0004e1 b3e3      	IN   R30,0x13
0004e2 70ef      	ANDI R30,LOW(0xF)
0004e3 2e5e      	MOV  R5,R30
0004e4 e0e3      	LDI  R30,LOW(3)
                 _0x82:
0004e5 2e4e      	MOV  R4,R30
                 _0x8:
0004e6 e0ee      	LDI  R30,LOW(14)
0004e7 15e5      	CP   R30,R5
0004e8 f431      	BRNE _0xD
0004e9 2de4      	MOV  R30,R4
0004ea e0f0      	LDI  R31,0
0004eb 51e6      	SUBI R30,LOW(-_keypad)
0004ec 4ffa      	SBCI R31,HIGH(-_keypad)
0004ed 81e0      	LD   R30,Z
0004ee 9508      	RET
                 _0xD:
0004ef e0ed      	LDI  R30,LOW(13)
0004f0 15e5      	CP   R30,R5
0004f1 f419      	BRNE _0xF
                +
0004f2 eeae     +LDI R26 , LOW ( _keypad + ( 4 ) )
0004f3 e0b5     +LDI R27 , HIGH ( _keypad + ( 4 ) )
                 	__POINTW2MN _keypad,4
0004f4 c008      	RJMP _0x20A000A
                 _0xF:
0004f5 e0eb      	LDI  R30,LOW(11)
0004f6 15e5      	CP   R30,R5
0004f7 f419      	BRNE _0x11
                +
0004f8 efa2     +LDI R26 , LOW ( _keypad + ( 8 ) )
0004f9 e0b5     +LDI R27 , HIGH ( _keypad + ( 8 ) )
                 	__POINTW2MN _keypad,8
0004fa c002      	RJMP _0x20A000A
                 _0x11:
                +
0004fb efa6     +LDI R26 , LOW ( _keypad + ( 12 ) )
0004fc e0b5     +LDI R27 , HIGH ( _keypad + ( 12 ) )
                 	__POINTW2MN _keypad,12
                 _0x20A000A:
0004fd 27ee      	CLR  R30
0004fe 0da4      	ADD  R26,R4
0004ff 1fbe      	ADC  R27,R30
000500 91ec      	LD   R30,X
000501 9508      	RET
000502 9508      	RET
                 ; .FEND
                 ;#include <string.h>
                 ;#include <stdbool.h>
                 ;#include "LCD2.h"
                 _lcdCommand2:
                 ; .FSTART _lcdCommand2
000503 93aa      	ST   -Y,R26
                 ;	cmnd -> Y+0
000504 81e8      	LD   R30,Y
000505 bbeb      	OUT  0x1B,R30
000506 9891      	CBI  0x12,1
000507 940e 0bf9 	CALL SUBOPT_0x5
000509 c1e6      	RJMP _0x20A0007
                 ; .FEND
                 _lcdData2:
                 ; .FSTART _lcdData2
00050a 93aa      	ST   -Y,R26
                 ;	data -> Y+0
00050b 81e8      	LD   R30,Y
00050c bbeb      	OUT  0x1B,R30
00050d 9a91      	SBI  0x12,1
00050e 940e 0bf9 	CALL SUBOPT_0x5
000510 c1df      	RJMP _0x20A0007
                 ; .FEND
                 _lcd_init2:
                 ; .FSTART _lcd_init2
000511 efef      	LDI  R30,LOW(255)
000512 bbea      	OUT  0x1A,R30
000513 b3e1      	IN   R30,0x11
000514 60eb      	ORI  R30,LOW(0xB)
000515 bbe1      	OUT  0x11,R30
000516 9894      	CBI  0x12,4
000517 940e 0bd3 	CALL SUBOPT_0x1
000519 e3a8      	LDI  R26,LOW(56)
00051a dfe8      	RCALL _lcdCommand2
00051b e0ae      	LDI  R26,LOW(14)
00051c dfe6      	RCALL _lcdCommand2
00051d e0a1      	LDI  R26,LOW(1)
00051e dfe4      	RCALL _lcdCommand2
00051f 940e 0bd3 	CALL SUBOPT_0x1
000521 e0a6      	LDI  R26,LOW(6)
000522 dfe0      	RCALL _lcdCommand2
000523 9508      	RET
                 ; .FEND
                 _lcd_gotoxy2:
                 ; .FSTART _lcd_gotoxy2
000524 940e 0bd8 	CALL SUBOPT_0x2
                 ;	x -> Y+5
                 ;	y -> Y+4
                 ;	firstCharAdr -> Y+0
000526 dfdc      	RCALL _lcdCommand2
                 _0x20A0009:
                +
000527 ec88     +LDI R24 , LOW ( 200 )
000528 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000529 9701     +SBIW R24 , 1
00052a f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
00052b 9626      	ADIW R28,6
00052c 9508      	RET
                 ; .FEND
                 _lcd_print2:
                 ; .FSTART _lcd_print2
00052d 93ba      	ST   -Y,R27
00052e 93aa      	ST   -Y,R26
00052f 931a      	ST   -Y,R17
                 ;	*str -> Y+1
                 ;	i -> R17
000530 e010      	LDI  R17,0
                 _0x13:
000531 940e 0bed 	CALL SUBOPT_0x3
000533 91ec      	LD   R30,X
000534 30e0      	CPI  R30,0
000535 f031      	BREQ _0x15
000536 940e 0bed 	CALL SUBOPT_0x3
000538 91ac      	LD   R26,X
000539 dfd0      	RCALL _lcdData2
00053a 5f1f      	SUBI R17,-1
00053b cff5      	RJMP _0x13
                 _0x15:
                 _0x20A0008:
00053c 8118      	LDD  R17,Y+0
00053d 9623      	ADIW R28,3
00053e 9508      	RET
                 ; .FEND
                 ;
                 ;unsigned char out;
                 ;unsigned char SelectedCategory;
                 ;int i;
                 ;char* h;
                 ;
                 ;int WordIndex = 0;
                 ;int WordLen;
                 ;char tmp[50];
                 ;char Scoretmp[50];
                 ;#define  CATEGORY_LENGTH    4
                 ;#define MAX_HEALTH 3
                 ;#define MAX_WORD_NUM 20
                 ;char* Category[CATEGORY_LENGTH] = {"Sport","Movie","Countries","CS"};
                 
                 	.DSEG
                 _0x16:
000260           	.BYTE 0x19
                 ;char* Sport[20] = {"football","basketball","volleyball","karate","kungfu","boxing","tennis","running","wrestling","hocke ...
                 ;                    "judo","golf","baseball","billiard","curling","waterpolo","taekwando","fencing","swimming","jujitsu" ...
                 _0x18:
000279           	.BYTE 0xA5
                 ;char * Movie[20] ={"joker","batman","godfather","lizard","soul","incredibles","memento","arrival","buried","cube","blade ...
                 ;               "shining","pyscho","titanic","vertigo","exam","nocturnalanimals","swissarmyman","seperation"
                 ;               };
                 _0x1A:
00031e           	.BYTE 0xAA
                 ;
                 ;char * Countries[20]={"iran","germany","brazil","england","argentina","sweden","samoa","china","uae","uzbakistan"
                 ;                        ,"denmark","ghana","bangladesh","venezuela","zimbawe","nigeria","luxembourg","greece","france"," ...
                 _0x1C:
0003c8           	.BYTE 0x9B
                 ;
                 ;char * ComputerScience[20]={"code","debug","compiler","java","boolean","operatingsystem","github","function","syntax" ," ...
                 ;                            "argument","python","machinelearning","interpreter","google","query","algorithm","kernel","p ...
                 ;
                 ;};
                 _0x1E:
000463           	.BYTE 0xAF
                 ;char* AWords[6] = { "a","b","c","d","e","f" };
                 _0x20:
000512           	.BYTE 0xC
                 ;char* BWords[6] = { "g","h","i","j","k","l" };
                 _0x22:
00051e           	.BYTE 0xC
                 ;char* CWords[7] = { "m","n","o","p","q","r","s" };
                 _0x24:
00052a           	.BYTE 0xE
                 ;char* FWords[7] = { "t","u","v","w","x","y","z" };
                 _0x26:
000538           	.BYTE 0xE
                 ;char* DWords[7] = { "t","u","v","w","x","y","z" };
                 _0x28:
000546           	.BYTE 0xE
                 ;
                 ;char* Words[26] = { "a","b","c","d","e","f", "g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y" ...
                 _0x2A:
000554           	.BYTE 0x34
                 ;
                 ;int alphabet[26];
                 ;
                 ;int point;
                 ;
                 ;int WordSetState = 0;
                 ;
                 ;int CharIndex; // index of words set
                 ; char* ChoosenChar;
                 ;char* CurrentWord;
                 ;
                 ;bool bCanSelectCategory;
                 ;bool bCanGuess;
                 ;bool bIsSelectedNumber;
                 ;bool bIsFirstTime;
                 ;bool bWrongGuess;
                 ;bool bFoundCorrectGuess;
                 ;bool bWon;
                 ;
                 ;int health = MAX_HEALTH;
                 ;
                 ;void CheckGuess( char* in,char* CurrWord);
                 ;
                 ;void ShowCategory();
                 ;
                 ;
                 ;void SelectAndShowWord(unsigned char in);
                 ;
                 ;void ShowRandomWord(char* InputStr);
                 ;
                 ;void Print6( char* in[6]);
                 ;
                 ;void Print7(char*  in[7]);
                 ;void InitAlphabet();
                 ;void InitHealth();
                 ;void EndGame();
                 ;void CalculatePoint();
                 ;
                 ;// Timer1 overflow interrupt service routine
                 ;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
                 ; 0000 005E {
                 
                 	.CSEG
                 _timer1_ovf_isr:
                 ; .FSTART _timer1_ovf_isr
00053f 940e 0c04 	CALL SUBOPT_0x6
                 ; 0000 005F // Reinitialize Timer1 value
                 ; 0000 0060 TCNT1H=0xFF;
000541 bded      	OUT  0x2D,R30
                 ; 0000 0061 TCNT1L=0x0F;
000542 e0ef      	LDI  R30,LOW(15)
000543 bdec      	OUT  0x2C,R30
                 ; 0000 0062 // Place your code here
                 ; 0000 0063 
                 ; 0000 0064 lcd_gotoxy2(11,4);
000544 940e 0c13 	CALL SUBOPT_0x7
                 ; 0000 0065 for ( i = 0 ; i < 3; i++){
                 _0x2E:
000546 e0e3      	LDI  R30,LOW(3)
000547 e0f0      	LDI  R31,HIGH(3)
000548 168e      	CP   R8,R30
000549 069f      	CPC  R9,R31
00054a f43c      	BRGE _0x2F
                 ; 0000 0066 
                 ; 0000 0067     lcd_print2(" ");
                +
00054b e8a8     +LDI R26 , LOW ( _0x30 + ( 0 ) )
00054c e0b5     +LDI R27 , HIGH ( _0x30 + ( 0 ) )
                 	__POINTW2MN _0x30,0
00054d dfdf      	RCALL _lcd_print2
                 ; 0000 0068 }
00054e 01f4      	MOVW R30,R8
00054f 9631      	ADIW R30,1
000550 014f      	MOVW R8,R30
000551 cff4      	RJMP _0x2E
                 _0x2F:
                 ; 0000 0069 lcd_gotoxy2(11,4);
000552 940e 0c13 	CALL SUBOPT_0x7
                 ; 0000 006A 
                 ; 0000 006B for ( i = 0 ; i < health; i++){
                 _0x32:
000554 91e0 07c3 	LDS  R30,_health
000556 91f0 07c4 	LDS  R31,_health+1
000558 168e      	CP   R8,R30
000559 069f      	CPC  R9,R31
00055a f43c      	BRGE _0x33
                 ; 0000 006C 
                 ; 0000 006D     lcd_print2("*");
                +
00055b e8aa     +LDI R26 , LOW ( _0x30 + ( 2 ) )
00055c e0b5     +LDI R27 , HIGH ( _0x30 + ( 2 ) )
                 	__POINTW2MN _0x30,2
00055d dfcf      	RCALL _lcd_print2
                 ; 0000 006E }
00055e 01f4      	MOVW R30,R8
00055f 9631      	ADIW R30,1
000560 014f      	MOVW R8,R30
000561 cff2      	RJMP _0x32
                 _0x33:
                 ; 0000 006F 
                 ; 0000 0070 
                 ; 0000 0071      sprintf(Scoretmp,"Score: %d",point);
000562 e2ee      	LDI  R30,LOW(_Scoretmp)
000563 e0f6      	LDI  R31,HIGH(_Scoretmp)
000564 93fa      	ST   -Y,R31
000565 93ea      	ST   -Y,R30
                +
000566 e5ec     +LDI R30 , LOW ( 2 * _0x0 + ( 708 ) )
000567 e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 708 ) )
                 	__POINTW1FN _0x0,708
000568 93fa      	ST   -Y,R31
000569 93ea      	ST   -Y,R30
00056a 91e0 07b2 	LDS  R30,_point
00056c 91f0 07b3 	LDS  R31,_point+1
00056e 940e 0c1b 	CALL SUBOPT_0x8
                 ; 0000 0072 
                 ; 0000 0073       lcd_gotoxy2(10,3);
000570 e0ea      	LDI  R30,LOW(10)
000571 93ea      	ST   -Y,R30
000572 e0a3      	LDI  R26,LOW(3)
000573 dfb0      	RCALL _lcd_gotoxy2
                 ; 0000 0074       lcd_print2(Scoretmp);
000574 e2ae      	LDI  R26,LOW(_Scoretmp)
000575 e0b6      	LDI  R27,HIGH(_Scoretmp)
000576 dfb6      	RCALL _lcd_print2
                 ; 0000 0075       lcd_print2(" ");
                +
000577 e8ac     +LDI R26 , LOW ( _0x30 + ( 4 ) )
000578 e0b5     +LDI R27 , HIGH ( _0x30 + ( 4 ) )
                 	__POINTW2MN _0x30,4
000579 dfb3      	RCALL _lcd_print2
                 ; 0000 0076       lcd_print2(" ");
                +
00057a e8ae     +LDI R26 , LOW ( _0x30 + ( 6 ) )
00057b e0b5     +LDI R27 , HIGH ( _0x30 + ( 6 ) )
                 	__POINTW2MN _0x30,6
00057c dfb0      	RCALL _lcd_print2
                 ; 0000 0077       lcd_print2(" ");
                +
00057d e9a0     +LDI R26 , LOW ( _0x30 + ( 8 ) )
00057e e0b5     +LDI R27 , HIGH ( _0x30 + ( 8 ) )
                 	__POINTW2MN _0x30,8
00057f dfad      	RCALL _lcd_print2
                 ; 0000 0078 }
000580 c0ec      	RJMP _0x8A
                 ; .FEND
                 
                 	.DSEG
                 _0x30:
000588           	.BYTE 0xA
                 ;
                 ;void main(void)
                 ; 0000 007B {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 007C 
                 ; 0000 007D TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
000581 e0e0      	LDI  R30,LOW(0)
000582 bdef      	OUT  0x2F,R30
                 ; 0000 007E TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (1<<CS12) | (0<<CS11) | (0<<CS10);
000583 e0e4      	LDI  R30,LOW(4)
000584 bdee      	OUT  0x2E,R30
                 ; 0000 007F TCNT1H=0xFF;
000585 efef      	LDI  R30,LOW(255)
000586 bded      	OUT  0x2D,R30
                 ; 0000 0080 TCNT1L=0x0F;
000587 e0ef      	LDI  R30,LOW(15)
000588 bdec      	OUT  0x2C,R30
                 ; 0000 0081 ICR1H=0x00;
000589 e0e0      	LDI  R30,LOW(0)
00058a bde7      	OUT  0x27,R30
                 ; 0000 0082 ICR1L=0x00;
00058b bde6      	OUT  0x26,R30
                 ; 0000 0083 OCR1AH=0x00;
00058c bdeb      	OUT  0x2B,R30
                 ; 0000 0084 OCR1AL=0x00;
00058d bdea      	OUT  0x2A,R30
                 ; 0000 0085 OCR1BH=0x00;
00058e bde9      	OUT  0x29,R30
                 ; 0000 0086 OCR1BL=0x00;
00058f bde8      	OUT  0x28,R30
                 ; 0000 0087 
                 ; 0000 0088 // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 0089 TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (1<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
000590 e0e4      	LDI  R30,LOW(4)
000591 bfe9      	OUT  0x39,R30
                 ; 0000 008A 
                 ; 0000 008B     bIsFirstTime = true;
000592 e0e1      	LDI  R30,LOW(1)
000593 93e0 07bf 	STS  _bIsFirstTime,R30
                 ; 0000 008C      MCUCR=0x02;
000595 e0e2      	LDI  R30,LOW(2)
000596 bfe5      	OUT  0x35,R30
                 ; 0000 008D      GICR=(1<<INT0);
000597 e4e0      	LDI  R30,LOW(64)
000598 bfeb      	OUT  0x3B,R30
                 ; 0000 008E 
                 ; 0000 008F 
                 ; 0000 0090     KEY_DDR = 0xF0;
000599 efe0      	LDI  R30,LOW(240)
00059a bbe4      	OUT  0x14,R30
                 ; 0000 0091     KEY_PRT = 0x0F;
00059b e0ef      	LDI  R30,LOW(15)
00059c bbe5      	OUT  0x15,R30
                 ; 0000 0092     i=0;
00059d 2488      	CLR  R8
00059e 2499      	CLR  R9
                 ; 0000 0093 
                 ; 0000 0094 // Global enable interrupts
                 ; 0000 0095 
                 ; 0000 0096 
                 ; 0000 0097 
                 ; 0000 0098 
                 ; 0000 0099     ShowCategory();
00059f d0db      	RCALL _ShowCategory
                 ; 0000 009A 
                 ; 0000 009B     lcd_init2();
0005a0 df70      	RCALL _lcd_init2
                 ; 0000 009C     lcd_gotoxy2(1,1);
0005a1 e0e1      	LDI  R30,LOW(1)
0005a2 93ea      	ST   -Y,R30
0005a3 e0a1      	LDI  R26,LOW(1)
0005a4 df7f      	RCALL _lcd_gotoxy2
                 ; 0000 009D     lcd_print2("Second Lcd");
                +
0005a5 e9a2     +LDI R26 , LOW ( _0x34 + ( 0 ) )
0005a6 e0b5     +LDI R27 , HIGH ( _0x34 + ( 0 ) )
                 	__POINTW2MN _0x34,0
0005a7 df85      	RCALL _lcd_print2
                 ; 0000 009E #asm("sei")
0005a8 9478      	sei
                 ; 0000 009F 
                 ; 0000 00A0 while (1)
                 _0x35:
                 ; 0000 00A1       {
                 ; 0000 00A2       // Place your code here
                 ; 0000 00A3 
                 ; 0000 00A4       }
0005a9 cfff      	RJMP _0x35
                 ; 0000 00A5 }
                 _0x38:
0005aa cfff      	RJMP _0x38
                 ; .FEND
                 
                 	.DSEG
                 _0x34:
000592           	.BYTE 0xB
                 ;
                 ;
                 ;
                 ;
                 ;interrupt [EXT_INT0] void ext_int0_isr(void)
                 ; 0000 00AB {
                 
                 	.CSEG
                 _ext_int0_isr:
                 ; .FSTART _ext_int0_isr
0005ab 940e 0c04 	CALL SUBOPT_0x6
                 ; 0000 00AC 
                 ; 0000 00AD   DDRA=0xFF;
0005ad bbea      	OUT  0x1A,R30
                 ; 0000 00AE   PORTA=0x00;
0005ae e0e0      	LDI  R30,LOW(0)
0005af bbeb      	OUT  0x1B,R30
                 ; 0000 00AF 
                 ; 0000 00B0  lcd_gotoxy(1,1);
0005b0 e0e1      	LDI  R30,LOW(1)
0005b1 93ea      	ST   -Y,R30
0005b2 e0a1      	LDI  R26,LOW(1)
0005b3 defe      	RCALL _lcd_gotoxy
                 ; 0000 00B1 
                 ; 0000 00B2  out=get_key();
0005b4 df11      	RCALL _get_key
0005b5 2e7e      	MOV  R7,R30
                 ; 0000 00B3 
                 ; 0000 00B4 
                 ; 0000 00B5 
                 ; 0000 00B6  if(bCanSelectCategory == true)
0005b6 91a0 07bc 	LDS  R26,_bCanSelectCategory
0005b8 30a1      	CPI  R26,LOW(0x1)
0005b9 f4a1      	BRNE _0x39
                 ; 0000 00B7  {
                 ; 0000 00B8 
                 ; 0000 00B9     if(atoi(&out) >= 1 && atoi(&out) <= CATEGORY_LENGTH)  //Check If input is valid
0005ba e0a7      	LDI  R26,LOW(7)
0005bb e0b0      	LDI  R27,HIGH(7)
0005bc 940e 0b55 	CALL _atoi
0005be 9731      	SBIW R30,1
0005bf f034      	BRLT _0x3B
0005c0 e0a7      	LDI  R26,LOW(7)
0005c1 e0b0      	LDI  R27,HIGH(7)
0005c2 940e 0b55 	CALL _atoi
0005c4 9735      	SBIW R30,5
0005c5 f00c      	BRLT _0x3C
                 _0x3B:
0005c6 c006      	RJMP _0x3A
                 _0x3C:
                 ; 0000 00BA     {
                 ; 0000 00BB        bCanSelectCategory = false;
0005c7 e0e0      	LDI  R30,LOW(0)
0005c8 93e0 07bc 	STS  _bCanSelectCategory,R30
                 ; 0000 00BC        SelectedCategory = out;
0005ca 2c67      	MOV  R6,R7
                 ; 0000 00BD        SelectAndShowWord(out);
0005cb 2da7      	MOV  R26,R7
0005cc d0e7      	RCALL _SelectAndShowWord
                 ; 0000 00BE 
                 ; 0000 00BF     }
                 ; 0000 00C0  }
                 _0x3A:
                 ; 0000 00C1  else if ( bCanGuess == true )
0005cd c09b      	RJMP _0x3D
                 _0x39:
0005ce 91a0 07bd 	LDS  R26,_bCanGuess
0005d0 30a1      	CPI  R26,LOW(0x1)
0005d1 f009      	BREQ PC+2
0005d2 c096      	RJMP _0x3E
                 ; 0000 00C2  {
                 ; 0000 00C3 
                 ; 0000 00C4 
                 ; 0000 00C5 
                 ; 0000 00C6     if(out == 'A')
0005d3 e4e1      	LDI  R30,LOW(65)
0005d4 15e7      	CP   R30,R7
0005d5 f461      	BRNE _0x3F
                 ; 0000 00C7        {
                 ; 0000 00C8             WordSetState = 0;
0005d6 e0e0      	LDI  R30,LOW(0)
0005d7 93e0 07b4 	STS  _WordSetState,R30
0005d9 93e0 07b5 	STS  _WordSetState+1,R30
                 ; 0000 00C9             Print6( AWords);
0005db e0a8      	LDI  R26,LOW(_AWords)
0005dc e0b7      	LDI  R27,HIGH(_AWords)
0005dd d1cd      	RCALL _Print6
                 ; 0000 00CA 
                 ; 0000 00CB             bIsFirstTime = false;
0005de e0e0      	LDI  R30,LOW(0)
0005df 93e0 07bf 	STS  _bIsFirstTime,R30
                 ; 0000 00CC        }
                 ; 0000 00CD        else if(out == 'B')
0005e1 c034      	RJMP _0x40
                 _0x3F:
0005e2 e4e2      	LDI  R30,LOW(66)
0005e3 15e7      	CP   R30,R7
0005e4 f459      	BRNE _0x41
                 ; 0000 00CE        {
                 ; 0000 00CF             WordSetState = 1;
0005e5 e0e1      	LDI  R30,LOW(1)
0005e6 e0f0      	LDI  R31,HIGH(1)
0005e7 940e 0c24 	CALL SUBOPT_0x9
                 ; 0000 00D0             Print6( BWords);
0005e9 e1a4      	LDI  R26,LOW(_BWords)
0005ea e0b7      	LDI  R27,HIGH(_BWords)
0005eb d1bf      	RCALL _Print6
                 ; 0000 00D1             bIsFirstTime = false;
0005ec e0e0      	LDI  R30,LOW(0)
0005ed 93e0 07bf 	STS  _bIsFirstTime,R30
                 ; 0000 00D2        }
                 ; 0000 00D3        else if(out == 'C')
0005ef c026      	RJMP _0x42
                 _0x41:
0005f0 e4e3      	LDI  R30,LOW(67)
0005f1 15e7      	CP   R30,R7
0005f2 f459      	BRNE _0x43
                 ; 0000 00D4        {
                 ; 0000 00D5             WordSetState = 2;
0005f3 e0e2      	LDI  R30,LOW(2)
0005f4 e0f0      	LDI  R31,HIGH(2)
0005f5 940e 0c24 	CALL SUBOPT_0x9
                 ; 0000 00D6             Print7( CWords);
0005f7 e2a0      	LDI  R26,LOW(_CWords)
0005f8 e0b7      	LDI  R27,HIGH(_CWords)
0005f9 d1d1      	RCALL _Print7
                 ; 0000 00D7             bIsFirstTime = false;
0005fa e0e0      	LDI  R30,LOW(0)
0005fb 93e0 07bf 	STS  _bIsFirstTime,R30
                 ; 0000 00D8        }
                 ; 0000 00D9        else if(out == 'D')
0005fd c018      	RJMP _0x44
                 _0x43:
0005fe e4e4      	LDI  R30,LOW(68)
0005ff 15e7      	CP   R30,R7
000600 f459      	BRNE _0x45
                 ; 0000 00DA        {
                 ; 0000 00DB             WordSetState = 3;
000601 e0e3      	LDI  R30,LOW(3)
000602 e0f0      	LDI  R31,HIGH(3)
000603 940e 0c24 	CALL SUBOPT_0x9
                 ; 0000 00DC             Print7( FWords);
000605 e2ae      	LDI  R26,LOW(_FWords)
000606 e0b7      	LDI  R27,HIGH(_FWords)
000607 d1c3      	RCALL _Print7
                 ; 0000 00DD             bIsFirstTime = false;
000608 e0e0      	LDI  R30,LOW(0)
000609 93e0 07bf 	STS  _bIsFirstTime,R30
                 ; 0000 00DE        }else
00060b c00a      	RJMP _0x46
                 _0x45:
                 ; 0000 00DF        {
                 ; 0000 00E0            if(!bIsFirstTime)
00060c 91e0 07bf 	LDS  R30,_bIsFirstTime
00060e 30e0      	CPI  R30,0
00060f f431      	BRNE _0x47
                 ; 0000 00E1            {
                 ; 0000 00E2                 if(out == '#')
000610 e2e3      	LDI  R30,LOW(35)
000611 15e7      	CP   R30,R7
000612 f019      	BREQ _0x49
                 ; 0000 00E3                 {
                 ; 0000 00E4                     //todo UpperCase
                 ; 0000 00E5                 }
                 ; 0000 00E6                 else
                 ; 0000 00E7                 {
                 ; 0000 00E8                      bIsSelectedNumber = true;
000613 e0e1      	LDI  R30,LOW(1)
000614 93e0 07be 	STS  _bIsSelectedNumber,R30
                 ; 0000 00E9                 }
                 _0x49:
                 ; 0000 00EA 
                 ; 0000 00EB            }
                 ; 0000 00EC        }
                 _0x47:
                 _0x46:
                 _0x44:
                 _0x42:
                 _0x40:
                 ; 0000 00ED 
                 ; 0000 00EE 
                 ; 0000 00EF     if(bIsSelectedNumber)
000616 91e0 07be 	LDS  R30,_bIsSelectedNumber
000618 30e0      	CPI  R30,0
000619 f409      	BRNE PC+2
00061a c04e      	RJMP _0x4A
                 ; 0000 00F0     {
                 ; 0000 00F1         bIsSelectedNumber = false;
00061b e0e0      	LDI  R30,LOW(0)
00061c 93e0 07be 	STS  _bIsSelectedNumber,R30
                 ; 0000 00F2 
                 ; 0000 00F3         h = &out;
00061e e0e7      	LDI  R30,LOW(7)
00061f e0f0      	LDI  R31,HIGH(7)
000620 015f      	MOVW R10,R30
                 ; 0000 00F4         sscanf(&out,"%d",&CharIndex);
000621 93fa      	ST   -Y,R31
000622 93ea      	ST   -Y,R30
                +
000623 e6e3     +LDI R30 , LOW ( 2 * _0x0 + ( 715 ) )
000624 e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 715 ) )
                 	__POINTW1FN _0x0,715
000625 93fa      	ST   -Y,R31
000626 93ea      	ST   -Y,R30
000627 ebe6      	LDI  R30,LOW(_CharIndex)
000628 e0f7      	LDI  R31,HIGH(_CharIndex)
000629 2766      	CLR  R22
00062a 2777      	CLR  R23
00062b 940e 0d07 	CALL __PUTPARD1
00062d e084      	LDI  R24,4
00062e 940e 0b28 	CALL _sscanf
000630 9628      	ADIW R28,8
                 ; 0000 00F5 
                 ; 0000 00F6 
                 ; 0000 00F7 
                 ; 0000 00F8         if(WordSetState == 0)
000631 91e0 07b4 	LDS  R30,_WordSetState
000633 91f0 07b5 	LDS  R31,_WordSetState+1
000635 9730      	SBIW R30,0
000636 f429      	BRNE _0x4B
                 ; 0000 00F9         {
                 ; 0000 00FA                 ChoosenChar = AWords[CharIndex - 1];
000637 940e 0c29 	CALL SUBOPT_0xA
000639 e0a8      	LDI  R26,LOW(_AWords)
00063a e0b7      	LDI  R27,HIGH(_AWords)
00063b c01a      	RJMP _0x83
                 ; 0000 00FB 
                 ; 0000 00FC         }
                 ; 0000 00FD         else if ( WordSetState == 1)
                 _0x4B:
00063c 940e 0c2f 	CALL SUBOPT_0xB
00063e 9711      	SBIW R26,1
00063f f429      	BRNE _0x4D
                 ; 0000 00FE         {
                 ; 0000 00FF                ChoosenChar = BWords[CharIndex - 1];
000640 940e 0c29 	CALL SUBOPT_0xA
000642 e1a4      	LDI  R26,LOW(_BWords)
000643 e0b7      	LDI  R27,HIGH(_BWords)
000644 c011      	RJMP _0x83
                 ; 0000 0100 
                 ; 0000 0101         }
                 ; 0000 0102         else if ( WordSetState == 2)
                 _0x4D:
000645 940e 0c2f 	CALL SUBOPT_0xB
000647 9712      	SBIW R26,2
000648 f429      	BRNE _0x4F
                 ; 0000 0103         {
                 ; 0000 0104                ChoosenChar = CWords[CharIndex - 1];
000649 940e 0c29 	CALL SUBOPT_0xA
00064b e2a0      	LDI  R26,LOW(_CWords)
00064c e0b7      	LDI  R27,HIGH(_CWords)
00064d c008      	RJMP _0x83
                 ; 0000 0105         }
                 ; 0000 0106         else if ( WordSetState == 3)
                 _0x4F:
00064e 940e 0c2f 	CALL SUBOPT_0xB
000650 9713      	SBIW R26,3
000651 f461      	BRNE _0x51
                 ; 0000 0107         {
                 ; 0000 0108               ChoosenChar = DWords[CharIndex - 1];
000652 940e 0c29 	CALL SUBOPT_0xA
000654 e3ac      	LDI  R26,LOW(_DWords)
000655 e0b7      	LDI  R27,HIGH(_DWords)
                 _0x83:
000656 0fee      	LSL  R30
000657 1fff      	ROL  R31
000658 940e 0c34 	CALL SUBOPT_0xC
00065a 93e0 07b8 	STS  _ChoosenChar,R30
00065c 93f0 07b9 	STS  _ChoosenChar+1,R31
                 ; 0000 0109         }
                 ; 0000 010A 
                 ; 0000 010B         //lcd_print2(&ChoosenChar);
                 ; 0000 010C         CheckGuess(ChoosenChar, CurrentWord);
                 _0x51:
00065e 91e0 07b8 	LDS  R30,_ChoosenChar
000660 91f0 07b9 	LDS  R31,_ChoosenChar+1
000662 93fa      	ST   -Y,R31
000663 93ea      	ST   -Y,R30
000664 91a0 07ba 	LDS  R26,_CurrentWord
000666 91b0 07bb 	LDS  R27,_CurrentWord+1
000668 d0ac      	RCALL _CheckGuess
                 ; 0000 010D 
                 ; 0000 010E     }
                 ; 0000 010F 
                 ; 0000 0110 
                 ; 0000 0111  }
                 _0x4A:
                 ; 0000 0112 
                 ; 0000 0113 
                 ; 0000 0114   KEY_DDR = 0xF0;
                 _0x3E:
                 _0x3D:
000669 efe0      	LDI  R30,LOW(240)
00066a bbe4      	OUT  0x14,R30
                 ; 0000 0115   KEY_PRT = 0x0F;
00066b e0ef      	LDI  R30,LOW(15)
00066c bbe5      	OUT  0x15,R30
                 ; 0000 0116 
                 ; 0000 0117 }
                 _0x8A:
00066d 91e9      	LD   R30,Y+
00066e bfef      	OUT  SREG,R30
00066f 91f9      	LD   R31,Y+
000670 91e9      	LD   R30,Y+
000671 91b9      	LD   R27,Y+
000672 91a9      	LD   R26,Y+
000673 9199      	LD   R25,Y+
000674 9189      	LD   R24,Y+
000675 9179      	LD   R23,Y+
000676 9169      	LD   R22,Y+
000677 90f9      	LD   R15,Y+
000678 9019      	LD   R1,Y+
000679 9009      	LD   R0,Y+
00067a 9518      	RETI
                 ; .FEND
                 ;
                 ;
                 ;  void ShowCategory()
                 ; 0000 011B   {
                 _ShowCategory:
                 ; .FSTART _ShowCategory
                 ; 0000 011C 
                 ; 0000 011D 
                 ; 0000 011E 
                 ; 0000 011F         InitAlphabet();
00067b d118      	RCALL _InitAlphabet
                 ; 0000 0120         InitHealth();
00067c d16f      	RCALL _InitHealth
                 ; 0000 0121         lcd_init();
00067d de21      	RCALL _lcd_init
                 ; 0000 0122         WordIndex = 0;
00067e 24cc      	CLR  R12
00067f 24dd      	CLR  R13
                 ; 0000 0123         point = 0;
000680 e0e0      	LDI  R30,LOW(0)
000681 93e0 07b2 	STS  _point,R30
000683 93e0 07b3 	STS  _point+1,R30
                 ; 0000 0124         WordIndex = 0;
000685 24cc      	CLR  R12
000686 24dd      	CLR  R13
                 ; 0000 0125        lcd_gotoxy(1,1);
000687 e0e1      	LDI  R30,LOW(1)
000688 93ea      	ST   -Y,R30
000689 e0a1      	LDI  R26,LOW(1)
00068a de27      	RCALL _lcd_gotoxy
                 ; 0000 0126 
                 ; 0000 0127        for(i = 0 ; i < CATEGORY_LENGTH ; i++)
00068b 2488      	CLR  R8
00068c 2499      	CLR  R9
                 _0x53:
00068d e0e4      	LDI  R30,LOW(4)
00068e e0f0      	LDI  R31,HIGH(4)
00068f 168e      	CP   R8,R30
000690 069f      	CPC  R9,R31
000691 f4f4      	BRGE _0x54
                 ; 0000 0128        {
                 ; 0000 0129             if(i != 0)
000692 2c08      	MOV  R0,R8
000693 2809      	OR   R0,R9
000694 f029      	BREQ _0x55
                 ; 0000 012A                 sprintf(tmp," %d.",i+1);
000695 940e 0c39 	CALL SUBOPT_0xD
                +
000697 e7e1     +LDI R30 , LOW ( 2 * _0x0 + ( 729 ) )
000698 e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 729 ) )
                 	__POINTW1FN _0x0,729
000699 c004      	RJMP _0x84
                 ; 0000 012B             else
                 _0x55:
                 ; 0000 012C                 sprintf(tmp,"%d.",i+1);
00069a 940e 0c39 	CALL SUBOPT_0xD
                +
00069c e7e2     +LDI R30 , LOW ( 2 * _0x0 + ( 730 ) )
00069d e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 730 ) )
                 	__POINTW1FN _0x0,730
                 _0x84:
00069e 93fa      	ST   -Y,R31
00069f 93ea      	ST   -Y,R30
0006a0 940e 0c3e 	CALL SUBOPT_0xE
                 ; 0000 012D 
                 ; 0000 012E             lcd_print(tmp);
0006a2 efac      	LDI  R26,LOW(_tmp)
0006a3 e0b5      	LDI  R27,HIGH(_tmp)
0006a4 de11      	RCALL _lcd_print
                 ; 0000 012F             lcd_print(Category[i]);
0006a5 01f4      	MOVW R30,R8
0006a6 e6a0      	LDI  R26,LOW(_Category)
0006a7 e0b6      	LDI  R27,HIGH(_Category)
0006a8 940e 0c41 	CALL SUBOPT_0xF
0006aa 01df      	MOVW R26,R30
0006ab de0a      	RCALL _lcd_print
                 ; 0000 0130        }
0006ac 01f4      	MOVW R30,R8
0006ad 9631      	ADIW R30,1
0006ae 014f      	MOVW R8,R30
0006af cfdd      	RJMP _0x53
                 _0x54:
                 ; 0000 0131 
                 ; 0000 0132        bCanSelectCategory = true;
0006b0 e0e1      	LDI  R30,LOW(1)
0006b1 93e0 07bc 	STS  _bCanSelectCategory,R30
                 ; 0000 0133   }
0006b3 9508      	RET
                 ; .FEND
                 ;
                 ;  void SelectAndShowWord(unsigned char in)
                 ; 0000 0136   {
                 _SelectAndShowWord:
                 ; .FSTART _SelectAndShowWord
                 ; 0000 0137       if(WordIndex > MAX_WORD_NUM - 1)
0006b4 93aa      	ST   -Y,R26
                 ;	in -> Y+0
0006b5 e1e3      	LDI  R30,LOW(19)
0006b6 e0f0      	LDI  R31,HIGH(19)
0006b7 15ec      	CP   R30,R12
0006b8 05fd      	CPC  R31,R13
0006b9 f42c      	BRGE _0x57
                 ; 0000 0138       {
                 ; 0000 0139 
                 ; 0000 013A            bWon = true;
0006ba e0e1      	LDI  R30,LOW(1)
0006bb 93e0 07c2 	STS  _bWon,R30
                 ; 0000 013B            EndGame();
0006bd d135      	RCALL _EndGame
                 ; 0000 013C       }
                 ; 0000 013D       else
0006be c031      	RJMP _0x58
                 _0x57:
                 ; 0000 013E       {
                 ; 0000 013F 
                 ; 0000 0140           //Init and seed
                 ; 0000 0141           switch(in)
0006bf 81e8      	LD   R30,Y
0006c0 e0f0      	LDI  R31,0
                 ; 0000 0142           {
                 ; 0000 0143             case '1':
0006c1 33e1      	CPI  R30,LOW(0x31)
0006c2 e0a0      	LDI  R26,HIGH(0x31)
0006c3 07fa      	CPC  R31,R26
0006c4 f421      	BRNE _0x5C
                 ; 0000 0144                     CurrentWord = Sport[WordIndex];
0006c5 01f6      	MOVW R30,R12
0006c6 e6a8      	LDI  R26,LOW(_Sport)
0006c7 e0b6      	LDI  R27,HIGH(_Sport)
0006c8 c017      	RJMP _0x85
                 ; 0000 0145                     ShowRandomWord(CurrentWord);
                 ; 0000 0146                     break;
                 ; 0000 0147             case '2':
                 _0x5C:
0006c9 33e2      	CPI  R30,LOW(0x32)
0006ca e0a0      	LDI  R26,HIGH(0x32)
0006cb 07fa      	CPC  R31,R26
0006cc f421      	BRNE _0x5D
                 ; 0000 0148                     CurrentWord = Movie[WordIndex];
0006cd 01f6      	MOVW R30,R12
0006ce e9a0      	LDI  R26,LOW(_Movie)
0006cf e0b6      	LDI  R27,HIGH(_Movie)
0006d0 c00f      	RJMP _0x85
                 ; 0000 0149                     ShowRandomWord(CurrentWord);
                 ; 0000 014A                     break;
                 ; 0000 014B             case '3':
                 _0x5D:
0006d1 33e3      	CPI  R30,LOW(0x33)
0006d2 e0a0      	LDI  R26,HIGH(0x33)
0006d3 07fa      	CPC  R31,R26
0006d4 f421      	BRNE _0x5E
                 ; 0000 014C                     CurrentWord = Countries[WordIndex];
0006d5 01f6      	MOVW R30,R12
0006d6 eba8      	LDI  R26,LOW(_Countries)
0006d7 e0b6      	LDI  R27,HIGH(_Countries)
0006d8 c007      	RJMP _0x85
                 ; 0000 014D                     ShowRandomWord(CurrentWord);
                 ; 0000 014E                     break;
                 ; 0000 014F             case '4':
                 _0x5E:
0006d9 33e4      	CPI  R30,LOW(0x34)
0006da e0a0      	LDI  R26,HIGH(0x34)
0006db 07fa      	CPC  R31,R26
0006dc f481      	BRNE _0x5B
                 ; 0000 0150 
                 ; 0000 0151                 CurrentWord = ComputerScience[WordIndex];
0006dd 01f6      	MOVW R30,R12
0006de eea0      	LDI  R26,LOW(_ComputerScience)
0006df e0b6      	LDI  R27,HIGH(_ComputerScience)
                 _0x85:
0006e0 0fee      	LSL  R30
0006e1 1fff      	ROL  R31
0006e2 940e 0c34 	CALL SUBOPT_0xC
0006e4 93e0 07ba 	STS  _CurrentWord,R30
0006e6 93f0 07bb 	STS  _CurrentWord+1,R31
                 ; 0000 0152                 ShowRandomWord(CurrentWord);
0006e8 91a0 07ba 	LDS  R26,_CurrentWord
0006ea 91b0 07bb 	LDS  R27,_CurrentWord+1
0006ec d005      	RCALL _ShowRandomWord
                 ; 0000 0153                 break;
                 ; 0000 0154           }
                 _0x5B:
                 ; 0000 0155 
                 ; 0000 0156                 WordIndex = (WordIndex+ 1) ;
0006ed 01f6      	MOVW R30,R12
0006ee 9631      	ADIW R30,1
0006ef 016f      	MOVW R12,R30
                 ; 0000 0157       }
                 _0x58:
                 ; 0000 0158 
                 ; 0000 0159   }
                 _0x20A0007:
0006f0 9621      	ADIW R28,1
0006f1 9508      	RET
                 ; .FEND
                 ;
                 ;  void ShowRandomWord(char* InputStr)
                 ; 0000 015C   {
                 _ShowRandomWord:
                 ; .FSTART _ShowRandomWord
                 ; 0000 015D 
                 ; 0000 015E      lcd_init();
0006f2 940e 0c44 	CALL SUBOPT_0x10
                 ;	*InputStr -> Y+0
                 ; 0000 015F      lcdCommand(0x0c);
                 ; 0000 0160      WordLen = strlen(InputStr);
0006f4 81a8      	LD   R26,Y
0006f5 81b9      	LDD  R27,Y+1
0006f6 940e 0b8c 	CALL _strlen
0006f8 93e0 05fa 	STS  _WordLen,R30
0006fa 93f0 05fb 	STS  _WordLen+1,R31
                 ; 0000 0161      InitAlphabet();
0006fc d097      	RCALL _InitAlphabet
                 ; 0000 0162 
                 ; 0000 0163 
                 ; 0000 0164 
                 ; 0000 0165      for(  i = 0 ; i < WordLen ; i++)
0006fd 2488      	CLR  R8
0006fe 2499      	CLR  R9
                 _0x61:
0006ff 940e 0c4b 	CALL SUBOPT_0x11
000701 f47c      	BRGE _0x62
                 ; 0000 0166      {
                 ; 0000 0167        alphabet[InputStr[i] - 'a'] = 1;
000702 940e 0c52 	CALL SUBOPT_0x12
000704 940e 0c59 	CALL SUBOPT_0x13
000706 e0e1      	LDI  R30,LOW(1)
000707 e0f0      	LDI  R31,HIGH(1)
000708 93ed      	ST   X+,R30
000709 93fc      	ST   X,R31
                 ; 0000 0168 
                 ; 0000 0169 
                 ; 0000 016A          lcd_print("_ ");
                +
00070a e9ad     +LDI R26 , LOW ( _0x63 + ( 0 ) )
00070b e0b5     +LDI R27 , HIGH ( _0x63 + ( 0 ) )
                 	__POINTW2MN _0x63,0
00070c dda9      	RCALL _lcd_print
                 ; 0000 016B 
                 ; 0000 016C      }
00070d 01f4      	MOVW R30,R8
00070e 9631      	ADIW R30,1
00070f 014f      	MOVW R8,R30
000710 cfee      	RJMP _0x61
                 _0x62:
                 ; 0000 016D       bCanGuess = true;
000711 e0e1      	LDI  R30,LOW(1)
000712 93e0 07bd 	STS  _bCanGuess,R30
                 ; 0000 016E   }
000714 c0d5      	RJMP _0x20A0006
                 ; .FEND
                 
                 	.DSEG
                 _0x63:
00059d           	.BYTE 0x3
                 ;
                 ;
                 ;  void CheckGuess( char* in,char* CurrWord)
                 ; 0000 0172   {
                 
                 	.CSEG
                 _CheckGuess:
                 ; .FSTART _CheckGuess
                 ; 0000 0173 
                 ; 0000 0174 
                 ; 0000 0175 
                 ; 0000 0176 
                 ; 0000 0177       lcd_init();
000715 940e 0c44 	CALL SUBOPT_0x10
                 ;	*in -> Y+2
                 ;	*CurrWord -> Y+0
                 ; 0000 0178 
                 ; 0000 0179      lcdCommand(0x0c);
                 ; 0000 017A      bWrongGuess = true;
000717 e0e1      	LDI  R30,LOW(1)
000718 93e0 07c0 	STS  _bWrongGuess,R30
                 ; 0000 017B 
                 ; 0000 017C      for(  i = 0 ; i < WordLen ; i++)
00071a 2488      	CLR  R8
00071b 2499      	CLR  R9
                 _0x65:
00071c 940e 0c4b 	CALL SUBOPT_0x11
00071e f4bc      	BRGE _0x66
                 ; 0000 017D      {
                 ; 0000 017E 
                 ; 0000 017F          if( in[0] == CurrWord[i] )
00071f 81aa      	LDD  R26,Y+2
000720 81bb      	LDD  R27,Y+2+1
000721 900c      	LD   R0,X
000722 940e 0c52 	CALL SUBOPT_0x12
000724 15e0      	CP   R30,R0
000725 f461      	BRNE _0x67
                 ; 0000 0180          {
                 ; 0000 0181             alphabet[in[0] - 'a'] = 2;
000726 81aa      	LDD  R26,Y+2
000727 81bb      	LDD  R27,Y+2+1
000728 91ec      	LD   R30,X
000729 940e 0c59 	CALL SUBOPT_0x13
00072b e0e2      	LDI  R30,LOW(2)
00072c e0f0      	LDI  R31,HIGH(2)
00072d 93ed      	ST   X+,R30
00072e 93fc      	ST   X,R31
                 ; 0000 0182             bWrongGuess = false;
00072f e0e0      	LDI  R30,LOW(0)
000730 93e0 07c0 	STS  _bWrongGuess,R30
                 ; 0000 0183          }
                 ; 0000 0184 
                 ; 0000 0185      }
                 _0x67:
000732 01f4      	MOVW R30,R8
000733 9631      	ADIW R30,1
000734 014f      	MOVW R8,R30
000735 cfe6      	RJMP _0x65
                 _0x66:
                 ; 0000 0186 
                 ; 0000 0187 
                 ; 0000 0188 
                 ; 0000 0189      bFoundCorrectGuess = true;
000736 e0e1      	LDI  R30,LOW(1)
000737 93e0 07c1 	STS  _bFoundCorrectGuess,R30
                 ; 0000 018A      for(  i = 0 ; i < WordLen ; i++)
000739 2488      	CLR  R8
00073a 2499      	CLR  R9
                 _0x69:
00073b 940e 0c4b 	CALL SUBOPT_0x11
00073d f544      	BRGE _0x6A
                 ; 0000 018B      {
                 ; 0000 018C 
                 ; 0000 018D          if( alphabet[CurrWord[i] - 'a'] == 2 )
00073e 940e 0c52 	CALL SUBOPT_0x12
000740 940e 0c63 	CALL SUBOPT_0x14
000742 30e2      	CPI  R30,LOW(0x2)
000743 e0a0      	LDI  R26,HIGH(0x2)
000744 07fa      	CPC  R31,R26
000745 f471      	BRNE _0x6B
                 ; 0000 018E          {
                 ; 0000 018F 
                 ; 0000 0190             lcd_print(Words[CurrWord[i] - 'a'] );
000746 940e 0c52 	CALL SUBOPT_0x12
000748 e0f0      	LDI  R31,0
000749 56e1      	SUBI R30,LOW(97)
00074a 40f0      	SBCI R31,HIGH(97)
00074b e4aa      	LDI  R26,LOW(_Words)
00074c e0b7      	LDI  R27,HIGH(_Words)
00074d 940e 0c41 	CALL SUBOPT_0xF
00074f 01df      	MOVW R26,R30
000750 dd65      	RCALL _lcd_print
                 ; 0000 0191 
                 ; 0000 0192             lcd_print(" ");
                +
000751 eaa0     +LDI R26 , LOW ( _0x6C + ( 0 ) )
000752 e0b5     +LDI R27 , HIGH ( _0x6C + ( 0 ) )
                 	__POINTW2MN _0x6C,0
000753 c00d      	RJMP _0x86
                 ; 0000 0193          }
                 ; 0000 0194          else if( alphabet[CurrWord[i] - 'a'] == 1 )
                 _0x6B:
000754 940e 0c52 	CALL SUBOPT_0x12
000756 940e 0c63 	CALL SUBOPT_0x14
000758 30e1      	CPI  R30,LOW(0x1)
000759 e0a0      	LDI  R26,HIGH(0x1)
00075a 07fa      	CPC  R31,R26
00075b f431      	BRNE _0x6E
                 ; 0000 0195          {
                 ; 0000 0196               bFoundCorrectGuess = false;
00075c e0e0      	LDI  R30,LOW(0)
00075d 93e0 07c1 	STS  _bFoundCorrectGuess,R30
                 ; 0000 0197               lcd_print("_ ");
                +
00075f eaa2     +LDI R26 , LOW ( _0x6C + ( 2 ) )
000760 e0b5     +LDI R27 , HIGH ( _0x6C + ( 2 ) )
                 	__POINTW2MN _0x6C,2
                 _0x86:
000761 dd54      	RCALL _lcd_print
                 ; 0000 0198          }
                 ; 0000 0199 
                 ; 0000 019A 
                 ; 0000 019B      }
                 _0x6E:
000762 01f4      	MOVW R30,R8
000763 9631      	ADIW R30,1
000764 014f      	MOVW R8,R30
000765 cfd5      	RJMP _0x69
                 _0x6A:
                 ; 0000 019C 
                 ; 0000 019D           if(bWrongGuess)
000766 91e0 07c0 	LDS  R30,_bWrongGuess
000768 30e0      	CPI  R30,0
000769 f0a1      	BREQ _0x6F
                 ; 0000 019E      {
                 ; 0000 019F          health -= 1;
00076a 91e0 07c3 	LDS  R30,_health
00076c 91f0 07c4 	LDS  R31,_health+1
00076e 9731      	SBIW R30,1
00076f 93e0 07c3 	STS  _health,R30
000771 93f0 07c4 	STS  _health+1,R31
                 ; 0000 01A0             if( health <= 0)
000773 91a0 07c3 	LDS  R26,_health
000775 91b0 07c4 	LDS  R27,_health+1
000777 940e 0d0c 	CALL __CPW02
000779 f024      	BRLT _0x70
                 ; 0000 01A1             {
                 ; 0000 01A2                 bWon = false;
00077a e0e0      	LDI  R30,LOW(0)
00077b 93e0 07c2 	STS  _bWon,R30
                 ; 0000 01A3                 EndGame();
00077d d075      	RCALL _EndGame
                 ; 0000 01A4             }
                 ; 0000 01A5      }
                 _0x70:
                 ; 0000 01A6 
                 ; 0000 01A7      if(bFoundCorrectGuess)
                 _0x6F:
00077e 91e0 07c1 	LDS  R30,_bFoundCorrectGuess
000780 30e0      	CPI  R30,0
000781 f081      	BREQ _0x71
                 ; 0000 01A8      {
                 ; 0000 01A9 
                 ; 0000 01AA          CalculatePoint();
000782 d085      	RCALL _CalculatePoint
                 ; 0000 01AB          delay_ms(100);
000783 e6a4      	LDI  R26,LOW(100)
000784 e0b0      	LDI  R27,0
000785 940e 0ccd 	CALL _delay_ms
                 ; 0000 01AC          lcd_init();
000787 dd17      	RCALL _lcd_init
                 ; 0000 01AD          lcd_print("Correct!");
                +
000788 eaa5     +LDI R26 , LOW ( _0x6C + ( 5 ) )
000789 e0b5     +LDI R27 , HIGH ( _0x6C + ( 5 ) )
                 	__POINTW2MN _0x6C,5
00078a dd2b      	RCALL _lcd_print
                 ; 0000 01AE          delay_ms(100);
00078b e6a4      	LDI  R26,LOW(100)
00078c e0b0      	LDI  R27,0
00078d 940e 0ccd 	CALL _delay_ms
                 ; 0000 01AF          InitHealth();
00078f d05c      	RCALL _InitHealth
                 ; 0000 01B0          SelectAndShowWord(SelectedCategory);
000790 2da6      	MOV  R26,R6
000791 df22      	RCALL _SelectAndShowWord
                 ; 0000 01B1      }
                 ; 0000 01B2 
                 ; 0000 01B3 
                 ; 0000 01B4 
                 ; 0000 01B5 
                 ; 0000 01B6 
                 ; 0000 01B7       //bIsFirstTime = true;
                 ; 0000 01B8   }
                 _0x71:
000792 9624      	ADIW R28,4
000793 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _0x6C:
0005a0           	.BYTE 0xE
                 ;
                 ;
                 ;  void InitAlphabet()
                 ; 0000 01BC   {
                 
                 	.CSEG
                 _InitAlphabet:
                 ; .FSTART _InitAlphabet
                 ; 0000 01BD     for( i = 0 ; i < 25 ; i++)
000794 2488      	CLR  R8
000795 2499      	CLR  R9
                 _0x73:
000796 e1e9      	LDI  R30,LOW(25)
000797 e0f0      	LDI  R31,HIGH(25)
000798 168e      	CP   R8,R30
000799 069f      	CPC  R9,R31
00079a f47c      	BRGE _0x74
                 ; 0000 01BE         alphabet[i] = 0;
00079b 01f4      	MOVW R30,R8
00079c e7ae      	LDI  R26,LOW(_alphabet)
00079d e0b7      	LDI  R27,HIGH(_alphabet)
00079e 0fee      	LSL  R30
00079f 1fff      	ROL  R31
0007a0 0fae      	ADD  R26,R30
0007a1 1fbf      	ADC  R27,R31
0007a2 e0e0      	LDI  R30,LOW(0)
0007a3 e0f0      	LDI  R31,HIGH(0)
0007a4 93ed      	ST   X+,R30
0007a5 93fc      	ST   X,R31
0007a6 01f4      	MOVW R30,R8
0007a7 9631      	ADIW R30,1
0007a8 014f      	MOVW R8,R30
0007a9 cfec      	RJMP _0x73
                 _0x74:
                 ; 0000 01C0 }
0007aa 9508      	RET
                 ; .FEND
                 ;
                 ;  void Print6( char* in[6])
                 ; 0000 01C3   {
                 _Print6:
                 ; .FSTART _Print6
                 ; 0000 01C4 
                 ; 0000 01C5 
                 ; 0000 01C6     lcd_init2();
0007ab 940e 0c69 	CALL SUBOPT_0x15
                 ;	in -> Y+0
                 ; 0000 01C7     lcdCommand2(0x0c);
                 ; 0000 01C8 
                 ; 0000 01C9     for(i = 0 ; i < 6 ; i++)
                 _0x76:
0007ad e0e6      	LDI  R30,LOW(6)
0007ae e0f0      	LDI  R31,HIGH(6)
0007af 168e      	CP   R8,R30
0007b0 069f      	CPC  R9,R31
0007b1 f4c4      	BRGE _0x77
                 ; 0000 01CA     {
                 ; 0000 01CB          if(i != 0)
0007b2 2c08      	MOV  R0,R8
0007b3 2809      	OR   R0,R9
0007b4 f029      	BREQ _0x78
                 ; 0000 01CC                 sprintf(tmp," %d.",i+1);
0007b5 940e 0c39 	CALL SUBOPT_0xD
                +
0007b7 e7e1     +LDI R30 , LOW ( 2 * _0x0 + ( 729 ) )
0007b8 e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 729 ) )
                 	__POINTW1FN _0x0,729
0007b9 c004      	RJMP _0x87
                 ; 0000 01CD             else
                 _0x78:
                 ; 0000 01CE                 sprintf(tmp,"%d.",i+1);
0007ba 940e 0c39 	CALL SUBOPT_0xD
                +
0007bc e7e2     +LDI R30 , LOW ( 2 * _0x0 + ( 730 ) )
0007bd e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 730 ) )
                 	__POINTW1FN _0x0,730
                 _0x87:
0007be 93fa      	ST   -Y,R31
0007bf 93ea      	ST   -Y,R30
0007c0 940e 0c3e 	CALL SUBOPT_0xE
                 ; 0000 01CF 
                 ; 0000 01D0 
                 ; 0000 01D1             lcd_print2(tmp);
0007c2 940e 0c73 	CALL SUBOPT_0x16
                 ; 0000 01D2             lcd_print2(in[i]);
0007c4 01df      	MOVW R26,R30
0007c5 dd67      	RCALL _lcd_print2
                 ; 0000 01D3     }
0007c6 01f4      	MOVW R30,R8
0007c7 9631      	ADIW R30,1
0007c8 014f      	MOVW R8,R30
0007c9 cfe3      	RJMP _0x76
                 _0x77:
                 ; 0000 01D4   }
0007ca c01f      	RJMP _0x20A0006
                 ; .FEND
                 ;
                 ;    void Print7(char*  in[7])
                 ; 0000 01D7   {
                 _Print7:
                 ; .FSTART _Print7
                 ; 0000 01D8 
                 ; 0000 01D9 
                 ; 0000 01DA 
                 ; 0000 01DB     lcd_init2();
0007cb 940e 0c69 	CALL SUBOPT_0x15
                 ;	in -> Y+0
                 ; 0000 01DC     lcdCommand2(0x0c);
                 ; 0000 01DD 
                 ; 0000 01DE     for(i = 0 ; i < 7 ; i++)
                 _0x7B:
0007cd e0e7      	LDI  R30,LOW(7)
0007ce e0f0      	LDI  R31,HIGH(7)
0007cf 168e      	CP   R8,R30
0007d0 069f      	CPC  R9,R31
0007d1 f4c4      	BRGE _0x7C
                 ; 0000 01DF     {
                 ; 0000 01E0          if(i != 0)
0007d2 2c08      	MOV  R0,R8
0007d3 2809      	OR   R0,R9
0007d4 f029      	BREQ _0x7D
                 ; 0000 01E1                 sprintf(tmp," %d.",i+1);
0007d5 940e 0c39 	CALL SUBOPT_0xD
                +
0007d7 e7e1     +LDI R30 , LOW ( 2 * _0x0 + ( 729 ) )
0007d8 e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 729 ) )
                 	__POINTW1FN _0x0,729
0007d9 c004      	RJMP _0x88
                 ; 0000 01E2             else
                 _0x7D:
                 ; 0000 01E3                 sprintf(tmp,"%d.",i+1);
0007da 940e 0c39 	CALL SUBOPT_0xD
                +
0007dc e7e2     +LDI R30 , LOW ( 2 * _0x0 + ( 730 ) )
0007dd e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 730 ) )
                 	__POINTW1FN _0x0,730
                 _0x88:
0007de 93fa      	ST   -Y,R31
0007df 93ea      	ST   -Y,R30
0007e0 940e 0c3e 	CALL SUBOPT_0xE
                 ; 0000 01E4 
                 ; 0000 01E5 
                 ; 0000 01E6             lcd_print2(tmp);
0007e2 940e 0c73 	CALL SUBOPT_0x16
                 ; 0000 01E7             lcd_print2(in[i]);
0007e4 01df      	MOVW R26,R30
0007e5 dd47      	RCALL _lcd_print2
                 ; 0000 01E8     }
0007e6 01f4      	MOVW R30,R8
0007e7 9631      	ADIW R30,1
0007e8 014f      	MOVW R8,R30
0007e9 cfe3      	RJMP _0x7B
                 _0x7C:
                 ; 0000 01E9   }
                 _0x20A0006:
0007ea 9622      	ADIW R28,2
0007eb 9508      	RET
                 ; .FEND
                 ;
                 ;  void InitHealth()
                 ; 0000 01EC   {
                 _InitHealth:
                 ; .FSTART _InitHealth
                 ; 0000 01ED     health = MAX_HEALTH;
0007ec e0e3      	LDI  R30,LOW(3)
0007ed e0f0      	LDI  R31,HIGH(3)
0007ee 93e0 07c3 	STS  _health,R30
0007f0 93f0 07c4 	STS  _health+1,R31
                 ; 0000 01EE 
                 ; 0000 01EF   }
0007f2 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;
                 ;  void EndGame()
                 ; 0000 01F4   {
                 _EndGame:
                 ; .FSTART _EndGame
                 ; 0000 01F5 
                 ; 0000 01F6       bCanGuess = false;
0007f3 e0e0      	LDI  R30,LOW(0)
0007f4 93e0 07bd 	STS  _bCanGuess,R30
                 ; 0000 01F7       //todo lcd print
                 ; 0000 01F8       lcd_init();
0007f6 dca8      	RCALL _lcd_init
                 ; 0000 01F9       if(bWon)
0007f7 91e0 07c2 	LDS  R30,_bWon
0007f9 30e0      	CPI  R30,0
0007fa f019      	BREQ _0x7F
                 ; 0000 01FA       {
                 ; 0000 01FB            lcd_print("You Won, hooray :) ");
                +
0007fb eaae     +LDI R26 , LOW ( _0x80 + ( 0 ) )
0007fc e0b5     +LDI R27 , HIGH ( _0x80 + ( 0 ) )
                 	__POINTW2MN _0x80,0
0007fd c002      	RJMP _0x89
                 ; 0000 01FC       }
                 ; 0000 01FD       else
                 _0x7F:
                 ; 0000 01FE       {
                 ; 0000 01FF            lcd_print("GAME OVER!!                   try again");
                +
0007fe eca2     +LDI R26 , LOW ( _0x80 + ( 20 ) )
0007ff e0b5     +LDI R27 , HIGH ( _0x80 + ( 20 ) )
                 	__POINTW2MN _0x80,20
                 _0x89:
000800 dcb5      	RCALL _lcd_print
                 ; 0000 0200       }
                 ; 0000 0201 
                 ; 0000 0202       delay_ms(200);
000801 eca8      	LDI  R26,LOW(200)
000802 e0b0      	LDI  R27,0
000803 940e 0ccd 	CALL _delay_ms
                 ; 0000 0203       InitHealth();
000805 dfe6      	RCALL _InitHealth
                 ; 0000 0204       ShowCategory();
000806 de74      	RCALL _ShowCategory
                 ; 0000 0205 
                 ; 0000 0206   }
000807 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _0x80:
0005ae           	.BYTE 0x3C
                 ;
                 ;  void CalculatePoint()
                 ; 0000 0209   {
                 
                 	.CSEG
                 _CalculatePoint:
                 ; .FSTART _CalculatePoint
                 ; 0000 020A 
                 ; 0000 020B      point += ( WordLen * 10 + WordIndex);
000808 91e0 05fa 	LDS  R30,_WordLen
00080a 91f0 05fb 	LDS  R31,_WordLen+1
00080c e0aa      	LDI  R26,LOW(10)
00080d e0b0      	LDI  R27,HIGH(10)
00080e 940e 0cec 	CALL __MULW12
000810 0dec      	ADD  R30,R12
000811 1dfd      	ADC  R31,R13
000812 91a0 07b2 	LDS  R26,_point
000814 91b0 07b3 	LDS  R27,_point+1
000816 0fea      	ADD  R30,R26
000817 1ffb      	ADC  R31,R27
000818 93e0 07b2 	STS  _point,R30
00081a 93f0 07b3 	STS  _point+1,R31
                 ; 0000 020C 
                 ; 0000 020D   }
00081c 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
                 ; .FSTART _put_buff_G100
00081d 93ba      	ST   -Y,R27
00081e 93aa      	ST   -Y,R26
00081f 931a      	ST   -Y,R17
000820 930a      	ST   -Y,R16
000821 81aa      	LDD  R26,Y+2
000822 81bb      	LDD  R27,Y+2+1
000823 9612      	ADIW R26,2
000824 940e 0cff 	CALL __GETW1P
000826 9730      	SBIW R30,0
000827 f129      	BREQ _0x2000010
000828 81aa      	LDD  R26,Y+2
000829 81bb      	LDD  R27,Y+2+1
00082a 9614      	ADIW R26,4
00082b 940e 0cff 	CALL __GETW1P
00082d 018f      	MOVW R16,R30
00082e 9730      	SBIW R30,0
00082f f061      	BREQ _0x2000012
                +
000830 3002     +CPI R16 , LOW ( 2 )
000831 e0e0     +LDI R30 , HIGH ( 2 )
000832 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000833 f080      	BRLO _0x2000013
000834 01f8      	MOVW R30,R16
000835 9731      	SBIW R30,1
000836 018f      	MOVW R16,R30
                +
000837 81aa     +LDD R26 , Y + 2
000838 81bb     +LDD R27 , Y + 2 + 1
000839 9614     +ADIW R26 , 4
00083a 93ed     +ST X + , R30
00083b 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
00083c 81aa      	LDD  R26,Y+2
00083d 81bb      	LDD  R27,Y+2+1
00083e 9612      	ADIW R26,2
00083f 940e 0c7b 	CALL SUBOPT_0x17
000841 9731      	SBIW R30,1
000842 81ac      	LDD  R26,Y+4
000843 83a0      	STD  Z+0,R26
                 _0x2000013:
000844 81aa      	LDD  R26,Y+2
000845 81bb      	LDD  R27,Y+2+1
000846 940e 0cff 	CALL __GETW1P
000848 23ff      	TST  R31
000849 f012      	BRMI _0x2000014
00084a 940e 0c7b 	CALL SUBOPT_0x17
                 _0x2000014:
00084c c006      	RJMP _0x2000015
                 _0x2000010:
00084d 81aa      	LDD  R26,Y+2
00084e 81bb      	LDD  R27,Y+2+1
00084f efef      	LDI  R30,LOW(65535)
000850 efff      	LDI  R31,HIGH(65535)
000851 93ed      	ST   X+,R30
000852 93fc      	ST   X,R31
                 _0x2000015:
000853 8119      	LDD  R17,Y+1
000854 8108      	LDD  R16,Y+0
000855 c18e      	RJMP _0x20A0004
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
000856 93ba      	ST   -Y,R27
000857 93aa      	ST   -Y,R26
000858 9726      	SBIW R28,6
000859 940e 0d10 	CALL __SAVELOCR6
00085b e010      	LDI  R17,0
00085c 85ac      	LDD  R26,Y+12
00085d 85bd      	LDD  R27,Y+12+1
00085e e0e0      	LDI  R30,LOW(0)
00085f e0f0      	LDI  R31,HIGH(0)
000860 93ed      	ST   X+,R30
000861 93fc      	ST   X,R31
                 _0x2000016:
000862 89ea      	LDD  R30,Y+18
000863 89fb      	LDD  R31,Y+18+1
000864 9631      	ADIW R30,1
000865 8bea      	STD  Y+18,R30
000866 8bfb      	STD  Y+18+1,R31
000867 9731      	SBIW R30,1
000868 91e4      	LPM  R30,Z
000869 2f2e      	MOV  R18,R30
00086a 30e0      	CPI  R30,0
00086b f409      	BRNE PC+2
00086c c115      	RJMP _0x2000018
00086d 2fe1      	MOV  R30,R17
00086e 30e0      	CPI  R30,0
00086f f439      	BRNE _0x200001C
000870 3225      	CPI  R18,37
000871 f411      	BRNE _0x200001D
000872 e011      	LDI  R17,LOW(1)
000873 c002      	RJMP _0x200001E
                 _0x200001D:
000874 940e 0c81 	CALL SUBOPT_0x18
                 _0x200001E:
000876 c10a      	RJMP _0x200001B
                 _0x200001C:
000877 30e1      	CPI  R30,LOW(0x1)
000878 f4a9      	BRNE _0x200001F
000879 3225      	CPI  R18,37
00087a f419      	BRNE _0x2000020
00087b 940e 0c81 	CALL SUBOPT_0x18
00087d c102      	RJMP _0x20000CC
                 _0x2000020:
00087e e012      	LDI  R17,LOW(2)
00087f e040      	LDI  R20,LOW(0)
000880 e000      	LDI  R16,LOW(0)
000881 322d      	CPI  R18,45
000882 f411      	BRNE _0x2000021
000883 e001      	LDI  R16,LOW(1)
000884 c0fc      	RJMP _0x200001B
                 _0x2000021:
000885 322b      	CPI  R18,43
000886 f411      	BRNE _0x2000022
000887 e24b      	LDI  R20,LOW(43)
000888 c0f8      	RJMP _0x200001B
                 _0x2000022:
000889 3220      	CPI  R18,32
00088a f411      	BRNE _0x2000023
00088b e240      	LDI  R20,LOW(32)
00088c c0f4      	RJMP _0x200001B
                 _0x2000023:
00088d c002      	RJMP _0x2000024
                 _0x200001F:
00088e 30e2      	CPI  R30,LOW(0x2)
00088f f439      	BRNE _0x2000025
                 _0x2000024:
000890 e050      	LDI  R21,LOW(0)
000891 e013      	LDI  R17,LOW(3)
000892 3320      	CPI  R18,48
000893 f411      	BRNE _0x2000026
000894 6800      	ORI  R16,LOW(128)
000895 c0eb      	RJMP _0x200001B
                 _0x2000026:
000896 c003      	RJMP _0x2000027
                 _0x2000025:
000897 30e3      	CPI  R30,LOW(0x3)
000898 f009      	BREQ PC+2
000899 c0e7      	RJMP _0x200001B
                 _0x2000027:
00089a 3320      	CPI  R18,48
00089b f010      	BRLO _0x200002A
00089c 332a      	CPI  R18,58
00089d f008      	BRLO _0x200002B
                 _0x200002A:
00089e c007      	RJMP _0x2000029
                 _0x200002B:
00089f e0aa      	LDI  R26,LOW(10)
0008a0 9f5a      	MUL  R21,R26
0008a1 2d50      	MOV  R21,R0
0008a2 2fe2      	MOV  R30,R18
0008a3 53e0      	SUBI R30,LOW(48)
0008a4 0f5e      	ADD  R21,R30
0008a5 c0db      	RJMP _0x200001B
                 _0x2000029:
0008a6 2fe2      	MOV  R30,R18
0008a7 36e3      	CPI  R30,LOW(0x63)
0008a8 f449      	BRNE _0x200002F
0008a9 940e 0c88 	CALL SUBOPT_0x19
0008ab 89e8      	LDD  R30,Y+16
0008ac 89f9      	LDD  R31,Y+16+1
0008ad 81a4      	LDD  R26,Z+4
0008ae 93aa      	ST   -Y,R26
0008af 940e 0c8e 	CALL SUBOPT_0x1A
0008b1 c0ce      	RJMP _0x2000030
                 _0x200002F:
0008b2 37e3      	CPI  R30,LOW(0x73)
0008b3 f441      	BRNE _0x2000032
0008b4 940e 0c88 	CALL SUBOPT_0x19
0008b6 940e 0c94 	CALL SUBOPT_0x1B
0008b8 940e 0b8c 	CALL _strlen
0008ba 2f1e      	MOV  R17,R30
0008bb c00a      	RJMP _0x2000033
                 _0x2000032:
0008bc 37e0      	CPI  R30,LOW(0x70)
0008bd f461      	BRNE _0x2000035
0008be 940e 0c88 	CALL SUBOPT_0x19
0008c0 940e 0c94 	CALL SUBOPT_0x1B
0008c2 940e 0b98 	CALL _strlenf
0008c4 2f1e      	MOV  R17,R30
0008c5 6008      	ORI  R16,LOW(8)
                 _0x2000033:
0008c6 6002      	ORI  R16,LOW(2)
0008c7 770f      	ANDI R16,LOW(127)
0008c8 e030      	LDI  R19,LOW(0)
0008c9 c034      	RJMP _0x2000036
                 _0x2000035:
0008ca 36e4      	CPI  R30,LOW(0x64)
0008cb f011      	BREQ _0x2000039
0008cc 36e9      	CPI  R30,LOW(0x69)
0008cd f411      	BRNE _0x200003A
                 _0x2000039:
0008ce 6004      	ORI  R16,LOW(4)
0008cf c002      	RJMP _0x200003B
                 _0x200003A:
0008d0 37e5      	CPI  R30,LOW(0x75)
0008d1 f431      	BRNE _0x200003C
                 _0x200003B:
0008d2 e5e4      	LDI  R30,LOW(_tbl10_G100*2)
0008d3 e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
0008d4 83ee      	STD  Y+6,R30
0008d5 83ff      	STD  Y+6+1,R31
0008d6 e015      	LDI  R17,LOW(5)
0008d7 c00c      	RJMP _0x200003D
                 _0x200003C:
0008d8 35e8      	CPI  R30,LOW(0x58)
0008d9 f411      	BRNE _0x200003F
0008da 6008      	ORI  R16,LOW(8)
0008db c003      	RJMP _0x2000040
                 _0x200003F:
0008dc 37e8      	CPI  R30,LOW(0x78)
0008dd f009      	BREQ PC+2
0008de c0a1      	RJMP _0x2000071
                 _0x2000040:
0008df e5ee      	LDI  R30,LOW(_tbl16_G100*2)
0008e0 e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
0008e1 83ee      	STD  Y+6,R30
0008e2 83ff      	STD  Y+6+1,R31
0008e3 e014      	LDI  R17,LOW(4)
                 _0x200003D:
0008e4 ff02      	SBRS R16,2
0008e5 c014      	RJMP _0x2000042
0008e6 940e 0c88 	CALL SUBOPT_0x19
0008e8 940e 0c9e 	CALL SUBOPT_0x1C
0008ea 85ab      	LDD  R26,Y+11
0008eb 23aa      	TST  R26
0008ec f43a      	BRPL _0x2000043
0008ed 85ea      	LDD  R30,Y+10
0008ee 85fb      	LDD  R31,Y+10+1
0008ef 940e 0cdb 	CALL __ANEGW1
0008f1 87ea      	STD  Y+10,R30
0008f2 87fb      	STD  Y+10+1,R31
0008f3 e24d      	LDI  R20,LOW(45)
                 _0x2000043:
0008f4 3040      	CPI  R20,0
0008f5 f011      	BREQ _0x2000044
0008f6 5f1f      	SUBI R17,-LOW(1)
0008f7 c001      	RJMP _0x2000045
                 _0x2000044:
0008f8 7f0b      	ANDI R16,LOW(251)
                 _0x2000045:
0008f9 c004      	RJMP _0x2000046
                 _0x2000042:
0008fa 940e 0c88 	CALL SUBOPT_0x19
0008fc 940e 0c9e 	CALL SUBOPT_0x1C
                 _0x2000046:
                 _0x2000036:
0008fe fd00      	SBRC R16,0
0008ff c011      	RJMP _0x2000047
                 _0x2000048:
000900 1715      	CP   R17,R21
000901 f478      	BRSH _0x200004A
000902 ff07      	SBRS R16,7
000903 c008      	RJMP _0x200004B
000904 ff02      	SBRS R16,2
000905 c004      	RJMP _0x200004C
000906 7f0b      	ANDI R16,LOW(251)
000907 2f24      	MOV  R18,R20
000908 5011      	SUBI R17,LOW(1)
000909 c001      	RJMP _0x200004D
                 _0x200004C:
00090a e320      	LDI  R18,LOW(48)
                 _0x200004D:
00090b c001      	RJMP _0x200004E
                 _0x200004B:
00090c e220      	LDI  R18,LOW(32)
                 _0x200004E:
00090d 940e 0c81 	CALL SUBOPT_0x18
00090f 5051      	SUBI R21,LOW(1)
000910 cfef      	RJMP _0x2000048
                 _0x200004A:
                 _0x2000047:
000911 2f31      	MOV  R19,R17
000912 ff01      	SBRS R16,1
000913 c017      	RJMP _0x200004F
                 _0x2000050:
000914 3030      	CPI  R19,0
000915 f0a1      	BREQ _0x2000052
000916 ff03      	SBRS R16,3
000917 c006      	RJMP _0x2000053
000918 81ee      	LDD  R30,Y+6
000919 81ff      	LDD  R31,Y+6+1
00091a 9125      	LPM  R18,Z+
00091b 83ee      	STD  Y+6,R30
00091c 83ff      	STD  Y+6+1,R31
00091d c005      	RJMP _0x2000054
                 _0x2000053:
00091e 81ae      	LDD  R26,Y+6
00091f 81bf      	LDD  R27,Y+6+1
000920 912d      	LD   R18,X+
000921 83ae      	STD  Y+6,R26
000922 83bf      	STD  Y+6+1,R27
                 _0x2000054:
000923 940e 0c81 	CALL SUBOPT_0x18
000925 3050      	CPI  R21,0
000926 f009      	BREQ _0x2000055
000927 5051      	SUBI R21,LOW(1)
                 _0x2000055:
000928 5031      	SUBI R19,LOW(1)
000929 cfea      	RJMP _0x2000050
                 _0x2000052:
00092a c04b      	RJMP _0x2000056
                 _0x200004F:
                 _0x2000058:
00092b e320      	LDI  R18,LOW(48)
00092c 81ee      	LDD  R30,Y+6
00092d 81ff      	LDD  R31,Y+6+1
00092e 940e 0d03 	CALL __GETW1PF
000930 87e8      	STD  Y+8,R30
000931 87f9      	STD  Y+8+1,R31
000932 81ee      	LDD  R30,Y+6
000933 81ff      	LDD  R31,Y+6+1
000934 9632      	ADIW R30,2
000935 83ee      	STD  Y+6,R30
000936 83ff      	STD  Y+6+1,R31
                 _0x200005A:
000937 85e8      	LDD  R30,Y+8
000938 85f9      	LDD  R31,Y+8+1
000939 85aa      	LDD  R26,Y+10
00093a 85bb      	LDD  R27,Y+10+1
00093b 17ae      	CP   R26,R30
00093c 07bf      	CPC  R27,R31
00093d f050      	BRLO _0x200005C
00093e 5f2f      	SUBI R18,-LOW(1)
00093f 85a8      	LDD  R26,Y+8
000940 85b9      	LDD  R27,Y+8+1
000941 85ea      	LDD  R30,Y+10
000942 85fb      	LDD  R31,Y+10+1
000943 1bea      	SUB  R30,R26
000944 0bfb      	SBC  R31,R27
000945 87ea      	STD  Y+10,R30
000946 87fb      	STD  Y+10+1,R31
000947 cfef      	RJMP _0x200005A
                 _0x200005C:
000948 332a      	CPI  R18,58
000949 f028      	BRLO _0x200005D
00094a ff03      	SBRS R16,3
00094b c002      	RJMP _0x200005E
00094c 5f29      	SUBI R18,-LOW(7)
00094d c001      	RJMP _0x200005F
                 _0x200005E:
00094e 5d29      	SUBI R18,-LOW(39)
                 _0x200005F:
                 _0x200005D:
00094f fd04      	SBRC R16,4
000950 c01a      	RJMP _0x2000061
000951 3321      	CPI  R18,49
000952 f420      	BRSH _0x2000063
000953 85a8      	LDD  R26,Y+8
000954 85b9      	LDD  R27,Y+8+1
000955 9711      	SBIW R26,1
000956 f409      	BRNE _0x2000062
                 _0x2000063:
000957 c009      	RJMP _0x20000CD
                 _0x2000062:
000958 1753      	CP   R21,R19
000959 f010      	BRLO _0x2000067
00095a ff00      	SBRS R16,0
00095b c001      	RJMP _0x2000068
                 _0x2000067:
00095c c013      	RJMP _0x2000066
                 _0x2000068:
00095d e220      	LDI  R18,LOW(32)
00095e ff07      	SBRS R16,7
00095f c00b      	RJMP _0x2000069
000960 e320      	LDI  R18,LOW(48)
                 _0x20000CD:
000961 6100      	ORI  R16,LOW(16)
000962 ff02      	SBRS R16,2
000963 c007      	RJMP _0x200006A
000964 7f0b      	ANDI R16,LOW(251)
000965 934a      	ST   -Y,R20
000966 940e 0c8e 	CALL SUBOPT_0x1A
000968 3050      	CPI  R21,0
000969 f009      	BREQ _0x200006B
00096a 5051      	SUBI R21,LOW(1)
                 _0x200006B:
                 _0x200006A:
                 _0x2000069:
                 _0x2000061:
00096b 940e 0c81 	CALL SUBOPT_0x18
00096d 3050      	CPI  R21,0
00096e f009      	BREQ _0x200006C
00096f 5051      	SUBI R21,LOW(1)
                 _0x200006C:
                 _0x2000066:
000970 5031      	SUBI R19,LOW(1)
000971 85a8      	LDD  R26,Y+8
000972 85b9      	LDD  R27,Y+8+1
000973 9712      	SBIW R26,2
000974 f008      	BRLO _0x2000059
000975 cfb5      	RJMP _0x2000058
                 _0x2000059:
                 _0x2000056:
000976 ff00      	SBRS R16,0
000977 c008      	RJMP _0x200006D
                 _0x200006E:
000978 3050      	CPI  R21,0
000979 f031      	BREQ _0x2000070
00097a 5051      	SUBI R21,LOW(1)
00097b e2e0      	LDI  R30,LOW(32)
00097c 93ea      	ST   -Y,R30
00097d 940e 0c8e 	CALL SUBOPT_0x1A
00097f cff8      	RJMP _0x200006E
                 _0x2000070:
                 _0x200006D:
                 _0x2000071:
                 _0x2000030:
                 _0x20000CC:
000980 e010      	LDI  R17,LOW(0)
                 _0x200001B:
000981 cee0      	RJMP _0x2000016
                 _0x2000018:
000982 85ac      	LDD  R26,Y+12
000983 85bd      	LDD  R27,Y+12+1
000984 940e 0cff 	CALL __GETW1P
000986 940e 0d17 	CALL __LOADLOCR6
000988 9664      	ADIW R28,20
000989 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
00098a 92ff      	PUSH R15
00098b 2ef8      	MOV  R15,R24
00098c 9726      	SBIW R28,6
00098d 940e 0d12 	CALL __SAVELOCR4
00098f 940e 0ca6 	CALL SUBOPT_0x1D
000991 9730      	SBIW R30,0
000992 f419      	BRNE _0x2000072
000993 efef      	LDI  R30,LOW(65535)
000994 efff      	LDI  R31,HIGH(65535)
000995 c021      	RJMP _0x20A0005
                 _0x2000072:
000996 01de      	MOVW R26,R28
000997 9616      	ADIW R26,6
000998 940e 0cd7 	CALL __ADDW2R15
00099a 018d      	MOVW R16,R26
00099b 940e 0ca6 	CALL SUBOPT_0x1D
00099d 83ee      	STD  Y+6,R30
00099e 83ff      	STD  Y+6+1,R31
00099f e0e0      	LDI  R30,LOW(0)
0009a0 87e8      	STD  Y+8,R30
0009a1 87e9      	STD  Y+8+1,R30
0009a2 01de      	MOVW R26,R28
0009a3 961a      	ADIW R26,10
0009a4 940e 0cad 	CALL SUBOPT_0x1E
0009a6 93fa      	ST   -Y,R31
0009a7 93ea      	ST   -Y,R30
0009a8 931a      	ST   -Y,R17
0009a9 930a      	ST   -Y,R16
0009aa e1ed      	LDI  R30,LOW(_put_buff_G100)
0009ab e0f8      	LDI  R31,HIGH(_put_buff_G100)
0009ac 93fa      	ST   -Y,R31
0009ad 93ea      	ST   -Y,R30
0009ae 01de      	MOVW R26,R28
0009af 961a      	ADIW R26,10
0009b0 dea5      	RCALL __print_G100
0009b1 019f      	MOVW R18,R30
0009b2 81ae      	LDD  R26,Y+6
0009b3 81bf      	LDD  R27,Y+6+1
0009b4 e0e0      	LDI  R30,LOW(0)
0009b5 93ec      	ST   X,R30
0009b6 01f9      	MOVW R30,R18
                 _0x20A0005:
0009b7 940e 0d19 	CALL __LOADLOCR4
0009b9 962a      	ADIW R28,10
0009ba 90ff      	POP  R15
0009bb 9508      	RET
                 ; .FEND
                 _get_buff_G100:
                 ; .FSTART _get_buff_G100
0009bc 93ba      	ST   -Y,R27
0009bd 93aa      	ST   -Y,R26
0009be 931a      	ST   -Y,R17
0009bf 81a9      	LDD  R26,Y+1
0009c0 81ba      	LDD  R27,Y+1+1
0009c1 e0e0      	LDI  R30,LOW(0)
0009c2 93ec      	ST   X,R30
0009c3 81ab      	LDD  R26,Y+3
0009c4 81bc      	LDD  R27,Y+3+1
0009c5 91ec      	LD   R30,X
0009c6 2f1e      	MOV  R17,R30
0009c7 30e0      	CPI  R30,0
0009c8 f019      	BREQ _0x200007A
0009c9 e0e0      	LDI  R30,LOW(0)
0009ca 93ec      	ST   X,R30
0009cb c016      	RJMP _0x200007B
                 _0x200007A:
0009cc 81a9      	LDD  R26,Y+1
0009cd 81ba      	LDD  R27,Y+1+1
0009ce 9611      	ADIW R26,1
0009cf 940e 0cff 	CALL __GETW1P
0009d1 9730      	SBIW R30,0
0009d2 f071      	BREQ _0x200007C
0009d3 81e9      	LDD  R30,Y+1
0009d4 81fa      	LDD  R31,Y+1+1
0009d5 81a1      	LDD  R26,Z+1
0009d6 81b2      	LDD  R27,Z+2
0009d7 91ec      	LD   R30,X
0009d8 2f1e      	MOV  R17,R30
0009d9 30e0      	CPI  R30,0
0009da f029      	BREQ _0x200007D
0009db 81a9      	LDD  R26,Y+1
0009dc 81ba      	LDD  R27,Y+1+1
0009dd 9611      	ADIW R26,1
0009de 940e 0c7b 	CALL SUBOPT_0x17
                 _0x200007D:
0009e0 c001      	RJMP _0x200007E
                 _0x200007C:
0009e1 e010      	LDI  R17,LOW(0)
                 _0x200007E:
                 _0x200007B:
0009e2 2fe1      	MOV  R30,R17
0009e3 8118      	LDD  R17,Y+0
                 _0x20A0004:
0009e4 9625      	ADIW R28,5
0009e5 9508      	RET
                 ; .FEND
                 __scanf_G100:
                 ; .FSTART __scanf_G100
0009e6 92ff      	PUSH R15
0009e7 93ba      	ST   -Y,R27
0009e8 93aa      	ST   -Y,R26
0009e9 9724      	SBIW R28,4
0009ea 940e 0d10 	CALL __SAVELOCR6
0009ec e0e0      	LDI  R30,LOW(0)
0009ed e0f0      	LDI  R31,HIGH(0)
0009ee 87e8      	STD  Y+8,R30
0009ef 87f9      	STD  Y+8+1,R31
0009f0 2f4e      	MOV  R20,R30
                 _0x200007F:
0009f1 89e8      	LDD  R30,Y+16
0009f2 89f9      	LDD  R31,Y+16+1
0009f3 9631      	ADIW R30,1
0009f4 8be8      	STD  Y+16,R30
0009f5 8bf9      	STD  Y+16+1,R31
0009f6 9731      	SBIW R30,1
0009f7 91e4      	LPM  R30,Z
0009f8 2f3e      	MOV  R19,R30
0009f9 30e0      	CPI  R30,0
0009fa f409      	BRNE PC+2
0009fb c125      	RJMP _0x2000081
0009fc 940e 0cb2 	CALL SUBOPT_0x1F
0009fe f0c1      	BREQ _0x2000082
                 _0x2000083:
0009ff b7ed      	IN   R30,SPL
000a00 b7fe      	IN   R31,SPH
000a01 93fa      	ST   -Y,R31
000a02 93ea      	ST   -Y,R30
000a03 934f      	PUSH R20
000a04 940e 0cb7 	CALL SUBOPT_0x20
000a06 914f      	POP  R20
000a07 2f3e      	MOV  R19,R30
000a08 30e0      	CPI  R30,0
000a09 f019      	BREQ _0x2000086
000a0a 940e 0cb2 	CALL SUBOPT_0x1F
000a0c f409      	BRNE _0x2000087
                 _0x2000086:
000a0d c007      	RJMP _0x2000085
                 _0x2000087:
000a0e 940e 0cbd 	CALL SUBOPT_0x21
000a10 f41c      	BRGE _0x2000088
000a11 efef      	LDI  R30,LOW(65535)
000a12 efff      	LDI  R31,HIGH(65535)
000a13 c10f      	RJMP _0x20A0002
                 _0x2000088:
000a14 cfea      	RJMP _0x2000083
                 _0x2000085:
000a15 2f43      	MOV  R20,R19
000a16 c109      	RJMP _0x2000089
                 _0x2000082:
000a17 3235      	CPI  R19,37
000a18 f009      	BREQ PC+2
000a19 c0ee      	RJMP _0x200008A
000a1a e050      	LDI  R21,LOW(0)
                 _0x200008B:
000a1b 89e8      	LDD  R30,Y+16
000a1c 89f9      	LDD  R31,Y+16+1
000a1d 9135      	LPM  R19,Z+
000a1e 8be8      	STD  Y+16,R30
000a1f 8bf9      	STD  Y+16+1,R31
000a20 3330      	CPI  R19,48
000a21 f010      	BRLO _0x200008F
000a22 333a      	CPI  R19,58
000a23 f008      	BRLO _0x200008E
                 _0x200008F:
000a24 c007      	RJMP _0x200008D
                 _0x200008E:
000a25 e0aa      	LDI  R26,LOW(10)
000a26 9f5a      	MUL  R21,R26
000a27 2d50      	MOV  R21,R0
000a28 2fe3      	MOV  R30,R19
000a29 53e0      	SUBI R30,LOW(48)
000a2a 0f5e      	ADD  R21,R30
000a2b cfef      	RJMP _0x200008B
                 _0x200008D:
000a2c 3030      	CPI  R19,0
000a2d f409      	BRNE _0x2000091
000a2e c0f2      	RJMP _0x2000081
                 _0x2000091:
                 _0x2000092:
000a2f b7ed      	IN   R30,SPL
000a30 b7fe      	IN   R31,SPH
000a31 93fa      	ST   -Y,R31
000a32 93ea      	ST   -Y,R30
000a33 934f      	PUSH R20
000a34 940e 0cb7 	CALL SUBOPT_0x20
000a36 914f      	POP  R20
000a37 2f2e      	MOV  R18,R30
000a38 2fae      	MOV  R26,R30
000a39 940e 0bae 	CALL _isspace
000a3b 30e0      	CPI  R30,0
000a3c f039      	BREQ _0x2000094
000a3d 940e 0cbd 	CALL SUBOPT_0x21
000a3f f41c      	BRGE _0x2000095
000a40 efef      	LDI  R30,LOW(65535)
000a41 efff      	LDI  R31,HIGH(65535)
000a42 c0e0      	RJMP _0x20A0002
                 _0x2000095:
000a43 cfeb      	RJMP _0x2000092
                 _0x2000094:
000a44 3020      	CPI  R18,0
000a45 f409      	BRNE _0x2000096
000a46 c0d1      	RJMP _0x2000097
                 _0x2000096:
000a47 2f42      	MOV  R20,R18
000a48 3050      	CPI  R21,0
000a49 f409      	BRNE _0x2000098
000a4a ef5f      	LDI  R21,LOW(255)
                 _0x2000098:
000a4b 2fe3      	MOV  R30,R19
000a4c 36e3      	CPI  R30,LOW(0x63)
000a4d f499      	BRNE _0x200009C
000a4e 940e 0cc2 	CALL SUBOPT_0x22
000a50 b7ed      	IN   R30,SPL
000a51 b7fe      	IN   R31,SPH
000a52 93fa      	ST   -Y,R31
000a53 93ea      	ST   -Y,R30
000a54 934f      	PUSH R20
000a55 940e 0cb7 	CALL SUBOPT_0x20
000a57 914f      	POP  R20
000a58 01d8      	MOVW R26,R16
000a59 93ec      	ST   X,R30
000a5a 940e 0cbd 	CALL SUBOPT_0x21
000a5c f41c      	BRGE _0x200009D
000a5d efef      	LDI  R30,LOW(65535)
000a5e efff      	LDI  R31,HIGH(65535)
000a5f c0c3      	RJMP _0x20A0002
                 _0x200009D:
000a60 c0a1      	RJMP _0x200009B
                 _0x200009C:
000a61 37e3      	CPI  R30,LOW(0x73)
000a62 f541      	BRNE _0x20000A6
000a63 940e 0cc2 	CALL SUBOPT_0x22
                 _0x200009F:
000a65 2fe5      	MOV  R30,R21
000a66 5051      	SUBI R21,1
000a67 30e0      	CPI  R30,0
000a68 f0f1      	BREQ _0x20000A1
000a69 b7ed      	IN   R30,SPL
000a6a b7fe      	IN   R31,SPH
000a6b 93fa      	ST   -Y,R31
000a6c 93ea      	ST   -Y,R30
000a6d 934f      	PUSH R20
000a6e 940e 0cb7 	CALL SUBOPT_0x20
000a70 914f      	POP  R20
000a71 2f3e      	MOV  R19,R30
000a72 30e0      	CPI  R30,0
000a73 f019      	BREQ _0x20000A3
000a74 940e 0cb2 	CALL SUBOPT_0x1F
000a76 f039      	BREQ _0x20000A2
                 _0x20000A3:
000a77 940e 0cbd 	CALL SUBOPT_0x21
000a79 f41c      	BRGE _0x20000A5
000a7a efef      	LDI  R30,LOW(65535)
000a7b efff      	LDI  R31,HIGH(65535)
000a7c c0a6      	RJMP _0x20A0002
                 _0x20000A5:
000a7d c009      	RJMP _0x20000A1
                 _0x20000A2:
000a7e 931f      	PUSH R17
000a7f 930f      	PUSH R16
                +
000a80 5f0f     +SUBI R16 , LOW ( - 1 )
000a81 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000a82 2fe3      	MOV  R30,R19
000a83 91af      	POP  R26
000a84 91bf      	POP  R27
000a85 93ec      	ST   X,R30
000a86 cfde      	RJMP _0x200009F
                 _0x20000A1:
000a87 01d8      	MOVW R26,R16
000a88 e0e0      	LDI  R30,LOW(0)
000a89 93ec      	ST   X,R30
000a8a c077      	RJMP _0x200009B
                 _0x20000A6:
000a8b 9468      	SET
000a8c f8f1      	BLD  R15,1
000a8d 94e8      	CLT
000a8e f8f2      	BLD  R15,2
000a8f 2fe3      	MOV  R30,R19
000a90 36e4      	CPI  R30,LOW(0x64)
000a91 f011      	BREQ _0x20000AB
000a92 36e9      	CPI  R30,LOW(0x69)
000a93 f419      	BRNE _0x20000AC
                 _0x20000AB:
000a94 94e8      	CLT
000a95 f8f1      	BLD  R15,1
000a96 c002      	RJMP _0x20000AD
                 _0x20000AC:
000a97 37e5      	CPI  R30,LOW(0x75)
000a98 f411      	BRNE _0x20000AE
                 _0x20000AD:
000a99 e02a      	LDI  R18,LOW(10)
000a9a c008      	RJMP _0x20000A9
                 _0x20000AE:
000a9b 37e8      	CPI  R30,LOW(0x78)
000a9c f411      	BRNE _0x20000AF
000a9d e120      	LDI  R18,LOW(16)
000a9e c004      	RJMP _0x20000A9
                 _0x20000AF:
000a9f 32e5      	CPI  R30,LOW(0x25)
000aa0 f409      	BRNE _0x20000B2
000aa1 c066      	RJMP _0x20000B1
                 _0x20000B2:
000aa2 c07e      	RJMP _0x20A0003
                 _0x20000A9:
000aa3 e0e0      	LDI  R30,LOW(0)
000aa4 83ee      	STD  Y+6,R30
000aa5 83ef      	STD  Y+6+1,R30
000aa6 9468      	SET
000aa7 f8f0      	BLD  R15,0
                 _0x20000B3:
000aa8 2fe5      	MOV  R30,R21
000aa9 5051      	SUBI R21,1
000aaa 30e0      	CPI  R30,0
000aab f409      	BRNE PC+2
000aac c046      	RJMP _0x20000B5
000aad b7ed      	IN   R30,SPL
000aae b7fe      	IN   R31,SPH
000aaf 93fa      	ST   -Y,R31
000ab0 93ea      	ST   -Y,R30
000ab1 934f      	PUSH R20
000ab2 940e 0cb7 	CALL SUBOPT_0x20
000ab4 914f      	POP  R20
000ab5 2f3e      	MOV  R19,R30
000ab6 32e1      	CPI  R30,LOW(0x21)
000ab7 f438      	BRSH _0x20000B6
000ab8 940e 0cbd 	CALL SUBOPT_0x21
000aba f41c      	BRGE _0x20000B7
000abb efef      	LDI  R30,LOW(65535)
000abc efff      	LDI  R31,HIGH(65535)
000abd c065      	RJMP _0x20A0002
                 _0x20000B7:
000abe c017      	RJMP _0x20000B8
                 _0x20000B6:
000abf fcf1      	SBRC R15,1
000ac0 c008      	RJMP _0x20000B9
000ac1 9468      	SET
000ac2 f8f1      	BLD  R15,1
000ac3 323d      	CPI  R19,45
000ac4 f411      	BRNE _0x20000BA
000ac5 f8f2      	BLD  R15,2
000ac6 cfe1      	RJMP _0x20000B3
                 _0x20000BA:
000ac7 323b      	CPI  R19,43
000ac8 f2f9      	BREQ _0x20000B3
                 _0x20000B9:
000ac9 3120      	CPI  R18,16
000aca f431      	BRNE _0x20000BC
000acb 2fa3      	MOV  R26,R19
000acc 940e 0bb9 	CALL _isxdigit
000ace 30e0      	CPI  R30,0
000acf f031      	BREQ _0x20000B8
000ad0 c009      	RJMP _0x20000BE
                 _0x20000BC:
000ad1 2fa3      	MOV  R26,R19
000ad2 940e 0ba5 	CALL _isdigit
000ad4 30e0      	CPI  R30,0
000ad5 f421      	BRNE _0x20000BF
                 _0x20000B8:
000ad6 fcf0      	SBRC R15,0
000ad7 c049      	RJMP _0x20000C1
000ad8 2f43      	MOV  R20,R19
000ad9 c019      	RJMP _0x20000B5
                 _0x20000BF:
                 _0x20000BE:
000ada 3631      	CPI  R19,97
000adb f010      	BRLO _0x20000C2
000adc 5537      	SUBI R19,LOW(87)
000add c005      	RJMP _0x20000C3
                 _0x20000C2:
000ade 3431      	CPI  R19,65
000adf f010      	BRLO _0x20000C4
000ae0 5337      	SUBI R19,LOW(55)
000ae1 c001      	RJMP _0x20000C5
                 _0x20000C4:
000ae2 5330      	SUBI R19,LOW(48)
                 _0x20000C5:
                 _0x20000C3:
000ae3 2fe2      	MOV  R30,R18
000ae4 81ae      	LDD  R26,Y+6
000ae5 81bf      	LDD  R27,Y+6+1
000ae6 e0f0      	LDI  R31,0
000ae7 940e 0ce4 	CALL __MULW12U
000ae9 01df      	MOVW R26,R30
000aea 2fe3      	MOV  R30,R19
000aeb e0f0      	LDI  R31,0
000aec 0fea      	ADD  R30,R26
000aed 1ffb      	ADC  R31,R27
000aee 83ee      	STD  Y+6,R30
000aef 83ff      	STD  Y+6+1,R31
000af0 94e8      	CLT
000af1 f8f0      	BLD  R15,0
000af2 cfb5      	RJMP _0x20000B3
                 _0x20000B5:
000af3 940e 0cc2 	CALL SUBOPT_0x22
000af5 fef2      	SBRS R15,2
000af6 c006      	RJMP _0x20000C6
000af7 81ee      	LDD  R30,Y+6
000af8 81ff      	LDD  R31,Y+6+1
000af9 940e 0cdb 	CALL __ANEGW1
000afb 83ee      	STD  Y+6,R30
000afc 83ff      	STD  Y+6+1,R31
                 _0x20000C6:
000afd 81ee      	LDD  R30,Y+6
000afe 81ff      	LDD  R31,Y+6+1
000aff 01d8      	MOVW R26,R16
000b00 93ed      	ST   X+,R30
000b01 93fc      	ST   X,R31
                 _0x200009B:
000b02 85e8      	LDD  R30,Y+8
000b03 85f9      	LDD  R31,Y+8+1
000b04 9631      	ADIW R30,1
000b05 87e8      	STD  Y+8,R30
000b06 87f9      	STD  Y+8+1,R31
000b07 c018      	RJMP _0x20000C7
                 _0x200008A:
                 _0x20000B1:
000b08 b7ed      	IN   R30,SPL
000b09 b7fe      	IN   R31,SPH
000b0a 93fa      	ST   -Y,R31
000b0b 93ea      	ST   -Y,R30
000b0c 934f      	PUSH R20
000b0d 940e 0cb7 	CALL SUBOPT_0x20
000b0f 914f      	POP  R20
000b10 17e3      	CP   R30,R19
000b11 f071      	BREQ _0x20000C8
000b12 940e 0cbd 	CALL SUBOPT_0x21
000b14 f41c      	BRGE _0x20000C9
000b15 efef      	LDI  R30,LOW(65535)
000b16 efff      	LDI  R31,HIGH(65535)
000b17 c00b      	RJMP _0x20A0002
                 _0x20000C9:
                 _0x2000097:
000b18 85e8      	LDD  R30,Y+8
000b19 85f9      	LDD  R31,Y+8+1
000b1a 9730      	SBIW R30,0
000b1b f419      	BRNE _0x20000CA
000b1c efef      	LDI  R30,LOW(65535)
000b1d efff      	LDI  R31,HIGH(65535)
000b1e c004      	RJMP _0x20A0002
                 _0x20000CA:
000b1f c001      	RJMP _0x2000081
                 _0x20000C8:
                 _0x20000C7:
                 _0x2000089:
000b20 ced0      	RJMP _0x200007F
                 _0x2000081:
                 _0x20000C1:
                 _0x20A0003:
000b21 85e8      	LDD  R30,Y+8
000b22 85f9      	LDD  R31,Y+8+1
                 _0x20A0002:
000b23 940e 0d17 	CALL __LOADLOCR6
000b25 9662      	ADIW R28,18
000b26 90ff      	POP  R15
000b27 9508      	RET
                 ; .FEND
                 _sscanf:
                 ; .FSTART _sscanf
000b28 92ff      	PUSH R15
000b29 2ef8      	MOV  R15,R24
000b2a 9723      	SBIW R28,3
000b2b 931a      	ST   -Y,R17
000b2c 930a      	ST   -Y,R16
000b2d 01de      	MOVW R26,R28
000b2e 9617      	ADIW R26,7
000b2f 940e 0cad 	CALL SUBOPT_0x1E
000b31 9730      	SBIW R30,0
000b32 f419      	BRNE _0x20000CB
000b33 efef      	LDI  R30,LOW(65535)
000b34 efff      	LDI  R31,HIGH(65535)
000b35 c01a      	RJMP _0x20A0001
                 _0x20000CB:
000b36 01de      	MOVW R26,R28
000b37 9611      	ADIW R26,1
000b38 940e 0cd7 	CALL __ADDW2R15
000b3a 018d      	MOVW R16,R26
000b3b 01de      	MOVW R26,R28
000b3c 9617      	ADIW R26,7
000b3d 940e 0cad 	CALL SUBOPT_0x1E
000b3f 83eb      	STD  Y+3,R30
000b40 83fc      	STD  Y+3+1,R31
000b41 01de      	MOVW R26,R28
000b42 9615      	ADIW R26,5
000b43 940e 0cad 	CALL SUBOPT_0x1E
000b45 93fa      	ST   -Y,R31
000b46 93ea      	ST   -Y,R30
000b47 931a      	ST   -Y,R17
000b48 930a      	ST   -Y,R16
000b49 ebec      	LDI  R30,LOW(_get_buff_G100)
000b4a e0f9      	LDI  R31,HIGH(_get_buff_G100)
000b4b 93fa      	ST   -Y,R31
000b4c 93ea      	ST   -Y,R30
000b4d 01de      	MOVW R26,R28
000b4e 9618      	ADIW R26,8
000b4f de96      	RCALL __scanf_G100
                 _0x20A0001:
000b50 8119      	LDD  R17,Y+1
000b51 8108      	LDD  R16,Y+0
000b52 9625      	ADIW R28,5
000b53 90ff      	POP  R15
000b54 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _atoi:
                 ; .FSTART _atoi
000b55 93ba      	ST   -Y,R27
000b56 93aa      	ST   -Y,R26
000b57 81b9         	ldd  r27,y+1
000b58 81a8         	ld   r26,y
                 __atoi0:
000b59 91ec         	ld   r30,x
000b5a 2f8a              mov  r24,r26
000b5b 2fae      	MOV  R26,R30
000b5c 940e 0bae 	CALL _isspace
000b5e 2fa8              mov  r26,r24
000b5f 23ee         	tst  r30
000b60 f011         	breq __atoi1
000b61 9611         	adiw r26,1
000b62 cff6         	rjmp __atoi0
                 __atoi1:
000b63 94e8         	clt
000b64 91ec         	ld   r30,x
000b65 32ed         	cpi  r30,'-'
000b66 f411         	brne __atoi2
000b67 9468         	set
000b68 c002         	rjmp __atoi3
                 __atoi2:
000b69 32eb         	cpi  r30,'+'
000b6a f409         	brne __atoi4
                 __atoi3:
000b6b 9611         	adiw r26,1
                 __atoi4:
000b6c 2766         	clr  r22
000b6d 2777         	clr  r23
                 __atoi5:
000b6e 91ec         	ld   r30,x
000b6f 2f8a              mov  r24,r26
000b70 2fae      	MOV  R26,R30
000b71 940e 0ba5 	CALL _isdigit
000b73 2fa8              mov  r26,r24
000b74 23ee         	tst  r30
000b75 f079         	breq __atoi6
000b76 01fb         	movw r30,r22
000b77 0f66         	lsl  r22
000b78 1f77         	rol  r23
000b79 0f66         	lsl  r22
000b7a 1f77         	rol  r23
000b7b 0f6e         	add  r22,r30
000b7c 1f7f         	adc  r23,r31
000b7d 0f66         	lsl  r22
000b7e 1f77         	rol  r23
000b7f 91ed         	ld   r30,x+
000b80 27ff         	clr  r31
000b81 53e0         	subi r30,'0'
000b82 0f6e         	add  r22,r30
000b83 1f7f         	adc  r23,r31
000b84 cfe9         	rjmp __atoi5
                 __atoi6:
000b85 01fb         	movw r30,r22
000b86 f41e         	brtc __atoi7
000b87 95e0         	com  r30
000b88 95f0         	com  r31
000b89 9631         	adiw r30,1
                 __atoi7:
000b8a 9622         	adiw r28,2
000b8b 9508         	ret
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
000b8c 93ba      	ST   -Y,R27
000b8d 93aa      	ST   -Y,R26
000b8e 91a9          ld   r26,y+
000b8f 91b9          ld   r27,y+
000b90 27ee          clr  r30
000b91 27ff          clr  r31
                 strlen0:
000b92 916d          ld   r22,x+
000b93 2366          tst  r22
000b94 f011          breq strlen1
000b95 9631          adiw r30,1
000b96 cffb          rjmp strlen0
                 strlen1:
000b97 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
000b98 93ba      	ST   -Y,R27
000b99 93aa      	ST   -Y,R26
000b9a 27aa          clr  r26
000b9b 27bb          clr  r27
000b9c 91e9          ld   r30,y+
000b9d 91f9          ld   r31,y+
                 strlenf0:
000b9e 9005      	lpm  r0,z+
000b9f 2000          tst  r0
000ba0 f011          breq strlenf1
000ba1 9611          adiw r26,1
000ba2 cffb          rjmp strlenf0
                 strlenf1:
000ba3 01fd          movw r30,r26
000ba4 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _isdigit:
                 ; .FSTART _isdigit
000ba5 93aa      	ST   -Y,R26
000ba6 e0e1          ldi  r30,1
000ba7 91f9          ld   r31,y+
000ba8 33f0          cpi  r31,'0'
000ba9 f010          brlo isdigit0
000baa 33fa          cpi  r31,'9'+1
000bab f008          brlo isdigit1
                 isdigit0:
000bac 27ee          clr  r30
                 isdigit1:
000bad 9508          ret
                 ; .FEND
                 _isspace:
                 ; .FSTART _isspace
000bae 93aa      	ST   -Y,R26
000baf e0e1          ldi  r30,1
000bb0 91f9          ld   r31,y+
000bb1 32f0          cpi  r31,' '
000bb2 f029          breq isspace1
000bb3 30f9          cpi  r31,9
000bb4 f010          brlo isspace0
000bb5 30fe          cpi  r31,13+1
000bb6 f008          brlo isspace1
                 isspace0:
000bb7 27ee          clr  r30
                 isspace1:
000bb8 9508          ret
                 ; .FEND
                 _isxdigit:
                 ; .FSTART _isxdigit
000bb9 93aa      	ST   -Y,R26
000bba e0e1          ldi  r30,1
000bbb 91f9          ld   r31,y+
000bbc 53f0          subi r31,0x30
000bbd f040          brcs isxdigit0
000bbe 30fa          cpi  r31,10
000bbf f038          brcs isxdigit1
000bc0 75ff          andi r31,0x5f
000bc1 50f7          subi r31,7
000bc2 30fa          cpi  r31,10
000bc3 f010          brcs isxdigit0
000bc4 31f0          cpi  r31,16
000bc5 f008          brcs isxdigit1
                 isxdigit0:
000bc6 27ee          clr  r30
                 isxdigit1:
000bc7 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 _keypad:
0005ea           	.BYTE 0x10
                 _WordLen:
0005fa           	.BYTE 0x2
                 _tmp:
0005fc           	.BYTE 0x32
                 _Scoretmp:
00062e           	.BYTE 0x32
                 _Category:
000660           	.BYTE 0x8
                 _Sport:
000668           	.BYTE 0x28
                 _Movie:
000690           	.BYTE 0x28
                 _Countries:
0006b8           	.BYTE 0x28
                 _ComputerScience:
0006e0           	.BYTE 0x28
                 _AWords:
000708           	.BYTE 0xC
                 _BWords:
000714           	.BYTE 0xC
                 _CWords:
000720           	.BYTE 0xE
                 _FWords:
00072e           	.BYTE 0xE
                 _DWords:
00073c           	.BYTE 0xE
                 _Words:
00074a           	.BYTE 0x34
                 _alphabet:
00077e           	.BYTE 0x34
                 _point:
0007b2           	.BYTE 0x2
                 _WordSetState:
0007b4           	.BYTE 0x2
                 _CharIndex:
0007b6           	.BYTE 0x2
                 _ChoosenChar:
0007b8           	.BYTE 0x2
                 _CurrentWord:
0007ba           	.BYTE 0x2
                 _bCanSelectCategory:
0007bc           	.BYTE 0x1
                 _bCanGuess:
0007bd           	.BYTE 0x1
                 _bIsSelectedNumber:
0007be           	.BYTE 0x1
                 _bIsFirstTime:
0007bf           	.BYTE 0x1
                 _bWrongGuess:
0007c0           	.BYTE 0x1
                 _bFoundCorrectGuess:
0007c1           	.BYTE 0x1
                 _bWon:
0007c2           	.BYTE 0x1
                 _health:
0007c3           	.BYTE 0x2
                 __seed_G101:
0007c5           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x0:
000bc8 9896      	CBI  0x12,6
000bc9 9a97      	SBI  0x12,7
                +
000bca e083     +LDI R24 , LOW ( 3 )
                +__DELAY_USB_LOOP :
000bcb 958a     +DEC R24
000bcc f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 3
000bcd 9897      	CBI  0x12,7
                +
000bce ec88     +LDI R24 , LOW ( 200 )
000bcf e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000bd0 9701     +SBIW R24 , 1
000bd1 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000bd2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1:
                +
000bd3 ea80     +LDI R24 , LOW ( 4000 )
000bd4 e09f     +LDI R25 , HIGH ( 4000 )
                +__DELAY_USW_LOOP :
000bd5 9701     +SBIW R24 , 1
000bd6 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 4000
000bd7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:16 WORDS
                 SUBOPT_0x2:
000bd8 93aa      	ST   -Y,R26
000bd9 9724      	SBIW R28,4
000bda e8e0      	LDI  R30,LOW(128)
000bdb 83e8      	ST   Y,R30
000bdc ece0      	LDI  R30,LOW(192)
000bdd 83e9      	STD  Y+1,R30
000bde e9e4      	LDI  R30,LOW(148)
000bdf 83ea      	STD  Y+2,R30
000be0 ede4      	LDI  R30,LOW(212)
000be1 83eb      	STD  Y+3,R30
000be2 81ec      	LDD  R30,Y+4
000be3 e0f0      	LDI  R31,0
000be4 9731      	SBIW R30,1
000be5 01de      	MOVW R26,R28
000be6 0fae      	ADD  R26,R30
000be7 1fbf      	ADC  R27,R31
000be8 91ec      	LD   R30,X
000be9 81ad      	LDD  R26,Y+5
000bea 0fae      	ADD  R26,R30
000beb 50a1      	SUBI R26,LOW(1)
000bec 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x3:
000bed 81a9      	LDD  R26,Y+1
000bee 81ba      	LDD  R27,Y+1+1
000bef 27ee      	CLR  R30
000bf0 0fa1      	ADD  R26,R17
000bf1 1fbe      	ADC  R27,R30
000bf2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4:
000bf3 b3e3      	IN   R30,0x13
000bf4 70ef      	ANDI R30,LOW(0xF)
000bf5 2e5e      	MOV  R5,R30
000bf6 e0ef      	LDI  R30,LOW(15)
000bf7 15e5      	CP   R30,R5
000bf8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x5:
000bf9 9893      	CBI  0x12,3
000bfa 9a94      	SBI  0x12,4
                +
000bfb e083     +LDI R24 , LOW ( 3 )
                +__DELAY_USB_LOOP :
000bfc 958a     +DEC R24
000bfd f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 3
000bfe 9894      	CBI  0x12,4
                +
000bff ec88     +LDI R24 , LOW ( 200 )
000c00 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000c01 9701     +SBIW R24 , 1
000c02 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000c03 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x6:
000c04 920a      	ST   -Y,R0
000c05 921a      	ST   -Y,R1
000c06 92fa      	ST   -Y,R15
000c07 936a      	ST   -Y,R22
000c08 937a      	ST   -Y,R23
000c09 938a      	ST   -Y,R24
000c0a 939a      	ST   -Y,R25
000c0b 93aa      	ST   -Y,R26
000c0c 93ba      	ST   -Y,R27
000c0d 93ea      	ST   -Y,R30
000c0e 93fa      	ST   -Y,R31
000c0f b7ef      	IN   R30,SREG
000c10 93ea      	ST   -Y,R30
000c11 efef      	LDI  R30,LOW(255)
000c12 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x7:
000c13 e0eb      	LDI  R30,LOW(11)
000c14 93ea      	ST   -Y,R30
000c15 e0a4      	LDI  R26,LOW(4)
000c16 940e 0524 	CALL _lcd_gotoxy2
000c18 2488      	CLR  R8
000c19 2499      	CLR  R9
000c1a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x8:
000c1b 940e 0cdf 	CALL __CWD1
000c1d 940e 0d07 	CALL __PUTPARD1
000c1f e084      	LDI  R24,4
000c20 940e 098a 	CALL _sprintf
000c22 9628      	ADIW R28,8
000c23 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9:
000c24 93e0 07b4 	STS  _WordSetState,R30
000c26 93f0 07b5 	STS  _WordSetState+1,R31
000c28 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0xA:
000c29 91e0 07b6 	LDS  R30,_CharIndex
000c2b 91f0 07b7 	LDS  R31,_CharIndex+1
000c2d 9731      	SBIW R30,1
000c2e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB:
000c2f 91a0 07b4 	LDS  R26,_WordSetState
000c31 91b0 07b5 	LDS  R27,_WordSetState+1
000c33 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0xC:
000c34 0fae      	ADD  R26,R30
000c35 1fbf      	ADC  R27,R31
000c36 940e 0cff 	CALL __GETW1P
000c38 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xD:
000c39 efec      	LDI  R30,LOW(_tmp)
000c3a e0f5      	LDI  R31,HIGH(_tmp)
000c3b 93fa      	ST   -Y,R31
000c3c 93ea      	ST   -Y,R30
000c3d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE:
000c3e 01f4      	MOVW R30,R8
000c3f 9631      	ADIW R30,1
000c40 cfda      	RJMP SUBOPT_0x8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xF:
000c41 0fee      	LSL  R30
000c42 1fff      	ROL  R31
000c43 cff0      	RJMP SUBOPT_0xC
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x10:
000c44 93ba      	ST   -Y,R27
000c45 93aa      	ST   -Y,R26
000c46 940e 049f 	CALL _lcd_init
000c48 e0ac      	LDI  R26,LOW(12)
000c49 940c 0491 	JMP  _lcdCommand
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x11:
000c4b 91e0 05fa 	LDS  R30,_WordLen
000c4d 91f0 05fb 	LDS  R31,_WordLen+1
000c4f 168e      	CP   R8,R30
000c50 069f      	CPC  R9,R31
000c51 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x12:
000c52 01f4      	MOVW R30,R8
000c53 81a8      	LD   R26,Y
000c54 81b9      	LDD  R27,Y+1
000c55 0fae      	ADD  R26,R30
000c56 1fbf      	ADC  R27,R31
000c57 91ec      	LD   R30,X
000c58 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x13:
000c59 e0f0      	LDI  R31,0
000c5a 56e1      	SUBI R30,LOW(97)
000c5b 40f0      	SBCI R31,HIGH(97)
000c5c e7ae      	LDI  R26,LOW(_alphabet)
000c5d e0b7      	LDI  R27,HIGH(_alphabet)
000c5e 0fee      	LSL  R30
000c5f 1fff      	ROL  R31
000c60 0fae      	ADD  R26,R30
000c61 1fbf      	ADC  R27,R31
000c62 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x14:
000c63 e0f0      	LDI  R31,0
000c64 56e1      	SUBI R30,LOW(97)
000c65 40f0      	SBCI R31,HIGH(97)
000c66 e7ae      	LDI  R26,LOW(_alphabet)
000c67 e0b7      	LDI  R27,HIGH(_alphabet)
000c68 cfd8      	RJMP SUBOPT_0xF
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x15:
000c69 93ba      	ST   -Y,R27
000c6a 93aa      	ST   -Y,R26
000c6b 940e 0511 	CALL _lcd_init2
000c6d e0ac      	LDI  R26,LOW(12)
000c6e 940e 0503 	CALL _lcdCommand2
000c70 2488      	CLR  R8
000c71 2499      	CLR  R9
000c72 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x16:
000c73 efac      	LDI  R26,LOW(_tmp)
000c74 e0b5      	LDI  R27,HIGH(_tmp)
000c75 940e 052d 	CALL _lcd_print2
000c77 01f4      	MOVW R30,R8
000c78 81a8      	LD   R26,Y
000c79 81b9      	LDD  R27,Y+1
000c7a cfc6      	RJMP SUBOPT_0xF
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x17:
000c7b 91ed      	LD   R30,X+
000c7c 91fd      	LD   R31,X+
000c7d 9631      	ADIW R30,1
000c7e 93fe      	ST   -X,R31
000c7f 93ee      	ST   -X,R30
000c80 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x18:
000c81 932a      	ST   -Y,R18
000c82 85ad      	LDD  R26,Y+13
000c83 85be      	LDD  R27,Y+13+1
000c84 85ef      	LDD  R30,Y+15
000c85 89f8      	LDD  R31,Y+15+1
000c86 9509      	ICALL
000c87 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x19:
000c88 89e8      	LDD  R30,Y+16
000c89 89f9      	LDD  R31,Y+16+1
000c8a 9734      	SBIW R30,4
000c8b 8be8      	STD  Y+16,R30
000c8c 8bf9      	STD  Y+16+1,R31
000c8d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1A:
000c8e 85ad      	LDD  R26,Y+13
000c8f 85be      	LDD  R27,Y+13+1
000c90 85ef      	LDD  R30,Y+15
000c91 89f8      	LDD  R31,Y+15+1
000c92 9509      	ICALL
000c93 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x1B:
000c94 89a8      	LDD  R26,Y+16
000c95 89b9      	LDD  R27,Y+16+1
000c96 9614      	ADIW R26,4
000c97 940e 0cff 	CALL __GETW1P
000c99 83ee      	STD  Y+6,R30
000c9a 83ff      	STD  Y+6+1,R31
000c9b 81ae      	LDD  R26,Y+6
000c9c 81bf      	LDD  R27,Y+6+1
000c9d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1C:
000c9e 89a8      	LDD  R26,Y+16
000c9f 89b9      	LDD  R27,Y+16+1
000ca0 9614      	ADIW R26,4
000ca1 940e 0cff 	CALL __GETW1P
000ca3 87ea      	STD  Y+10,R30
000ca4 87fb      	STD  Y+10+1,R31
000ca5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1D:
000ca6 01de      	MOVW R26,R28
000ca7 961c      	ADIW R26,12
000ca8 940e 0cd7 	CALL __ADDW2R15
000caa 940e 0cff 	CALL __GETW1P
000cac 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1E:
000cad 940e 0cd7 	CALL __ADDW2R15
000caf 940e 0cff 	CALL __GETW1P
000cb1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1F:
000cb2 2fa3      	MOV  R26,R19
000cb3 940e 0bae 	CALL _isspace
000cb5 30e0      	CPI  R30,0
000cb6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x20:
000cb7 85ac      	LDD  R26,Y+12
000cb8 85bd      	LDD  R27,Y+12+1
000cb9 85ee      	LDD  R30,Y+14
000cba 85ff      	LDD  R31,Y+14+1
000cbb 9509      	ICALL
000cbc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x21:
000cbd 85aa      	LDD  R26,Y+10
000cbe 85bb      	LDD  R27,Y+10+1
000cbf 91ac      	LD   R26,X
000cc0 30a0      	CPI  R26,0
000cc1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x22:
000cc2 85ee      	LDD  R30,Y+14
000cc3 85ff      	LDD  R31,Y+14+1
000cc4 9734      	SBIW R30,4
000cc5 87ee      	STD  Y+14,R30
000cc6 87ff      	STD  Y+14+1,R31
000cc7 85ae      	LDD  R26,Y+14
000cc8 85bf      	LDD  R27,Y+14+1
000cc9 9614      	ADIW R26,4
000cca 910d      	LD   R16,X+
000ccb 911c      	LD   R17,X
000ccc 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000ccd 9610      	adiw r26,0
000cce f039      	breq __delay_ms1
                 __delay_ms0:
                +
000ccf ed80     +LDI R24 , LOW ( 0x7D0 )
000cd0 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000cd1 9701     +SBIW R24 , 1
000cd2 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000cd3 95a8      	wdr
000cd4 9711      	sbiw r26,1
000cd5 f7c9      	brne __delay_ms0
                 __delay_ms1:
000cd6 9508      	ret
                 
                 __ADDW2R15:
000cd7 2400      	CLR  R0
000cd8 0daf      	ADD  R26,R15
000cd9 1db0      	ADC  R27,R0
000cda 9508      	RET
                 
                 __ANEGW1:
000cdb 95f1      	NEG  R31
000cdc 95e1      	NEG  R30
000cdd 40f0      	SBCI R31,0
000cde 9508      	RET
                 
                 __CWD1:
000cdf 2f6f      	MOV  R22,R31
000ce0 0f66      	ADD  R22,R22
000ce1 0b66      	SBC  R22,R22
000ce2 2f76      	MOV  R23,R22
000ce3 9508      	RET
                 
                 __MULW12U:
000ce4 9ffa      	MUL  R31,R26
000ce5 2df0      	MOV  R31,R0
000ce6 9feb      	MUL  R30,R27
000ce7 0df0      	ADD  R31,R0
000ce8 9fea      	MUL  R30,R26
000ce9 2de0      	MOV  R30,R0
000cea 0df1      	ADD  R31,R1
000ceb 9508      	RET
                 
                 __MULW12:
000cec d004      	RCALL __CHKSIGNW
000ced dff6      	RCALL __MULW12U
000cee f40e      	BRTC __MULW121
000cef dfeb      	RCALL __ANEGW1
                 __MULW121:
000cf0 9508      	RET
                 
                 __CHKSIGNW:
000cf1 94e8      	CLT
000cf2 fff7      	SBRS R31,7
000cf3 c002      	RJMP __CHKSW1
000cf4 dfe6      	RCALL __ANEGW1
000cf5 9468      	SET
                 __CHKSW1:
000cf6 ffb7      	SBRS R27,7
000cf7 c006      	RJMP __CHKSW2
000cf8 95a0      	COM  R26
000cf9 95b0      	COM  R27
000cfa 9611      	ADIW R26,1
000cfb f800      	BLD  R0,0
000cfc 9403      	INC  R0
000cfd fa00      	BST  R0,0
                 __CHKSW2:
000cfe 9508      	RET
                 
                 __GETW1P:
000cff 91ed      	LD   R30,X+
000d00 91fc      	LD   R31,X
000d01 9711      	SBIW R26,1
000d02 9508      	RET
                 
                 __GETW1PF:
000d03 9005      	LPM  R0,Z+
000d04 91f4      	LPM  R31,Z
000d05 2de0      	MOV  R30,R0
000d06 9508      	RET
                 
                 __PUTPARD1:
000d07 937a      	ST   -Y,R23
000d08 936a      	ST   -Y,R22
000d09 93fa      	ST   -Y,R31
000d0a 93ea      	ST   -Y,R30
000d0b 9508      	RET
                 
                 __CPW02:
000d0c 2400      	CLR  R0
000d0d 160a      	CP   R0,R26
000d0e 060b      	CPC  R0,R27
000d0f 9508      	RET
                 
                 __SAVELOCR6:
000d10 935a      	ST   -Y,R21
                 __SAVELOCR5:
000d11 934a      	ST   -Y,R20
                 __SAVELOCR4:
000d12 933a      	ST   -Y,R19
                 __SAVELOCR3:
000d13 932a      	ST   -Y,R18
                 __SAVELOCR2:
000d14 931a      	ST   -Y,R17
000d15 930a      	ST   -Y,R16
000d16 9508      	RET
                 
                 __LOADLOCR6:
000d17 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000d18 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000d19 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000d1a 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000d1b 8119      	LDD  R17,Y+1
000d1c 8108      	LD   R16,Y
000d1d 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  31 r1 :   4 r2 :   0 r3 :   0 r4 :   4 r5 :   6 r6 :   2 r7 :   8 
r8 :  41 r9 :  18 r10:   1 r11:   0 r12:  10 r13:   4 r14:   0 r15:  21 
r16:  44 r17:  40 r18:  36 r19:  35 r20:  25 r21:  27 r22:  22 r23:  11 
r24:  31 r25:   9 r26: 237 r27: 116 r28:  29 r29:   1 r30: 554 r31: 209 
x  :  49 y  : 311 z  :  19 
Registers used: 31 out of 35 (88.6%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  13 add   :  19 
adiw  :  54 and   :   0 andi  :   7 asr   :   0 bclr  :   0 bld   :   8 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   4 break :   0 breq  :  45 
brge  :  16 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  15 
brlt  :   3 brmi  :   1 brne  :  69 brpl  :   1 brsh  :   3 brtc  :   2 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   1 call  : 157 
cbi   :   8 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  39 cls   :   0 clt   :   5 clv   :   0 clz   :   0 com   :   4 
cp    :  23 cpc   :  17 cpi   :  86 cpse  :   0 dec   :   3 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   3 ijmp  :   0 
in    :  17 inc   :   1 jmp   :  23 ld    :  54 ldd   : 124 ldi   : 320 
lds   :  33 lpm   :  17 lsl   :   8 lsr   :   0 mov   :  58 movw  :  61 
mul   :   5 muls  :   0 mulsu :   0 neg   :   2 nop   :   4 or    :   3 
ori   :   8 out   :  40 pop   :  11 push  :  11 rcall :  61 ret   :  69 
reti  :   1 rjmp  : 152 rol   :   8 ror   :   0 sbc   :   2 sbci  :   6 
sbi   :   4 sbic  :   0 sbis  :   0 sbiw  :  38 sbr   :   0 sbrc  :   4 
sbrs  :  13 sec   :   0 seh   :   0 sei   :   1 sen   :   0 ser   :   0 
ses   :   0 set   :   5 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    : 137 std   :  50 sts   :  35 sub   :   1 subi  :  30 swap  :   0 
tst   :   6 wdr   :   1 
Instructions used: 66 out of 116 (56.9%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x001a3c   4552   2164   6716   32768  20.5%
[.dseg] 0x000060 0x0007c9      0   1385   1385    2048  67.6%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 13 warnings
