;/*******************************************************
;Chip type               : ATmega32
;Program type            : Application
;AVR Core Clock frequency: 1.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 512
;*******************************************************/
;
;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <io.h>
;#include <stdio.h>
;#include <stdlib.h>
;#include <string.h>
;#include <delay.h>
;#include "LCD.h"

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
;	cmnd -> Y+0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;	data -> Y+0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;	x -> Y+5
;	y -> Y+4
;	firstCharAdr -> Y+0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;	*str -> Y+1
;	i -> R17
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0

	.DSEG

	.CSEG
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
	NOP
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
	NOP
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
	NOP
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
	NOP
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;#include <string.h>
;#include <stdbool.h>
;#include "LCD2.h"
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;	cmnd -> Y+0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;	data -> Y+0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;	x -> Y+5
;	y -> Y+4
;	firstCharAdr -> Y+0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;	*str -> Y+1
;	i -> R17
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;
;unsigned char out;
;unsigned char SelectedCategory;
;int i;
;char* h;
;
;int WordIndex = 0;
;int WordLen;
;char tmp[50];
;char Scoretmp[50];
;#define  CATEGORY_LENGTH    4
;#define MAX_HEALTH 3
;#define MAX_WORD_NUM 20
;char* Category[CATEGORY_LENGTH] = {"Sport","Movie","Countries","CS"};

	.DSEG
_0x16:
	.BYTE 0x19
;char* Sport[20] = {"football","basketball","volleyball","karate","kungfu","boxing","tennis","running","wrestling","hocke ...
;                    "judo","golf","baseball","billiard","curling","waterpolo","taekwando","fencing","swimming","jujitsu" ...
_0x18:
	.BYTE 0xA5
;char * Movie[20] ={"joker","batman","godfather","lizard","soul","incredibles","memento","arrival","buried","cube","blade ...
;               "shining","pyscho","titanic","vertigo","exam","nocturnalanimals","swissarmyman","seperation"
;               };
_0x1A:
	.BYTE 0xAA
;
;char * Countries[20]={"iran","germany","brazil","england","argentina","sweden","samoa","china","uae","uzbakistan"
;                        ,"denmark","ghana","bangladesh","venezuela","zimbawe","nigeria","luxembourg","greece","france"," ...
_0x1C:
	.BYTE 0x9B
;
;char * ComputerScience[20]={"code","debug","compiler","java","boolean","operatingsystem","github","function","syntax" ," ...
;                            "argument","python","machinelearning","interpreter","google","query","algorithm","kernel","p ...
;
;};
_0x1E:
	.BYTE 0xAF
;char* AWords[6] = { "a","b","c","d","e","f" };
_0x20:
	.BYTE 0xC
;char* BWords[6] = { "g","h","i","j","k","l" };
_0x22:
	.BYTE 0xC
;char* CWords[7] = { "m","n","o","p","q","r","s" };
_0x24:
	.BYTE 0xE
;char* FWords[7] = { "t","u","v","w","x","y","z" };
_0x26:
	.BYTE 0xE
;char* DWords[7] = { "t","u","v","w","x","y","z" };
_0x28:
	.BYTE 0xE
;
;char* Words[26] = { "a","b","c","d","e","f", "g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y" ...
_0x2A:
	.BYTE 0x34
;
;int alphabet[26];
;
;int point;
;
;int WordSetState = 0;
;
;int CharIndex; // index of words set
; char* ChoosenChar;
;char* CurrentWord;
;
;bool bCanSelectCategory;
;bool bCanGuess;
;bool bIsSelectedNumber;
;bool bIsFirstTime;
;bool bWrongGuess;
;bool bFoundCorrectGuess;
;bool bWon;
;
;int health = MAX_HEALTH;
;
;void CheckGuess( char* in,char* CurrWord);
;
;void ShowCategory();
;
;
;void SelectAndShowWord(unsigned char in);
;
;void ShowRandomWord(char* InputStr);
;
;void Print6( char* in[6]);
;
;void Print7(char*  in[7]);
;void InitAlphabet();
;void InitHealth();
;void EndGame();
;void CalculatePoint();
;
;// Timer1 overflow interrupt service routine
;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
; 0000 005E {

	.CSEG
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
; 0000 005F // Reinitialize Timer1 value
; 0000 0060 TCNT1H=0xFF;
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
; 0000 0061 TCNT1L=0x0F;
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
; 0000 0062 // Place your code here
; 0000 0063 
; 0000 0064 lcd_gotoxy2(11,4);
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
; 0000 0065 for ( i = 0 ; i < 3; i++){
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
; 0000 0066 
; 0000 0067     lcd_print2(" ");
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
; 0000 0068 }
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
; 0000 0069 lcd_gotoxy2(11,4);
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
; 0000 006A 
; 0000 006B for ( i = 0 ; i < health; i++){
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
; 0000 006C 
; 0000 006D     lcd_print2("*");
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
; 0000 006E }
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
; 0000 006F 
; 0000 0070 
; 0000 0071      sprintf(Scoretmp,"Score: %d",point);
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
; 0000 0072 
; 0000 0073       lcd_gotoxy2(10,3);
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
; 0000 0074       lcd_print2(Scoretmp);
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
; 0000 0075       lcd_print2(" ");
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
; 0000 0076       lcd_print2(" ");
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
; 0000 0077       lcd_print2(" ");
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
; 0000 0078 }
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0

	.DSEG
_0x30:
	.BYTE 0xA
;
;void main(void)
; 0000 007B {

	.CSEG
;PCODE: $00000191 VOL: 0
; 0000 007C 
; 0000 007D TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
; 0000 007E TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (1<<CS12) | (0<<CS11) | (0<<CS10);
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
; 0000 007F TCNT1H=0xFF;
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
; 0000 0080 TCNT1L=0x0F;
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
; 0000 0081 ICR1H=0x00;
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
; 0000 0082 ICR1L=0x00;
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
; 0000 0083 OCR1AH=0x00;
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
; 0000 0084 OCR1AL=0x00;
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
; 0000 0085 OCR1BH=0x00;
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
; 0000 0086 OCR1BL=0x00;
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
; 0000 0087 
; 0000 0088 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0089 TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (1<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
; 0000 008A 
; 0000 008B     bIsFirstTime = true;
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
; 0000 008C      MCUCR=0x02;
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
; 0000 008D      GICR=(1<<INT0);
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
; 0000 008E 
; 0000 008F 
; 0000 0090     KEY_DDR = 0xF0;
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
; 0000 0091     KEY_PRT = 0x0F;
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
; 0000 0092     i=0;
;PCODE: $000001B2 VOL: 0
; 0000 0093 
; 0000 0094 // Global enable interrupts
; 0000 0095 
; 0000 0096 
; 0000 0097 
; 0000 0098 
; 0000 0099     ShowCategory();
;PCODE: $000001B3 VOL: 0
; 0000 009A 
; 0000 009B     lcd_init2();
;PCODE: $000001B4 VOL: 0
; 0000 009C     lcd_gotoxy2(1,1);
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
; 0000 009D     lcd_print2("Second Lcd");
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
; 0000 009E #asm("sei")
;PCODE: $000001BC VOL: 0
	sei
;PCODE: $000001BD VOL: 0
; 0000 009F 
; 0000 00A0 while (1)
;PCODE: $000001BE VOL: 0
; 0000 00A1       {
; 0000 00A2       // Place your code here
; 0000 00A3 
; 0000 00A4       }
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
; 0000 00A5 }
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0

	.DSEG
_0x34:
	.BYTE 0xB
;
;
;
;
;interrupt [EXT_INT0] void ext_int0_isr(void)
; 0000 00AB {

	.CSEG
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
; 0000 00AC 
; 0000 00AD   DDRA=0xFF;
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
; 0000 00AE   PORTA=0x00;
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
; 0000 00AF 
; 0000 00B0  lcd_gotoxy(1,1);
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
; 0000 00B1 
; 0000 00B2  out=get_key();
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
; 0000 00B3 
; 0000 00B4 
; 0000 00B5 
; 0000 00B6  if(bCanSelectCategory == true)
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
; 0000 00B7  {
; 0000 00B8 
; 0000 00B9     if(atoi(&out) >= 1 && atoi(&out) <= CATEGORY_LENGTH)  //Check If input is valid
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
; 0000 00BA     {
; 0000 00BB        bCanSelectCategory = false;
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
; 0000 00BC        SelectedCategory = out;
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
; 0000 00BD        SelectAndShowWord(out);
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
; 0000 00BE 
; 0000 00BF     }
; 0000 00C0  }
;PCODE: $000001E5 VOL: 0
; 0000 00C1  else if ( bCanGuess == true )
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
; 0000 00C2  {
; 0000 00C3 
; 0000 00C4 
; 0000 00C5 
; 0000 00C6     if(out == 'A')
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
; 0000 00C7        {
; 0000 00C8             WordSetState = 0;
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
; 0000 00C9             Print6( AWords);
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
; 0000 00CA 
; 0000 00CB             bIsFirstTime = false;
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
; 0000 00CC        }
; 0000 00CD        else if(out == 'B')
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
; 0000 00CE        {
; 0000 00CF             WordSetState = 1;
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
; 0000 00D0             Print6( BWords);
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
; 0000 00D1             bIsFirstTime = false;
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
; 0000 00D2        }
; 0000 00D3        else if(out == 'C')
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
; 0000 00D4        {
; 0000 00D5             WordSetState = 2;
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
; 0000 00D6             Print7( CWords);
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
; 0000 00D7             bIsFirstTime = false;
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
; 0000 00D8        }
; 0000 00D9        else if(out == 'D')
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
; 0000 00DA        {
; 0000 00DB             WordSetState = 3;
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
; 0000 00DC             Print7( FWords);
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
; 0000 00DD             bIsFirstTime = false;
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
; 0000 00DE        }else
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
; 0000 00DF        {
; 0000 00E0            if(!bIsFirstTime)
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
; 0000 00E1            {
; 0000 00E2                 if(out == '#')
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
; 0000 00E3                 {
; 0000 00E4                     //todo UpperCase
; 0000 00E5                 }
; 0000 00E6                 else
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
; 0000 00E7                 {
; 0000 00E8                      bIsSelectedNumber = true;
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
; 0000 00E9                 }
;PCODE: $00000221 VOL: 0
; 0000 00EA 
; 0000 00EB            }
; 0000 00EC        }
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
; 0000 00ED 
; 0000 00EE 
; 0000 00EF     if(bIsSelectedNumber)
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
; 0000 00F0     {
; 0000 00F1         bIsSelectedNumber = false;
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
; 0000 00F2 
; 0000 00F3         h = &out;
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
; 0000 00F4         sscanf(&out,"%d",&CharIndex);
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
;PCODE: $00000239 VOL: 0
; 0000 00F5 
; 0000 00F6 
; 0000 00F7 
; 0000 00F8         if(WordSetState == 0)
;PCODE: $0000023A VOL: 0
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
; 0000 00F9         {
; 0000 00FA                 ChoosenChar = AWords[CharIndex - 1];
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
; 0000 00FB 
; 0000 00FC         }
; 0000 00FD         else if ( WordSetState == 1)
;PCODE: $00000244 VOL: 0
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
;PCODE: $00000247 VOL: 0
;PCODE: $00000248 VOL: 0
; 0000 00FE         {
; 0000 00FF                ChoosenChar = BWords[CharIndex - 1];
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
;PCODE: $0000024B VOL: 0
;PCODE: $0000024C VOL: 0
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
;PCODE: $0000024F VOL: 0
; 0000 0100 
; 0000 0101         }
; 0000 0102         else if ( WordSetState == 2)
;PCODE: $00000250 VOL: 0
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
;PCODE: $00000254 VOL: 0
; 0000 0103         {
; 0000 0104                ChoosenChar = CWords[CharIndex - 1];
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
;PCODE: $00000257 VOL: 0
;PCODE: $00000258 VOL: 0
;PCODE: $00000259 VOL: 0
;PCODE: $0000025A VOL: 0
;PCODE: $0000025B VOL: 0
; 0000 0105         }
; 0000 0106         else if ( WordSetState == 3)
;PCODE: $0000025C VOL: 0
;PCODE: $0000025D VOL: 0
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
;PCODE: $00000260 VOL: 0
; 0000 0107         {
; 0000 0108               ChoosenChar = DWords[CharIndex - 1];
;PCODE: $00000261 VOL: 0
;PCODE: $00000262 VOL: 0
;PCODE: $00000263 VOL: 0
;PCODE: $00000264 VOL: 0
;PCODE: $00000265 VOL: 0
;PCODE: $00000266 VOL: 0
;PCODE: $00000267 VOL: 0
; 0000 0109         }
; 0000 010A 
; 0000 010B         //lcd_print2(&ChoosenChar);
; 0000 010C         CheckGuess(ChoosenChar, CurrentWord);
;PCODE: $00000268 VOL: 0
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
;PCODE: $0000026B VOL: 0
;PCODE: $0000026C VOL: 0
;PCODE: $0000026D VOL: 0
;PCODE: $0000026E VOL: 0
;PCODE: $0000026F VOL: 0
; 0000 010D 
; 0000 010E     }
; 0000 010F 
; 0000 0110 
; 0000 0111  }
;PCODE: $00000270 VOL: 0
; 0000 0112 
; 0000 0113 
; 0000 0114   KEY_DDR = 0xF0;
;PCODE: $00000271 VOL: 0
;PCODE: $00000272 VOL: 0
;PCODE: $00000273 VOL: 0
;PCODE: $00000274 VOL: 0
; 0000 0115   KEY_PRT = 0x0F;
;PCODE: $00000275 VOL: 0
;PCODE: $00000276 VOL: 0
; 0000 0116 
; 0000 0117 }
;PCODE: $00000277 VOL: 0
;PCODE: $00000278 VOL: 0
;PCODE: $00000279 VOL: 0
;
;
;  void ShowCategory()
; 0000 011B   {
;PCODE: $0000027A VOL: 0
;PCODE: $0000027B VOL: 0
; 0000 011C 
; 0000 011D 
; 0000 011E 
; 0000 011F         InitAlphabet();
;PCODE: $0000027C VOL: 0
; 0000 0120         InitHealth();
;PCODE: $0000027D VOL: 0
; 0000 0121         lcd_init();
;PCODE: $0000027E VOL: 0
; 0000 0122         WordIndex = 0;
;PCODE: $0000027F VOL: 0
; 0000 0123         point = 0;
;PCODE: $00000280 VOL: 0
;PCODE: $00000281 VOL: 0
; 0000 0124         WordIndex = 0;
;PCODE: $00000282 VOL: 0
; 0000 0125        lcd_gotoxy(1,1);
;PCODE: $00000283 VOL: 0
;PCODE: $00000284 VOL: 0
;PCODE: $00000285 VOL: 0
;PCODE: $00000286 VOL: 0
; 0000 0126 
; 0000 0127        for(i = 0 ; i < CATEGORY_LENGTH ; i++)
;PCODE: $00000287 VOL: 0
;PCODE: $00000288 VOL: 0
;PCODE: $00000289 VOL: 0
;PCODE: $0000028A VOL: 0
;PCODE: $0000028B VOL: 0
;PCODE: $0000028C VOL: 0
;PCODE: $0000028D VOL: 0
;PCODE: $0000028E VOL: 0
;PCODE: $0000028F VOL: 0
; 0000 0128        {
; 0000 0129             if(i != 0)
;PCODE: $00000290 VOL: 0
;PCODE: $00000291 VOL: 0
; 0000 012A                 sprintf(tmp," %d.",i+1);
;PCODE: $00000292 VOL: 0
;PCODE: $00000293 VOL: 0
;PCODE: $00000294 VOL: 0
;PCODE: $00000295 VOL: 0
;PCODE: $00000296 VOL: 0
;PCODE: $00000297 VOL: 0
;PCODE: $00000298 VOL: 0
;PCODE: $00000299 VOL: 0
;PCODE: $0000029A VOL: 0
;PCODE: $0000029B VOL: 0
;PCODE: $0000029C VOL: 0
;PCODE: $0000029D VOL: 0
;PCODE: $0000029E VOL: 0
; 0000 012B             else
;PCODE: $0000029F VOL: 0
;PCODE: $000002A0 VOL: 0
; 0000 012C                 sprintf(tmp,"%d.",i+1);
;PCODE: $000002A1 VOL: 0
;PCODE: $000002A2 VOL: 0
;PCODE: $000002A3 VOL: 0
;PCODE: $000002A4 VOL: 0
;PCODE: $000002A5 VOL: 0
;PCODE: $000002A6 VOL: 0
;PCODE: $000002A7 VOL: 0
;PCODE: $000002A8 VOL: 0
;PCODE: $000002A9 VOL: 0
;PCODE: $000002AA VOL: 0
;PCODE: $000002AB VOL: 0
;PCODE: $000002AC VOL: 0
;PCODE: $000002AD VOL: 0
; 0000 012D 
; 0000 012E             lcd_print(tmp);
;PCODE: $000002AE VOL: 0
;PCODE: $000002AF VOL: 0
;PCODE: $000002B0 VOL: 0
; 0000 012F             lcd_print(Category[i]);
;PCODE: $000002B1 VOL: 0
;PCODE: $000002B2 VOL: 0
;PCODE: $000002B3 VOL: 0
;PCODE: $000002B4 VOL: 0
;PCODE: $000002B5 VOL: 0
;PCODE: $000002B6 VOL: 0
;PCODE: $000002B7 VOL: 0
; 0000 0130        }
;PCODE: $000002B8 VOL: 0
;PCODE: $000002B9 VOL: 0
;PCODE: $000002BA VOL: 0
;PCODE: $000002BB VOL: 0
;PCODE: $000002BC VOL: 0
;PCODE: $000002BD VOL: 0
; 0000 0131 
; 0000 0132        bCanSelectCategory = true;
;PCODE: $000002BE VOL: 0
;PCODE: $000002BF VOL: 0
; 0000 0133   }
;PCODE: $000002C0 VOL: 0
;PCODE: $000002C1 VOL: 0
;
;  void SelectAndShowWord(unsigned char in)
; 0000 0136   {
;PCODE: $000002C2 VOL: 0
;PCODE: $000002C3 VOL: 0
; 0000 0137       if(WordIndex > MAX_WORD_NUM - 1)
;PCODE: $000002C4 VOL: 0
;	in -> Y+0
;PCODE: $000002C5 VOL: 0
;PCODE: $000002C6 VOL: 0
;PCODE: $000002C7 VOL: 0
; 0000 0138       {
; 0000 0139 
; 0000 013A            bWon = true;
;PCODE: $000002C8 VOL: 0
;PCODE: $000002C9 VOL: 0
; 0000 013B            EndGame();
;PCODE: $000002CA VOL: 0
; 0000 013C       }
; 0000 013D       else
;PCODE: $000002CB VOL: 0
;PCODE: $000002CC VOL: 0
; 0000 013E       {
; 0000 013F 
; 0000 0140           //Init and seed
; 0000 0141           switch(in)
;PCODE: $000002CD VOL: 0
;PCODE: $000002CE VOL: 0
; 0000 0142           {
; 0000 0143             case '1':
;PCODE: $000002CF VOL: 0
;PCODE: $000002D0 VOL: 0
; 0000 0144                     CurrentWord = Sport[WordIndex];
;PCODE: $000002D1 VOL: 0
;PCODE: $000002D2 VOL: 0
;PCODE: $000002D3 VOL: 0
;PCODE: $000002D4 VOL: 0
;PCODE: $000002D5 VOL: 0
;PCODE: $000002D6 VOL: 0
; 0000 0145                     ShowRandomWord(CurrentWord);
;PCODE: $000002D7 VOL: 0
;PCODE: $000002D8 VOL: 0
; 0000 0146                     break;
;PCODE: $000002D9 VOL: 0
; 0000 0147             case '2':
;PCODE: $000002DA VOL: 0
;PCODE: $000002DB VOL: 0
;PCODE: $000002DC VOL: 0
; 0000 0148                     CurrentWord = Movie[WordIndex];
;PCODE: $000002DD VOL: 0
;PCODE: $000002DE VOL: 0
;PCODE: $000002DF VOL: 0
;PCODE: $000002E0 VOL: 0
;PCODE: $000002E1 VOL: 0
;PCODE: $000002E2 VOL: 0
; 0000 0149                     ShowRandomWord(CurrentWord);
;PCODE: $000002E3 VOL: 0
;PCODE: $000002E4 VOL: 0
; 0000 014A                     break;
;PCODE: $000002E5 VOL: 0
; 0000 014B             case '3':
;PCODE: $000002E6 VOL: 0
;PCODE: $000002E7 VOL: 0
;PCODE: $000002E8 VOL: 0
; 0000 014C                     CurrentWord = Countries[WordIndex];
;PCODE: $000002E9 VOL: 0
;PCODE: $000002EA VOL: 0
;PCODE: $000002EB VOL: 0
;PCODE: $000002EC VOL: 0
;PCODE: $000002ED VOL: 0
;PCODE: $000002EE VOL: 0
; 0000 014D                     ShowRandomWord(CurrentWord);
;PCODE: $000002EF VOL: 0
;PCODE: $000002F0 VOL: 0
; 0000 014E                     break;
;PCODE: $000002F1 VOL: 0
; 0000 014F             case '4':
;PCODE: $000002F2 VOL: 0
;PCODE: $000002F3 VOL: 0
;PCODE: $000002F4 VOL: 0
; 0000 0150 
; 0000 0151                 CurrentWord = ComputerScience[WordIndex];
;PCODE: $000002F5 VOL: 0
;PCODE: $000002F6 VOL: 0
;PCODE: $000002F7 VOL: 0
;PCODE: $000002F8 VOL: 0
;PCODE: $000002F9 VOL: 0
;PCODE: $000002FA VOL: 0
; 0000 0152                 ShowRandomWord(CurrentWord);
;PCODE: $000002FB VOL: 0
;PCODE: $000002FC VOL: 0
; 0000 0153                 break;
;PCODE: $000002FD VOL: 0
; 0000 0154           }
;PCODE: $000002FE VOL: 0
; 0000 0155 
; 0000 0156                 WordIndex = (WordIndex+ 1) ;
;PCODE: $000002FF VOL: 0
;PCODE: $00000300 VOL: 0
;PCODE: $00000301 VOL: 0
; 0000 0157       }
;PCODE: $00000302 VOL: 0
; 0000 0158 
; 0000 0159   }
;PCODE: $00000303 VOL: 0
;PCODE: $00000304 VOL: 0
;PCODE: $00000305 VOL: 0
;
;  void ShowRandomWord(char* InputStr)
; 0000 015C   {
;PCODE: $00000306 VOL: 0
;PCODE: $00000307 VOL: 0
; 0000 015D 
; 0000 015E      lcd_init();
;PCODE: $00000308 VOL: 0
;	*InputStr -> Y+0
;PCODE: $00000309 VOL: 0
; 0000 015F      lcdCommand(0x0c);
;PCODE: $0000030A VOL: 0
;PCODE: $0000030B VOL: 0
; 0000 0160      WordLen = strlen(InputStr);
;PCODE: $0000030C VOL: 0
;PCODE: $0000030D VOL: 0
;PCODE: $0000030E VOL: 0
; 0000 0161      InitAlphabet();
;PCODE: $0000030F VOL: 0
; 0000 0162 
; 0000 0163 
; 0000 0164 
; 0000 0165      for(  i = 0 ; i < WordLen ; i++)
;PCODE: $00000310 VOL: 0
;PCODE: $00000311 VOL: 0
;PCODE: $00000312 VOL: 0
;PCODE: $00000313 VOL: 0
;PCODE: $00000314 VOL: 0
;PCODE: $00000315 VOL: 0
;PCODE: $00000316 VOL: 0
;PCODE: $00000317 VOL: 0
;PCODE: $00000318 VOL: 0
; 0000 0166      {
; 0000 0167        alphabet[InputStr[i] - 'a'] = 1;
;PCODE: $00000319 VOL: 0
;PCODE: $0000031A VOL: 0
;PCODE: $0000031B VOL: 0
;PCODE: $0000031C VOL: 0
;PCODE: $0000031D VOL: 0
;PCODE: $0000031E VOL: 0
;PCODE: $0000031F VOL: 0
;PCODE: $00000320 VOL: 0
;PCODE: $00000321 VOL: 0
;PCODE: $00000322 VOL: 0
;PCODE: $00000323 VOL: 0
; 0000 0168 
; 0000 0169 
; 0000 016A          lcd_print("_ ");
;PCODE: $00000324 VOL: 0
;PCODE: $00000325 VOL: 0
;PCODE: $00000326 VOL: 0
; 0000 016B 
; 0000 016C      }
;PCODE: $00000327 VOL: 0
;PCODE: $00000328 VOL: 0
;PCODE: $00000329 VOL: 0
;PCODE: $0000032A VOL: 0
;PCODE: $0000032B VOL: 0
;PCODE: $0000032C VOL: 0
; 0000 016D       bCanGuess = true;
;PCODE: $0000032D VOL: 0
;PCODE: $0000032E VOL: 0
; 0000 016E   }
;PCODE: $0000032F VOL: 0
;PCODE: $00000330 VOL: 0
;PCODE: $00000331 VOL: 0

	.DSEG
_0x63:
	.BYTE 0x3
;
;
;  void CheckGuess( char* in,char* CurrWord)
; 0000 0172   {

	.CSEG
;PCODE: $00000332 VOL: 0
;PCODE: $00000333 VOL: 0
; 0000 0173 
; 0000 0174 
; 0000 0175 
; 0000 0176 
; 0000 0177       lcd_init();
;PCODE: $00000334 VOL: 0
;	*in -> Y+2
;	*CurrWord -> Y+0
;PCODE: $00000335 VOL: 0
; 0000 0178 
; 0000 0179      lcdCommand(0x0c);
;PCODE: $00000336 VOL: 0
;PCODE: $00000337 VOL: 0
; 0000 017A      bWrongGuess = true;
;PCODE: $00000338 VOL: 0
;PCODE: $00000339 VOL: 0
; 0000 017B 
; 0000 017C      for(  i = 0 ; i < WordLen ; i++)
;PCODE: $0000033A VOL: 0
;PCODE: $0000033B VOL: 0
;PCODE: $0000033C VOL: 0
;PCODE: $0000033D VOL: 0
;PCODE: $0000033E VOL: 0
;PCODE: $0000033F VOL: 0
;PCODE: $00000340 VOL: 0
;PCODE: $00000341 VOL: 0
;PCODE: $00000342 VOL: 0
; 0000 017D      {
; 0000 017E 
; 0000 017F          if( in[0] == CurrWord[i] )
;PCODE: $00000343 VOL: 0
;PCODE: $00000344 VOL: 0
;PCODE: $00000345 VOL: 0
;PCODE: $00000346 VOL: 0
;PCODE: $00000347 VOL: 0
;PCODE: $00000348 VOL: 0
;PCODE: $00000349 VOL: 0
;PCODE: $0000034A VOL: 0
; 0000 0180          {
; 0000 0181             alphabet[in[0] - 'a'] = 2;
;PCODE: $0000034B VOL: 0
;PCODE: $0000034C VOL: 0
;PCODE: $0000034D VOL: 0
;PCODE: $0000034E VOL: 0
;PCODE: $0000034F VOL: 0
;PCODE: $00000350 VOL: 0
;PCODE: $00000351 VOL: 0
;PCODE: $00000352 VOL: 0
;PCODE: $00000353 VOL: 0
; 0000 0182             bWrongGuess = false;
;PCODE: $00000354 VOL: 0
;PCODE: $00000355 VOL: 0
; 0000 0183          }
; 0000 0184 
; 0000 0185      }
;PCODE: $00000356 VOL: 0
;PCODE: $00000357 VOL: 0
;PCODE: $00000358 VOL: 0
;PCODE: $00000359 VOL: 0
;PCODE: $0000035A VOL: 0
;PCODE: $0000035B VOL: 0
;PCODE: $0000035C VOL: 0
; 0000 0186 
; 0000 0187 
; 0000 0188 
; 0000 0189      bFoundCorrectGuess = true;
;PCODE: $0000035D VOL: 0
;PCODE: $0000035E VOL: 0
; 0000 018A      for(  i = 0 ; i < WordLen ; i++)
;PCODE: $0000035F VOL: 0
;PCODE: $00000360 VOL: 0
;PCODE: $00000361 VOL: 0
;PCODE: $00000362 VOL: 0
;PCODE: $00000363 VOL: 0
;PCODE: $00000364 VOL: 0
;PCODE: $00000365 VOL: 0
;PCODE: $00000366 VOL: 0
;PCODE: $00000367 VOL: 0
; 0000 018B      {
; 0000 018C 
; 0000 018D          if( alphabet[CurrWord[i] - 'a'] == 2 )
;PCODE: $00000368 VOL: 0
;PCODE: $00000369 VOL: 0
;PCODE: $0000036A VOL: 0
;PCODE: $0000036B VOL: 0
;PCODE: $0000036C VOL: 0
;PCODE: $0000036D VOL: 0
;PCODE: $0000036E VOL: 0
;PCODE: $0000036F VOL: 0
;PCODE: $00000370 VOL: 0
;PCODE: $00000371 VOL: 0
;PCODE: $00000372 VOL: 0
;PCODE: $00000373 VOL: 0
; 0000 018E          {
; 0000 018F 
; 0000 0190             lcd_print(Words[CurrWord[i] - 'a'] );
;PCODE: $00000374 VOL: 0
;PCODE: $00000375 VOL: 0
;PCODE: $00000376 VOL: 0
;PCODE: $00000377 VOL: 0
;PCODE: $00000378 VOL: 0
;PCODE: $00000379 VOL: 0
;PCODE: $0000037A VOL: 0
;PCODE: $0000037B VOL: 0
;PCODE: $0000037C VOL: 0
;PCODE: $0000037D VOL: 0
;PCODE: $0000037E VOL: 0
;PCODE: $0000037F VOL: 0
; 0000 0191 
; 0000 0192             lcd_print(" ");
;PCODE: $00000380 VOL: 0
;PCODE: $00000381 VOL: 0
;PCODE: $00000382 VOL: 0
; 0000 0193          }
; 0000 0194          else if( alphabet[CurrWord[i] - 'a'] == 1 )
;PCODE: $00000383 VOL: 0
;PCODE: $00000384 VOL: 0
;PCODE: $00000385 VOL: 0
;PCODE: $00000386 VOL: 0
;PCODE: $00000387 VOL: 0
;PCODE: $00000388 VOL: 0
;PCODE: $00000389 VOL: 0
;PCODE: $0000038A VOL: 0
;PCODE: $0000038B VOL: 0
;PCODE: $0000038C VOL: 0
;PCODE: $0000038D VOL: 0
;PCODE: $0000038E VOL: 0
;PCODE: $0000038F VOL: 0
;PCODE: $00000390 VOL: 0
; 0000 0195          {
; 0000 0196               bFoundCorrectGuess = false;
;PCODE: $00000391 VOL: 0
;PCODE: $00000392 VOL: 0
; 0000 0197               lcd_print("_ ");
;PCODE: $00000393 VOL: 0
;PCODE: $00000394 VOL: 0
;PCODE: $00000395 VOL: 0
; 0000 0198          }
; 0000 0199 
; 0000 019A 
; 0000 019B      }
;PCODE: $00000396 VOL: 0
;PCODE: $00000397 VOL: 0
;PCODE: $00000398 VOL: 0
;PCODE: $00000399 VOL: 0
;PCODE: $0000039A VOL: 0
;PCODE: $0000039B VOL: 0
;PCODE: $0000039C VOL: 0
;PCODE: $0000039D VOL: 0
; 0000 019C 
; 0000 019D           if(bWrongGuess)
;PCODE: $0000039E VOL: 0
;PCODE: $0000039F VOL: 0
;PCODE: $000003A0 VOL: 0
; 0000 019E      {
; 0000 019F          health -= 1;
;PCODE: $000003A1 VOL: 0
;PCODE: $000003A2 VOL: 0
;PCODE: $000003A3 VOL: 0
; 0000 01A0             if( health <= 0)
;PCODE: $000003A4 VOL: 0
;PCODE: $000003A5 VOL: 0
;PCODE: $000003A6 VOL: 0
; 0000 01A1             {
; 0000 01A2                 bWon = false;
;PCODE: $000003A7 VOL: 0
;PCODE: $000003A8 VOL: 0
; 0000 01A3                 EndGame();
;PCODE: $000003A9 VOL: 0
; 0000 01A4             }
; 0000 01A5      }
;PCODE: $000003AA VOL: 0
; 0000 01A6 
; 0000 01A7      if(bFoundCorrectGuess)
;PCODE: $000003AB VOL: 0
;PCODE: $000003AC VOL: 0
;PCODE: $000003AD VOL: 0
;PCODE: $000003AE VOL: 0
; 0000 01A8      {
; 0000 01A9 
; 0000 01AA          CalculatePoint();
;PCODE: $000003AF VOL: 0
; 0000 01AB          delay_ms(100);
;PCODE: $000003B0 VOL: 0
;PCODE: $000003B1 VOL: 0
;PCODE: $000003B2 VOL: 0
; 0000 01AC          lcd_init();
;PCODE: $000003B3 VOL: 0
; 0000 01AD          lcd_print("Correct!");
;PCODE: $000003B4 VOL: 0
;PCODE: $000003B5 VOL: 0
;PCODE: $000003B6 VOL: 0
; 0000 01AE          delay_ms(100);
;PCODE: $000003B7 VOL: 0
;PCODE: $000003B8 VOL: 0
;PCODE: $000003B9 VOL: 0
; 0000 01AF          InitHealth();
;PCODE: $000003BA VOL: 0
; 0000 01B0          SelectAndShowWord(SelectedCategory);
;PCODE: $000003BB VOL: 0
;PCODE: $000003BC VOL: 0
; 0000 01B1      }
; 0000 01B2 
; 0000 01B3 
; 0000 01B4 
; 0000 01B5 
; 0000 01B6 
; 0000 01B7       //bIsFirstTime = true;
; 0000 01B8   }
;PCODE: $000003BD VOL: 0
;PCODE: $000003BE VOL: 0
;PCODE: $000003BF VOL: 0
;PCODE: $000003C0 VOL: 0

	.DSEG
_0x6C:
	.BYTE 0xE
;
;
;  void InitAlphabet()
; 0000 01BC   {

	.CSEG
;PCODE: $000003C1 VOL: 0
;PCODE: $000003C2 VOL: 0
; 0000 01BD     for( i = 0 ; i < 25 ; i++)
;PCODE: $000003C3 VOL: 0
;PCODE: $000003C4 VOL: 0
;PCODE: $000003C5 VOL: 0
;PCODE: $000003C6 VOL: 0
;PCODE: $000003C7 VOL: 0
;PCODE: $000003C8 VOL: 0
;PCODE: $000003C9 VOL: 0
;PCODE: $000003CA VOL: 0
;PCODE: $000003CB VOL: 0
; 0000 01BE         alphabet[i] = 0;
;PCODE: $000003CC VOL: 0
;PCODE: $000003CD VOL: 0
;PCODE: $000003CE VOL: 0
;PCODE: $000003CF VOL: 0
;PCODE: $000003D0 VOL: 0
;PCODE: $000003D1 VOL: 0
;PCODE: $000003D2 VOL: 0
;PCODE: $000003D3 VOL: 0
;PCODE: $000003D4 VOL: 0
;PCODE: $000003D5 VOL: 0
;PCODE: $000003D6 VOL: 0
;PCODE: $000003D7 VOL: 0
; 0000 01C0 }
;PCODE: $000003D8 VOL: 0
;PCODE: $000003D9 VOL: 0
;
;  void Print6( char* in[6])
; 0000 01C3   {
;PCODE: $000003DA VOL: 0
;PCODE: $000003DB VOL: 0
; 0000 01C4 
; 0000 01C5 
; 0000 01C6     lcd_init2();
;PCODE: $000003DC VOL: 0
;	in -> Y+0
;PCODE: $000003DD VOL: 0
; 0000 01C7     lcdCommand2(0x0c);
;PCODE: $000003DE VOL: 0
;PCODE: $000003DF VOL: 0
; 0000 01C8 
; 0000 01C9     for(i = 0 ; i < 6 ; i++)
;PCODE: $000003E0 VOL: 0
;PCODE: $000003E1 VOL: 0
;PCODE: $000003E2 VOL: 0
;PCODE: $000003E3 VOL: 0
;PCODE: $000003E4 VOL: 0
;PCODE: $000003E5 VOL: 0
;PCODE: $000003E6 VOL: 0
;PCODE: $000003E7 VOL: 0
;PCODE: $000003E8 VOL: 0
; 0000 01CA     {
; 0000 01CB          if(i != 0)
;PCODE: $000003E9 VOL: 0
;PCODE: $000003EA VOL: 0
; 0000 01CC                 sprintf(tmp," %d.",i+1);
;PCODE: $000003EB VOL: 0
;PCODE: $000003EC VOL: 0
;PCODE: $000003ED VOL: 0
;PCODE: $000003EE VOL: 0
;PCODE: $000003EF VOL: 0
;PCODE: $000003F0 VOL: 0
;PCODE: $000003F1 VOL: 0
;PCODE: $000003F2 VOL: 0
;PCODE: $000003F3 VOL: 0
;PCODE: $000003F4 VOL: 0
;PCODE: $000003F5 VOL: 0
;PCODE: $000003F6 VOL: 0
;PCODE: $000003F7 VOL: 0
; 0000 01CD             else
;PCODE: $000003F8 VOL: 0
;PCODE: $000003F9 VOL: 0
; 0000 01CE                 sprintf(tmp,"%d.",i+1);
;PCODE: $000003FA VOL: 0
;PCODE: $000003FB VOL: 0
;PCODE: $000003FC VOL: 0
;PCODE: $000003FD VOL: 0
;PCODE: $000003FE VOL: 0
;PCODE: $000003FF VOL: 0
;PCODE: $00000400 VOL: 0
;PCODE: $00000401 VOL: 0
;PCODE: $00000402 VOL: 0
;PCODE: $00000403 VOL: 0
;PCODE: $00000404 VOL: 0
;PCODE: $00000405 VOL: 0
;PCODE: $00000406 VOL: 0
; 0000 01CF 
; 0000 01D0 
; 0000 01D1             lcd_print2(tmp);
;PCODE: $00000407 VOL: 0
;PCODE: $00000408 VOL: 0
;PCODE: $00000409 VOL: 0
; 0000 01D2             lcd_print2(in[i]);
;PCODE: $0000040A VOL: 0
;PCODE: $0000040B VOL: 0
;PCODE: $0000040C VOL: 0
;PCODE: $0000040D VOL: 0
;PCODE: $0000040E VOL: 0
;PCODE: $0000040F VOL: 0
;PCODE: $00000410 VOL: 0
; 0000 01D3     }
;PCODE: $00000411 VOL: 0
;PCODE: $00000412 VOL: 0
;PCODE: $00000413 VOL: 0
;PCODE: $00000414 VOL: 0
;PCODE: $00000415 VOL: 0
;PCODE: $00000416 VOL: 0
; 0000 01D4   }
;PCODE: $00000417 VOL: 0
;PCODE: $00000418 VOL: 0
;PCODE: $00000419 VOL: 0
;
;    void Print7(char*  in[7])
; 0000 01D7   {
;PCODE: $0000041A VOL: 0
;PCODE: $0000041B VOL: 0
; 0000 01D8 
; 0000 01D9 
; 0000 01DA 
; 0000 01DB     lcd_init2();
;PCODE: $0000041C VOL: 0
;	in -> Y+0
;PCODE: $0000041D VOL: 0
; 0000 01DC     lcdCommand2(0x0c);
;PCODE: $0000041E VOL: 0
;PCODE: $0000041F VOL: 0
; 0000 01DD 
; 0000 01DE     for(i = 0 ; i < 7 ; i++)
;PCODE: $00000420 VOL: 0
;PCODE: $00000421 VOL: 0
;PCODE: $00000422 VOL: 0
;PCODE: $00000423 VOL: 0
;PCODE: $00000424 VOL: 0
;PCODE: $00000425 VOL: 0
;PCODE: $00000426 VOL: 0
;PCODE: $00000427 VOL: 0
;PCODE: $00000428 VOL: 0
; 0000 01DF     {
; 0000 01E0          if(i != 0)
;PCODE: $00000429 VOL: 0
;PCODE: $0000042A VOL: 0
; 0000 01E1                 sprintf(tmp," %d.",i+1);
;PCODE: $0000042B VOL: 0
;PCODE: $0000042C VOL: 0
;PCODE: $0000042D VOL: 0
;PCODE: $0000042E VOL: 0
;PCODE: $0000042F VOL: 0
;PCODE: $00000430 VOL: 0
;PCODE: $00000431 VOL: 0
;PCODE: $00000432 VOL: 0
;PCODE: $00000433 VOL: 0
;PCODE: $00000434 VOL: 0
;PCODE: $00000435 VOL: 0
;PCODE: $00000436 VOL: 0
;PCODE: $00000437 VOL: 0
; 0000 01E2             else
;PCODE: $00000438 VOL: 0
;PCODE: $00000439 VOL: 0
; 0000 01E3                 sprintf(tmp,"%d.",i+1);
;PCODE: $0000043A VOL: 0
;PCODE: $0000043B VOL: 0
;PCODE: $0000043C VOL: 0
;PCODE: $0000043D VOL: 0
;PCODE: $0000043E VOL: 0
;PCODE: $0000043F VOL: 0
;PCODE: $00000440 VOL: 0
;PCODE: $00000441 VOL: 0
;PCODE: $00000442 VOL: 0
;PCODE: $00000443 VOL: 0
;PCODE: $00000444 VOL: 0
;PCODE: $00000445 VOL: 0
;PCODE: $00000446 VOL: 0
; 0000 01E4 
; 0000 01E5 
; 0000 01E6             lcd_print2(tmp);
;PCODE: $00000447 VOL: 0
;PCODE: $00000448 VOL: 0
;PCODE: $00000449 VOL: 0
; 0000 01E7             lcd_print2(in[i]);
;PCODE: $0000044A VOL: 0
;PCODE: $0000044B VOL: 0
;PCODE: $0000044C VOL: 0
;PCODE: $0000044D VOL: 0
;PCODE: $0000044E VOL: 0
;PCODE: $0000044F VOL: 0
;PCODE: $00000450 VOL: 0
; 0000 01E8     }
;PCODE: $00000451 VOL: 0
;PCODE: $00000452 VOL: 0
;PCODE: $00000453 VOL: 0
;PCODE: $00000454 VOL: 0
;PCODE: $00000455 VOL: 0
;PCODE: $00000456 VOL: 0
; 0000 01E9   }
;PCODE: $00000457 VOL: 0
;PCODE: $00000458 VOL: 0
;PCODE: $00000459 VOL: 0
;
;  void InitHealth()
; 0000 01EC   {
;PCODE: $0000045A VOL: 0
;PCODE: $0000045B VOL: 0
; 0000 01ED     health = MAX_HEALTH;
;PCODE: $0000045C VOL: 0
;PCODE: $0000045D VOL: 0
; 0000 01EE 
; 0000 01EF   }
;PCODE: $0000045E VOL: 0
;PCODE: $0000045F VOL: 0
;
;
;
;  void EndGame()
; 0000 01F4   {
;PCODE: $00000460 VOL: 0
;PCODE: $00000461 VOL: 0
; 0000 01F5 
; 0000 01F6       bCanGuess = false;
;PCODE: $00000462 VOL: 0
;PCODE: $00000463 VOL: 0
; 0000 01F7       //todo lcd print
; 0000 01F8       lcd_init();
;PCODE: $00000464 VOL: 0
; 0000 01F9       if(bWon)
;PCODE: $00000465 VOL: 0
;PCODE: $00000466 VOL: 0
;PCODE: $00000467 VOL: 0
; 0000 01FA       {
; 0000 01FB            lcd_print("You Won, hooray :) ");
;PCODE: $00000468 VOL: 0
;PCODE: $00000469 VOL: 0
;PCODE: $0000046A VOL: 0
; 0000 01FC       }
; 0000 01FD       else
;PCODE: $0000046B VOL: 0
;PCODE: $0000046C VOL: 0
; 0000 01FE       {
; 0000 01FF            lcd_print("GAME OVER!!                   try again");
;PCODE: $0000046D VOL: 0
;PCODE: $0000046E VOL: 0
;PCODE: $0000046F VOL: 0
; 0000 0200       }
;PCODE: $00000470 VOL: 0
; 0000 0201 
; 0000 0202       delay_ms(200);
;PCODE: $00000471 VOL: 0
;PCODE: $00000472 VOL: 0
;PCODE: $00000473 VOL: 0
; 0000 0203       InitHealth();
;PCODE: $00000474 VOL: 0
; 0000 0204       ShowCategory();
;PCODE: $00000475 VOL: 0
; 0000 0205 
; 0000 0206   }
;PCODE: $00000476 VOL: 0
;PCODE: $00000477 VOL: 0

	.DSEG
_0x80:
	.BYTE 0x3C
;
;  void CalculatePoint()
; 0000 0209   {

	.CSEG
;PCODE: $00000478 VOL: 0
;PCODE: $00000479 VOL: 0
; 0000 020A 
; 0000 020B      point += ( WordLen * 10 + WordIndex);
;PCODE: $0000047A VOL: 0
;PCODE: $0000047B VOL: 0
;PCODE: $0000047C VOL: 0
;PCODE: $0000047D VOL: 0
;PCODE: $0000047E VOL: 0
;PCODE: $0000047F VOL: 0
;PCODE: $00000480 VOL: 0
; 0000 020C 
; 0000 020D   }
;PCODE: $00000481 VOL: 0
;PCODE: $00000482 VOL: 0
